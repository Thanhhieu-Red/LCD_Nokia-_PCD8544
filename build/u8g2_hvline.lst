ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8g2_hvline.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8g2_clip_intersection2,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	u8g2_clip_intersection2:
  23              	.LFB0:
  24              		.file 1 "Core/u8g2/u8g2_hvline.c"
   1:Core/u8g2/u8g2_hvline.c **** /*
   2:Core/u8g2/u8g2_hvline.c **** 
   3:Core/u8g2/u8g2_hvline.c ****   u8g2_hvline.c
   4:Core/u8g2/u8g2_hvline.c **** 
   5:Core/u8g2/u8g2_hvline.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:Core/u8g2/u8g2_hvline.c **** 
   7:Core/u8g2/u8g2_hvline.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:Core/u8g2/u8g2_hvline.c ****   All rights reserved.
   9:Core/u8g2/u8g2_hvline.c **** 
  10:Core/u8g2/u8g2_hvline.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:Core/u8g2/u8g2_hvline.c ****   are permitted provided that the following conditions are met:
  12:Core/u8g2/u8g2_hvline.c **** 
  13:Core/u8g2/u8g2_hvline.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:Core/u8g2/u8g2_hvline.c ****     of conditions and the following disclaimer.
  15:Core/u8g2/u8g2_hvline.c ****     
  16:Core/u8g2/u8g2_hvline.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:Core/u8g2/u8g2_hvline.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:Core/u8g2/u8g2_hvline.c ****     materials provided with the distribution.
  19:Core/u8g2/u8g2_hvline.c **** 
  20:Core/u8g2/u8g2_hvline.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:Core/u8g2/u8g2_hvline.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:Core/u8g2/u8g2_hvline.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:Core/u8g2/u8g2_hvline.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:Core/u8g2/u8g2_hvline.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:Core/u8g2/u8g2_hvline.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:Core/u8g2/u8g2_hvline.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:Core/u8g2/u8g2_hvline.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:Core/u8g2/u8g2_hvline.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:Core/u8g2/u8g2_hvline.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:Core/u8g2/u8g2_hvline.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:Core/u8g2/u8g2_hvline.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32:Core/u8g2/u8g2_hvline.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:Core/u8g2/u8g2_hvline.c **** 
  34:Core/u8g2/u8g2_hvline.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 2


  35:Core/u8g2/u8g2_hvline.c ****   Calltree
  36:Core/u8g2/u8g2_hvline.c ****   
  37:Core/u8g2/u8g2_hvline.c ****     void u8g2_DrawHVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
  38:Core/u8g2/u8g2_hvline.c ****     u8g2->cb->draw_l90
  39:Core/u8g2/u8g2_hvline.c ****     u8g2_draw_hv_line_2dir
  40:Core/u8g2/u8g2_hvline.c ****     u8g2->ll_hvline(u8g2, x, y, len, dir);
  41:Core/u8g2/u8g2_hvline.c ****     
  42:Core/u8g2/u8g2_hvline.c **** 
  43:Core/u8g2/u8g2_hvline.c **** */
  44:Core/u8g2/u8g2_hvline.c **** 
  45:Core/u8g2/u8g2_hvline.c **** #include <assert.h>
  46:Core/u8g2/u8g2_hvline.c **** #include "../u8g2/u8g2.h"
  47:Core/u8g2/u8g2_hvline.c **** 
  48:Core/u8g2/u8g2_hvline.c **** /*==========================================================*/
  49:Core/u8g2/u8g2_hvline.c **** /* intersection procedure */
  50:Core/u8g2/u8g2_hvline.c **** 
  51:Core/u8g2/u8g2_hvline.c **** /*
  52:Core/u8g2/u8g2_hvline.c ****   Description:
  53:Core/u8g2/u8g2_hvline.c ****     clip range from pos a (included) with line len (a+len excluded) agains c (included) to d (exclu
  54:Core/u8g2/u8g2_hvline.c ****   Assumptions:
  55:Core/u8g2/u8g2_hvline.c ****     len > 0
  56:Core/u8g2/u8g2_hvline.c ****     c <= d		(this is not checked)
  57:Core/u8g2/u8g2_hvline.c ****   will return 0 if there is no intersection and if a > b
  58:Core/u8g2/u8g2_hvline.c **** 
  59:Core/u8g2/u8g2_hvline.c **** */
  60:Core/u8g2/u8g2_hvline.c **** 
  61:Core/u8g2/u8g2_hvline.c **** static uint8_t u8g2_clip_intersection2(u8g2_uint_t *ap, u8g2_uint_t *len, u8g2_uint_t c, u8g2_uint_
  62:Core/u8g2/u8g2_hvline.c **** {
  25              		.loc 1 62 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31 0000 30B4     		push	{r4, r5}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 5, -4
  63:Core/u8g2/u8g2_hvline.c ****   u8g2_uint_t a = *ap;
  36              		.loc 1 63 0
  37 0002 0578     		ldrb	r5, [r0]	@ zero_extendqisi2
  38              	.LVL1:
  64:Core/u8g2/u8g2_hvline.c ****   u8g2_uint_t b;
  65:Core/u8g2/u8g2_hvline.c ****   b  = a;
  66:Core/u8g2/u8g2_hvline.c ****   b += *len;
  39              		.loc 1 66 0
  40 0004 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
  41 0006 2C44     		add	r4, r4, r5
  42 0008 E4B2     		uxtb	r4, r4
  43              	.LVL2:
  67:Core/u8g2/u8g2_hvline.c **** 
  68:Core/u8g2/u8g2_hvline.c ****   /*
  69:Core/u8g2/u8g2_hvline.c ****     Description:
  70:Core/u8g2/u8g2_hvline.c ****       clip range from a (included) to b (excluded) agains c (included) to d (excluded)
  71:Core/u8g2/u8g2_hvline.c ****     Assumptions:
  72:Core/u8g2/u8g2_hvline.c ****       a <= b		(violation is checked and handled correctly)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 3


  73:Core/u8g2/u8g2_hvline.c ****       c <= d		(this is not checked)
  74:Core/u8g2/u8g2_hvline.c ****     will return 0 if there is no intersection and if a > b
  75:Core/u8g2/u8g2_hvline.c **** 
  76:Core/u8g2/u8g2_hvline.c ****     optimized clipping: c is set to 0 --> 27 Oct 2018: again removed the c==0 assumption
  77:Core/u8g2/u8g2_hvline.c ****     
  78:Core/u8g2/u8g2_hvline.c ****     replaced by uint8_t u8g2_clip_intersection2
  79:Core/u8g2/u8g2_hvline.c ****   */
  80:Core/u8g2/u8g2_hvline.c **** 
  81:Core/u8g2/u8g2_hvline.c ****   /* handle the a>b case correctly. If code and time is critical, this could */
  82:Core/u8g2/u8g2_hvline.c ****   /* be removed completly (be aware about memory curruption for wrong */
  83:Core/u8g2/u8g2_hvline.c ****   /* arguments) or return 0 for a>b (will lead to skipped lines for wrong */
  84:Core/u8g2/u8g2_hvline.c ****   /* arguments) */  
  85:Core/u8g2/u8g2_hvline.c ****   
  86:Core/u8g2/u8g2_hvline.c ****   /* removing the following if clause completly may lead to memory corruption of a>b */
  87:Core/u8g2/u8g2_hvline.c ****   if ( a > b )
  44              		.loc 1 87 0
  45 000a A542     		cmp	r5, r4
  46 000c 03D9     		bls	.L2
  88:Core/u8g2/u8g2_hvline.c ****   {    
  89:Core/u8g2/u8g2_hvline.c ****     /* replacing this if with a simple "return 0;" will not handle the case with negative a */    
  90:Core/u8g2/u8g2_hvline.c ****     if ( a < d )
  47              		.loc 1 90 0
  48 000e 9D42     		cmp	r5, r3
  49 0010 10D2     		bcs	.L6
  50              	.LVL3:
  91:Core/u8g2/u8g2_hvline.c ****     {
  92:Core/u8g2/u8g2_hvline.c ****       b = d;
  93:Core/u8g2/u8g2_hvline.c ****       b--;
  51              		.loc 1 93 0
  52 0012 5C1E     		subs	r4, r3, #1
  53 0014 E4B2     		uxtb	r4, r4
  54              	.LVL4:
  55              	.L2:
  94:Core/u8g2/u8g2_hvline.c ****     }
  95:Core/u8g2/u8g2_hvline.c ****     else
  96:Core/u8g2/u8g2_hvline.c ****     {
  97:Core/u8g2/u8g2_hvline.c ****       a = c;
  98:Core/u8g2/u8g2_hvline.c ****     }
  99:Core/u8g2/u8g2_hvline.c ****   }
 100:Core/u8g2/u8g2_hvline.c ****   
 101:Core/u8g2/u8g2_hvline.c ****   /* from now on, the asumption a <= b is ok */
 102:Core/u8g2/u8g2_hvline.c ****   
 103:Core/u8g2/u8g2_hvline.c ****   if ( a >= d )
  56              		.loc 1 103 0
  57 0016 9D42     		cmp	r5, r3
  58 0018 0ED2     		bcs	.L7
 104:Core/u8g2/u8g2_hvline.c ****     return 0;
 105:Core/u8g2/u8g2_hvline.c ****   if ( b <= c )
  59              		.loc 1 105 0
  60 001a 9442     		cmp	r4, r2
  61 001c 0FD9     		bls	.L8
 106:Core/u8g2/u8g2_hvline.c ****     return 0;
 107:Core/u8g2/u8g2_hvline.c ****   if ( a < c )		
  62              		.loc 1 107 0
  63 001e 9542     		cmp	r5, r2
  64 0020 00D3     		bcc	.L4
  65 0022 2A46     		mov	r2, r5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 4


  66              	.LVL5:
  67              	.L4:
 108:Core/u8g2/u8g2_hvline.c ****     a = c;
 109:Core/u8g2/u8g2_hvline.c ****   if ( b > d )
  68              		.loc 1 109 0
  69 0024 9C42     		cmp	r4, r3
  70 0026 00D8     		bhi	.L5
  71 0028 2346     		mov	r3, r4
  72              	.LVL6:
  73              	.L5:
 110:Core/u8g2/u8g2_hvline.c ****     b = d;
 111:Core/u8g2/u8g2_hvline.c ****   
 112:Core/u8g2/u8g2_hvline.c ****   *ap = a;
  74              		.loc 1 112 0
  75 002a 0270     		strb	r2, [r0]
 113:Core/u8g2/u8g2_hvline.c ****   b -= a;
  76              		.loc 1 113 0
  77 002c 9B1A     		subs	r3, r3, r2
  78              	.LVL7:
 114:Core/u8g2/u8g2_hvline.c ****   *len = b;
  79              		.loc 1 114 0
  80 002e 0B70     		strb	r3, [r1]
 115:Core/u8g2/u8g2_hvline.c ****   return 1;
  81              		.loc 1 115 0
  82 0030 0120     		movs	r0, #1
  83              	.LVL8:
  84 0032 02E0     		b	.L3
  85              	.LVL9:
  86              	.L6:
  97:Core/u8g2/u8g2_hvline.c ****     }
  87              		.loc 1 97 0
  88 0034 1546     		mov	r5, r2
  89              	.LVL10:
  90 0036 EEE7     		b	.L2
  91              	.LVL11:
  92              	.L7:
 104:Core/u8g2/u8g2_hvline.c ****   if ( b <= c )
  93              		.loc 1 104 0
  94 0038 0020     		movs	r0, #0
  95              	.LVL12:
  96              	.L3:
 116:Core/u8g2/u8g2_hvline.c **** }
  97              		.loc 1 116 0
  98 003a 30BC     		pop	{r4, r5}
  99              	.LCFI1:
 100              		.cfi_remember_state
 101              		.cfi_restore 5
 102              		.cfi_restore 4
 103              		.cfi_def_cfa_offset 0
 104 003c 7047     		bx	lr
 105              	.LVL13:
 106              	.L8:
 107              	.LCFI2:
 108              		.cfi_restore_state
 106:Core/u8g2/u8g2_hvline.c ****   if ( a < c )		
 109              		.loc 1 106 0
 110 003e 0020     		movs	r0, #0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 5


 111              	.LVL14:
 112 0040 FBE7     		b	.L3
 113              		.cfi_endproc
 114              	.LFE0:
 116              		.section	.text.u8g2_draw_hv_line_2dir,"ax",%progbits
 117              		.align	1
 118              		.global	u8g2_draw_hv_line_2dir
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu softvfp
 124              	u8g2_draw_hv_line_2dir:
 125              	.LFB1:
 117:Core/u8g2/u8g2_hvline.c **** 
 118:Core/u8g2/u8g2_hvline.c **** 
 119:Core/u8g2/u8g2_hvline.c **** 
 120:Core/u8g2/u8g2_hvline.c **** /*==========================================================*/
 121:Core/u8g2/u8g2_hvline.c **** /* draw procedures */
 122:Core/u8g2/u8g2_hvline.c **** 
 123:Core/u8g2/u8g2_hvline.c **** /*
 124:Core/u8g2/u8g2_hvline.c ****   x,y		Upper left position of the line within the pixel buffer 
 125:Core/u8g2/u8g2_hvline.c ****   len		length of the line in pixel, len must not be 0
 126:Core/u8g2/u8g2_hvline.c ****   dir		0: horizontal line (left to right)
 127:Core/u8g2/u8g2_hvline.c **** 		1: vertical line (top to bottom)
 128:Core/u8g2/u8g2_hvline.c ****   This function first adjusts the y position to the local buffer. Then it
 129:Core/u8g2/u8g2_hvline.c ****   will clip the line and call u8g2_draw_low_level_hv_line()
 130:Core/u8g2/u8g2_hvline.c **** 
 131:Core/u8g2/u8g2_hvline.c **** */
 132:Core/u8g2/u8g2_hvline.c **** void u8g2_draw_hv_line_2dir(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t di
 133:Core/u8g2/u8g2_hvline.c **** {
 126              		.loc 1 133 0
 127              		.cfi_startproc
 128              		@ args = 4, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              	.LVL15:
 131 0000 30B5     		push	{r4, r5, lr}
 132              	.LCFI3:
 133              		.cfi_def_cfa_offset 12
 134              		.cfi_offset 4, -12
 135              		.cfi_offset 5, -8
 136              		.cfi_offset 14, -4
 137 0002 83B0     		sub	sp, sp, #12
 138              	.LCFI4:
 139              		.cfi_def_cfa_offset 24
 134:Core/u8g2/u8g2_hvline.c **** 
 135:Core/u8g2/u8g2_hvline.c ****   /* clipping happens before the display rotation */
 136:Core/u8g2/u8g2_hvline.c **** 
 137:Core/u8g2/u8g2_hvline.c ****   /* transform to pixel buffer coordinates */
 138:Core/u8g2/u8g2_hvline.c ****   y -= u8g2->pixel_curr_row;
 140              		.loc 1 138 0
 141 0004 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 142 0008 121B     		subs	r2, r2, r4
 143              	.LVL16:
 139:Core/u8g2/u8g2_hvline.c ****   
 140:Core/u8g2/u8g2_hvline.c ****   u8g2->ll_hvline(u8g2, x, y, len, dir);
 144              		.loc 1 140 0
 145 000a 046B     		ldr	r4, [r0, #48]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 6


 146 000c 9DF81850 		ldrb	r5, [sp, #24]	@ zero_extendqisi2
 147 0010 0095     		str	r5, [sp]
 148 0012 D2B2     		uxtb	r2, r2
 149 0014 A047     		blx	r4
 150              	.LVL17:
 141:Core/u8g2/u8g2_hvline.c **** }
 151              		.loc 1 141 0
 152 0016 03B0     		add	sp, sp, #12
 153              	.LCFI5:
 154              		.cfi_def_cfa_offset 12
 155              		@ sp needed
 156 0018 30BD     		pop	{r4, r5, pc}
 157              		.cfi_endproc
 158              	.LFE1:
 160              		.section	.text.u8g2_DrawHVLine,"ax",%progbits
 161              		.align	1
 162              		.global	u8g2_DrawHVLine
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu softvfp
 168              	u8g2_DrawHVLine:
 169              	.LFB2:
 142:Core/u8g2/u8g2_hvline.c **** 
 143:Core/u8g2/u8g2_hvline.c **** 
 144:Core/u8g2/u8g2_hvline.c **** /*
 145:Core/u8g2/u8g2_hvline.c ****   This is the toplevel function for the hv line draw procedures.
 146:Core/u8g2/u8g2_hvline.c ****   This function should be called by the user.
 147:Core/u8g2/u8g2_hvline.c ****   
 148:Core/u8g2/u8g2_hvline.c ****   "dir" may have 4 directions: 0 (left to right), 1, 2, 3 (down up)
 149:Core/u8g2/u8g2_hvline.c **** */
 150:Core/u8g2/u8g2_hvline.c **** void u8g2_DrawHVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
 151:Core/u8g2/u8g2_hvline.c **** {
 170              		.loc 1 151 0
 171              		.cfi_startproc
 172              		@ args = 4, pretend = 0, frame = 8
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL18:
 175 0000 70B5     		push	{r4, r5, r6, lr}
 176              	.LCFI6:
 177              		.cfi_def_cfa_offset 16
 178              		.cfi_offset 4, -16
 179              		.cfi_offset 5, -12
 180              		.cfi_offset 6, -8
 181              		.cfi_offset 14, -4
 182 0002 84B0     		sub	sp, sp, #16
 183              	.LCFI7:
 184              		.cfi_def_cfa_offset 32
 185 0004 9DF82050 		ldrb	r5, [sp, #32]	@ zero_extendqisi2
 186 0008 8DF80F10 		strb	r1, [sp, #15]
 187 000c 8DF80E20 		strb	r2, [sp, #14]
 188 0010 8DF80D30 		strb	r3, [sp, #13]
 152:Core/u8g2/u8g2_hvline.c ****   /* Make a call to the callback function (e.g. u8g2_draw_l90_r0). */
 153:Core/u8g2/u8g2_hvline.c ****   /* The callback may rotate the hv line */
 154:Core/u8g2/u8g2_hvline.c ****   /* after rotation this will call u8g2_draw_hv_line_4dir() */
 155:Core/u8g2/u8g2_hvline.c ****   
 156:Core/u8g2/u8g2_hvline.c **** #ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 7


 157:Core/u8g2/u8g2_hvline.c ****   if ( u8g2->is_page_clip_window_intersection != 0 )
 189              		.loc 1 157 0
 190 0014 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 191              	.LVL19:
 192 0018 B3B1     		cbz	r3, .L12
 158:Core/u8g2/u8g2_hvline.c **** #endif /* U8G2_WITH_CLIP_WINDOW_SUPPORT */
 159:Core/u8g2/u8g2_hvline.c ****     if ( len != 0 )
 193              		.loc 1 159 0
 194 001a 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 195 001e 9BB1     		cbz	r3, .L12
 160:Core/u8g2/u8g2_hvline.c ****     {
 161:Core/u8g2/u8g2_hvline.c ****     
 162:Core/u8g2/u8g2_hvline.c ****       /* convert to two directions */    
 163:Core/u8g2/u8g2_hvline.c ****       if ( len > 1 )
 196              		.loc 1 163 0
 197 0020 012B     		cmp	r3, #1
 198 0022 03D9     		bls	.L14
 164:Core/u8g2/u8g2_hvline.c ****       {
 165:Core/u8g2/u8g2_hvline.c **** 	if ( dir == 2 )
 199              		.loc 1 165 0
 200 0024 022D     		cmp	r5, #2
 201 0026 11D0     		beq	.L19
 166:Core/u8g2/u8g2_hvline.c **** 	{
 167:Core/u8g2/u8g2_hvline.c **** 	  x -= len;
 168:Core/u8g2/u8g2_hvline.c **** 	  x++;
 169:Core/u8g2/u8g2_hvline.c **** 	}
 170:Core/u8g2/u8g2_hvline.c **** 	else if ( dir == 3 )
 202              		.loc 1 170 0
 203 0028 032D     		cmp	r5, #3
 204 002a 16D0     		beq	.L20
 205              	.LVL20:
 206              	.L14:
 207 002c 0446     		mov	r4, r0
 208              	.LVL21:
 171:Core/u8g2/u8g2_hvline.c **** 	{
 172:Core/u8g2/u8g2_hvline.c **** 	  y -= len;
 173:Core/u8g2/u8g2_hvline.c **** 	  y++;
 174:Core/u8g2/u8g2_hvline.c **** 	}
 175:Core/u8g2/u8g2_hvline.c ****       }
 176:Core/u8g2/u8g2_hvline.c ****       dir &= 1;  
 177:Core/u8g2/u8g2_hvline.c ****       
 178:Core/u8g2/u8g2_hvline.c ****       /* clip against the user window */
 179:Core/u8g2/u8g2_hvline.c ****       if ( dir == 0 )
 209              		.loc 1 179 0
 210 002e 15F00105 		ands	r5, r5, #1
 211              	.LVL22:
 212 0032 32D1     		bne	.L16
 180:Core/u8g2/u8g2_hvline.c ****       {
 181:Core/u8g2/u8g2_hvline.c **** 	if ( y < u8g2->user_y0 )
 213              		.loc 1 181 0
 214 0034 90F84720 		ldrb	r2, [r0, #71]	@ zero_extendqisi2
 215 0038 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
 216 003c 9A42     		cmp	r2, r3
 217 003e 03D8     		bhi	.L12
 182:Core/u8g2/u8g2_hvline.c **** 	  return;
 183:Core/u8g2/u8g2_hvline.c **** 	if ( y >= u8g2->user_y1 )
 218              		.loc 1 183 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 8


 219 0040 90F84820 		ldrb	r2, [r0, #72]	@ zero_extendqisi2
 220 0044 9342     		cmp	r3, r2
 221 0046 10D3     		bcc	.L21
 222              	.LVL23:
 223              	.L12:
 184:Core/u8g2/u8g2_hvline.c **** 	  return;
 185:Core/u8g2/u8g2_hvline.c **** 	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
 186:Core/u8g2/u8g2_hvline.c **** 	  return;
 187:Core/u8g2/u8g2_hvline.c ****       }
 188:Core/u8g2/u8g2_hvline.c ****       else
 189:Core/u8g2/u8g2_hvline.c ****       {
 190:Core/u8g2/u8g2_hvline.c **** 	if ( x < u8g2->user_x0 )
 191:Core/u8g2/u8g2_hvline.c **** 	  return;
 192:Core/u8g2/u8g2_hvline.c **** 	if ( x >= u8g2->user_x1 )
 193:Core/u8g2/u8g2_hvline.c **** 	  return;
 194:Core/u8g2/u8g2_hvline.c **** 	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
 195:Core/u8g2/u8g2_hvline.c **** 	  return;
 196:Core/u8g2/u8g2_hvline.c ****       }
 197:Core/u8g2/u8g2_hvline.c ****       
 198:Core/u8g2/u8g2_hvline.c ****       
 199:Core/u8g2/u8g2_hvline.c ****       u8g2->cb->draw_l90(u8g2, x, y, len, dir);
 200:Core/u8g2/u8g2_hvline.c ****     }
 201:Core/u8g2/u8g2_hvline.c **** }
 224              		.loc 1 201 0
 225 0048 04B0     		add	sp, sp, #16
 226              	.LCFI8:
 227              		.cfi_remember_state
 228              		.cfi_def_cfa_offset 16
 229              		@ sp needed
 230 004a 70BD     		pop	{r4, r5, r6, pc}
 231              	.LVL24:
 232              	.L19:
 233              	.LCFI9:
 234              		.cfi_restore_state
 167:Core/u8g2/u8g2_hvline.c **** 	  x++;
 235              		.loc 1 167 0
 236 004c CAB2     		uxtb	r2, r1
 237              	.LVL25:
 238 004e D31A     		subs	r3, r2, r3
 239 0050 DBB2     		uxtb	r3, r3
 168:Core/u8g2/u8g2_hvline.c **** 	}
 240              		.loc 1 168 0
 241 0052 0133     		adds	r3, r3, #1
 242 0054 8DF80F30 		strb	r3, [sp, #15]
 243 0058 E8E7     		b	.L14
 244              	.LVL26:
 245              	.L20:
 172:Core/u8g2/u8g2_hvline.c **** 	  y++;
 246              		.loc 1 172 0
 247 005a 9DF80E20 		ldrb	r2, [sp, #14]	@ zero_extendqisi2
 248              	.LVL27:
 249 005e D31A     		subs	r3, r2, r3
 250 0060 DBB2     		uxtb	r3, r3
 173:Core/u8g2/u8g2_hvline.c **** 	}
 251              		.loc 1 173 0
 252 0062 0133     		adds	r3, r3, #1
 253 0064 8DF80E30 		strb	r3, [sp, #14]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 9


 254              	.LVL28:
 255 0068 E0E7     		b	.L14
 256              	.LVL29:
 257              	.L21:
 185:Core/u8g2/u8g2_hvline.c **** 	  return;
 258              		.loc 1 185 0
 259 006a 90F84630 		ldrb	r3, [r0, #70]	@ zero_extendqisi2
 260 006e 90F84520 		ldrb	r2, [r0, #69]	@ zero_extendqisi2
 261 0072 0DF10D01 		add	r1, sp, #13
 262              	.LVL30:
 263 0076 0DF10F00 		add	r0, sp, #15
 264              	.LVL31:
 265 007a FFF7FEFF 		bl	u8g2_clip_intersection2
 266              	.LVL32:
 267 007e 0028     		cmp	r0, #0
 268 0080 E2D0     		beq	.L12
 269              	.L17:
 199:Core/u8g2/u8g2_hvline.c ****     }
 270              		.loc 1 199 0
 271 0082 636B     		ldr	r3, [r4, #52]
 272 0084 9E68     		ldr	r6, [r3, #8]
 273 0086 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 274 008a 9DF80E20 		ldrb	r2, [sp, #14]	@ zero_extendqisi2
 275 008e 9DF80F10 		ldrb	r1, [sp, #15]	@ zero_extendqisi2
 276 0092 0095     		str	r5, [sp]
 277 0094 2046     		mov	r0, r4
 278 0096 B047     		blx	r6
 279              	.LVL33:
 280 0098 D6E7     		b	.L12
 281              	.LVL34:
 282              	.L16:
 190:Core/u8g2/u8g2_hvline.c **** 	  return;
 283              		.loc 1 190 0
 284 009a 90F84520 		ldrb	r2, [r0, #69]	@ zero_extendqisi2
 285 009e 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 286 00a2 9A42     		cmp	r2, r3
 287 00a4 D0D8     		bhi	.L12
 192:Core/u8g2/u8g2_hvline.c **** 	  return;
 288              		.loc 1 192 0
 289 00a6 90F84620 		ldrb	r2, [r0, #70]	@ zero_extendqisi2
 290 00aa 9342     		cmp	r3, r2
 291 00ac CCD2     		bcs	.L12
 194:Core/u8g2/u8g2_hvline.c **** 	  return;
 292              		.loc 1 194 0
 293 00ae 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 294 00b2 90F84720 		ldrb	r2, [r0, #71]	@ zero_extendqisi2
 295 00b6 0DF10D01 		add	r1, sp, #13
 296              	.LVL35:
 297 00ba 0DF10E00 		add	r0, sp, #14
 298              	.LVL36:
 299 00be FFF7FEFF 		bl	u8g2_clip_intersection2
 300              	.LVL37:
 301 00c2 0028     		cmp	r0, #0
 302 00c4 DDD1     		bne	.L17
 303 00c6 BFE7     		b	.L12
 304              		.cfi_endproc
 305              	.LFE2:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 10


 307              		.section	.text.u8g2_DrawHLine,"ax",%progbits
 308              		.align	1
 309              		.global	u8g2_DrawHLine
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 313              		.fpu softvfp
 315              	u8g2_DrawHLine:
 316              	.LFB3:
 202:Core/u8g2/u8g2_hvline.c **** 
 203:Core/u8g2/u8g2_hvline.c **** void u8g2_DrawHLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len)
 204:Core/u8g2/u8g2_hvline.c **** {
 317              		.loc 1 204 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              	.LVL38:
 322 0000 10B5     		push	{r4, lr}
 323              	.LCFI10:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 4, -8
 326              		.cfi_offset 14, -4
 327 0002 82B0     		sub	sp, sp, #8
 328              	.LCFI11:
 329              		.cfi_def_cfa_offset 16
 205:Core/u8g2/u8g2_hvline.c **** // #ifdef U8G2_WITH_INTERSECTION
 206:Core/u8g2/u8g2_hvline.c **** //   if ( u8g2_IsIntersection(u8g2, x, y, x+len, y+1) == 0 ) 
 207:Core/u8g2/u8g2_hvline.c **** //     return;
 208:Core/u8g2/u8g2_hvline.c **** // #endif /* U8G2_WITH_INTERSECTION */
 209:Core/u8g2/u8g2_hvline.c ****   u8g2_DrawHVLine(u8g2, x, y, len, 0);
 330              		.loc 1 209 0
 331 0004 0024     		movs	r4, #0
 332 0006 0094     		str	r4, [sp]
 333 0008 FFF7FEFF 		bl	u8g2_DrawHVLine
 334              	.LVL39:
 210:Core/u8g2/u8g2_hvline.c **** }
 335              		.loc 1 210 0
 336 000c 02B0     		add	sp, sp, #8
 337              	.LCFI12:
 338              		.cfi_def_cfa_offset 8
 339              		@ sp needed
 340 000e 10BD     		pop	{r4, pc}
 341              		.cfi_endproc
 342              	.LFE3:
 344              		.section	.text.u8g2_DrawVLine,"ax",%progbits
 345              		.align	1
 346              		.global	u8g2_DrawVLine
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 350              		.fpu softvfp
 352              	u8g2_DrawVLine:
 353              	.LFB4:
 211:Core/u8g2/u8g2_hvline.c **** 
 212:Core/u8g2/u8g2_hvline.c **** void u8g2_DrawVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len)
 213:Core/u8g2/u8g2_hvline.c **** {
 354              		.loc 1 213 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 11


 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              	.LVL40:
 359 0000 10B5     		push	{r4, lr}
 360              	.LCFI13:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              	.LCFI14:
 366              		.cfi_def_cfa_offset 16
 214:Core/u8g2/u8g2_hvline.c **** // #ifdef U8G2_WITH_INTERSECTION
 215:Core/u8g2/u8g2_hvline.c **** //   if ( u8g2_IsIntersection(u8g2, x, y, x+1, y+len) == 0 ) 
 216:Core/u8g2/u8g2_hvline.c **** //     return;
 217:Core/u8g2/u8g2_hvline.c **** // #endif /* U8G2_WITH_INTERSECTION */
 218:Core/u8g2/u8g2_hvline.c ****   u8g2_DrawHVLine(u8g2, x, y, len, 1);
 367              		.loc 1 218 0
 368 0004 0124     		movs	r4, #1
 369 0006 0094     		str	r4, [sp]
 370 0008 FFF7FEFF 		bl	u8g2_DrawHVLine
 371              	.LVL41:
 219:Core/u8g2/u8g2_hvline.c **** }
 372              		.loc 1 219 0
 373 000c 02B0     		add	sp, sp, #8
 374              	.LCFI15:
 375              		.cfi_def_cfa_offset 8
 376              		@ sp needed
 377 000e 10BD     		pop	{r4, pc}
 378              		.cfi_endproc
 379              	.LFE4:
 381              		.section	.text.u8g2_DrawPixel,"ax",%progbits
 382              		.align	1
 383              		.global	u8g2_DrawPixel
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu softvfp
 389              	u8g2_DrawPixel:
 390              	.LFB5:
 220:Core/u8g2/u8g2_hvline.c **** 
 221:Core/u8g2/u8g2_hvline.c **** void u8g2_DrawPixel(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y)
 222:Core/u8g2/u8g2_hvline.c **** {
 391              		.loc 1 222 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              	.LVL42:
 223:Core/u8g2/u8g2_hvline.c **** #ifdef U8G2_WITH_INTERSECTION
 224:Core/u8g2/u8g2_hvline.c ****   if ( y < u8g2->user_y0 )
 396              		.loc 1 224 0
 397 0000 90F84730 		ldrb	r3, [r0, #71]	@ zero_extendqisi2
 398 0004 9342     		cmp	r3, r2
 399 0006 0BD8     		bhi	.L29
 225:Core/u8g2/u8g2_hvline.c ****     return;
 226:Core/u8g2/u8g2_hvline.c ****   if ( y >= u8g2->user_y1 )
 400              		.loc 1 226 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 12


 401 0008 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 402 000c 9342     		cmp	r3, r2
 403 000e 07D9     		bls	.L29
 227:Core/u8g2/u8g2_hvline.c ****     return;
 228:Core/u8g2/u8g2_hvline.c ****   if ( x < u8g2->user_x0 )
 404              		.loc 1 228 0
 405 0010 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 406 0014 8B42     		cmp	r3, r1
 407 0016 03D8     		bhi	.L29
 229:Core/u8g2/u8g2_hvline.c ****     return;
 230:Core/u8g2/u8g2_hvline.c ****   if ( x >= u8g2->user_x1 )
 408              		.loc 1 230 0
 409 0018 90F84630 		ldrb	r3, [r0, #70]	@ zero_extendqisi2
 410 001c 8B42     		cmp	r3, r1
 411 001e 00D8     		bhi	.L32
 412              	.L29:
 413 0020 7047     		bx	lr
 414              	.L32:
 222:Core/u8g2/u8g2_hvline.c **** #ifdef U8G2_WITH_INTERSECTION
 415              		.loc 1 222 0
 416 0022 00B5     		push	{lr}
 417              	.LCFI16:
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 14, -4
 420 0024 83B0     		sub	sp, sp, #12
 421              	.LCFI17:
 422              		.cfi_def_cfa_offset 16
 231:Core/u8g2/u8g2_hvline.c ****     return;
 232:Core/u8g2/u8g2_hvline.c **** #endif /* U8G2_WITH_INTERSECTION */
 233:Core/u8g2/u8g2_hvline.c ****   u8g2_DrawHVLine(u8g2, x, y, 1, 0);
 423              		.loc 1 233 0
 424 0026 0023     		movs	r3, #0
 425 0028 0093     		str	r3, [sp]
 426 002a 0123     		movs	r3, #1
 427 002c FFF7FEFF 		bl	u8g2_DrawHVLine
 428              	.LVL43:
 234:Core/u8g2/u8g2_hvline.c **** }
 429              		.loc 1 234 0
 430 0030 03B0     		add	sp, sp, #12
 431              	.LCFI18:
 432              		.cfi_def_cfa_offset 4
 433              		@ sp needed
 434 0032 5DF804FB 		ldr	pc, [sp], #4
 435              		.cfi_endproc
 436              	.LFE5:
 438              		.section	.text.u8g2_SetDrawColor,"ax",%progbits
 439              		.align	1
 440              		.global	u8g2_SetDrawColor
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu softvfp
 446              	u8g2_SetDrawColor:
 447              	.LFB6:
 235:Core/u8g2/u8g2_hvline.c **** 
 236:Core/u8g2/u8g2_hvline.c **** /*
 237:Core/u8g2/u8g2_hvline.c ****   Assign the draw color for all drawing functions.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 13


 238:Core/u8g2/u8g2_hvline.c ****   color may be 0 or 1. The actual color is defined by the display.
 239:Core/u8g2/u8g2_hvline.c ****   With color = 1 the drawing function will set the display memory to 1.
 240:Core/u8g2/u8g2_hvline.c ****   For OLEDs this ususally means, that the pixel is enabled and the LED 
 241:Core/u8g2/u8g2_hvline.c ****   at the pixel is turned on.
 242:Core/u8g2/u8g2_hvline.c ****   On an LCD it usually means that the LCD segment of the pixel is enabled, 
 243:Core/u8g2/u8g2_hvline.c ****   which absorbs the light.
 244:Core/u8g2/u8g2_hvline.c ****   For eInk/ePaper it means black ink.
 245:Core/u8g2/u8g2_hvline.c **** 
 246:Core/u8g2/u8g2_hvline.c ****   7 Jan 2017: Allow color value 2 for XOR operation.
 247:Core/u8g2/u8g2_hvline.c ****   
 248:Core/u8g2/u8g2_hvline.c **** */
 249:Core/u8g2/u8g2_hvline.c **** void u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)
 250:Core/u8g2/u8g2_hvline.c **** {
 448              		.loc 1 250 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453              	.LVL44:
 251:Core/u8g2/u8g2_hvline.c ****   u8g2->draw_color = color;	/* u8g2_SetDrawColor: just assign the argument */ 
 454              		.loc 1 251 0
 455 0000 80F88610 		strb	r1, [r0, #134]
 252:Core/u8g2/u8g2_hvline.c ****   if ( color >= 3 )
 456              		.loc 1 252 0
 457 0004 0229     		cmp	r1, #2
 458 0006 02D9     		bls	.L33
 253:Core/u8g2/u8g2_hvline.c ****     u8g2->draw_color = 1;	/* u8g2_SetDrawColor: make color as one if arg is invalid */
 459              		.loc 1 253 0
 460 0008 0123     		movs	r3, #1
 461 000a 80F88630 		strb	r3, [r0, #134]
 462              	.L33:
 254:Core/u8g2/u8g2_hvline.c **** }
 463              		.loc 1 254 0
 464 000e 7047     		bx	lr
 465              		.cfi_endproc
 466              	.LFE6:
 468              		.text
 469              	.Letext0:
 470              		.file 2 "c:\\program files (x86)\\gnu_tools_arm_embedded\\7_2017-q4-major\\arm-none-eabi\\include\
 471              		.file 3 "c:\\program files (x86)\\gnu_tools_arm_embedded\\7_2017-q4-major\\arm-none-eabi\\include\
 472              		.file 4 "Core/u8g2/../u8g2/../u8g2/u8x8.h"
 473              		.file 5 "Core/u8g2/../u8g2/u8g2.h"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 u8g2_hvline.c
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:16     .text.u8g2_clip_intersection2:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:22     .text.u8g2_clip_intersection2:00000000 u8g2_clip_intersection2
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:117    .text.u8g2_draw_hv_line_2dir:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:124    .text.u8g2_draw_hv_line_2dir:00000000 u8g2_draw_hv_line_2dir
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:161    .text.u8g2_DrawHVLine:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:168    .text.u8g2_DrawHVLine:00000000 u8g2_DrawHVLine
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:308    .text.u8g2_DrawHLine:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:315    .text.u8g2_DrawHLine:00000000 u8g2_DrawHLine
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:345    .text.u8g2_DrawVLine:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:352    .text.u8g2_DrawVLine:00000000 u8g2_DrawVLine
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:382    .text.u8g2_DrawPixel:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:389    .text.u8g2_DrawPixel:00000000 u8g2_DrawPixel
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:439    .text.u8g2_SetDrawColor:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccN9AsPE.s:446    .text.u8g2_SetDrawColor:00000000 u8g2_SetDrawColor

NO UNDEFINED SYMBOLS
