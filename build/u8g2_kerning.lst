ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8g2_kerning.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8g2_GetKerning,"ax",%progbits
  16              		.align	1
  17              		.global	u8g2_GetKerning
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	u8g2_GetKerning:
  24              	.LFB0:
  25              		.file 1 "Core/u8g2/u8g2_kerning.c"
   1:Core/u8g2/u8g2_kerning.c **** /*
   2:Core/u8g2/u8g2_kerning.c **** 
   3:Core/u8g2/u8g2_kerning.c ****   u8g2_kerning.c
   4:Core/u8g2/u8g2_kerning.c **** 
   5:Core/u8g2/u8g2_kerning.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:Core/u8g2/u8g2_kerning.c **** 
   7:Core/u8g2/u8g2_kerning.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:Core/u8g2/u8g2_kerning.c ****   All rights reserved.
   9:Core/u8g2/u8g2_kerning.c **** 
  10:Core/u8g2/u8g2_kerning.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:Core/u8g2/u8g2_kerning.c ****   are permitted provided that the following conditions are met:
  12:Core/u8g2/u8g2_kerning.c **** 
  13:Core/u8g2/u8g2_kerning.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:Core/u8g2/u8g2_kerning.c ****     of conditions and the following disclaimer.
  15:Core/u8g2/u8g2_kerning.c ****     
  16:Core/u8g2/u8g2_kerning.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:Core/u8g2/u8g2_kerning.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:Core/u8g2/u8g2_kerning.c ****     materials provided with the distribution.
  19:Core/u8g2/u8g2_kerning.c **** 
  20:Core/u8g2/u8g2_kerning.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:Core/u8g2/u8g2_kerning.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:Core/u8g2/u8g2_kerning.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:Core/u8g2/u8g2_kerning.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:Core/u8g2/u8g2_kerning.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:Core/u8g2/u8g2_kerning.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:Core/u8g2/u8g2_kerning.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:Core/u8g2/u8g2_kerning.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:Core/u8g2/u8g2_kerning.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:Core/u8g2/u8g2_kerning.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:Core/u8g2/u8g2_kerning.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:Core/u8g2/u8g2_kerning.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32:Core/u8g2/u8g2_kerning.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:Core/u8g2/u8g2_kerning.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s 			page 2


  34:Core/u8g2/u8g2_kerning.c **** */
  35:Core/u8g2/u8g2_kerning.c **** 
  36:Core/u8g2/u8g2_kerning.c **** #include "../u8g2/u8g2.h"
  37:Core/u8g2/u8g2_kerning.c **** 
  38:Core/u8g2/u8g2_kerning.c **** /* this function is used as "u8g2_get_kerning_cb" */
  39:Core/u8g2/u8g2_kerning.c **** /*
  40:Core/u8g2/u8g2_kerning.c **** uint8_t u8g2_GetNullKerning(u8g2_t *u8g2, uint16_t e1, uint16_t e2)
  41:Core/u8g2/u8g2_kerning.c **** {
  42:Core/u8g2/u8g2_kerning.c ****   return 0;
  43:Core/u8g2/u8g2_kerning.c **** }
  44:Core/u8g2/u8g2_kerning.c **** */
  45:Core/u8g2/u8g2_kerning.c **** 
  46:Core/u8g2/u8g2_kerning.c **** /* this function is used as "u8g2_get_kerning_cb" */
  47:Core/u8g2/u8g2_kerning.c **** uint8_t u8g2_GetKerning(U8X8_UNUSED u8g2_t *u8g2, u8g2_kerning_t *kerning, uint16_t e1, uint16_t e2
  48:Core/u8g2/u8g2_kerning.c **** {
  26              		.loc 1 48 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  49:Core/u8g2/u8g2_kerning.c ****   uint16_t i1, i2, cnt, end;
  50:Core/u8g2/u8g2_kerning.c ****   if ( kerning == NULL )
  32              		.loc 1 50 0
  33 0000 31B3     		cbz	r1, .L9
  48:Core/u8g2/u8g2_kerning.c ****   uint16_t i1, i2, cnt, end;
  34              		.loc 1 48 0
  35 0002 30B4     		push	{r4, r5}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 5, -4
  40 0004 0846     		mov	r0, r1
  41              	.LVL1:
  51:Core/u8g2/u8g2_kerning.c ****     return 0;
  52:Core/u8g2/u8g2_kerning.c ****   
  53:Core/u8g2/u8g2_kerning.c ****   /* search for the encoding in the first table */
  54:Core/u8g2/u8g2_kerning.c ****   cnt = kerning->first_table_cnt;
  42              		.loc 1 54 0
  43 0006 0C88     		ldrh	r4, [r1]
  44              	.LVL2:
  55:Core/u8g2/u8g2_kerning.c ****   cnt--;	/* ignore the last element of the table, which is 0x0ffff */
  45              		.loc 1 55 0
  46 0008 013C     		subs	r4, r4, #1
  47              	.LVL3:
  48 000a A4B2     		uxth	r4, r4
  49              	.LVL4:
  56:Core/u8g2/u8g2_kerning.c ****   for( i1 = 0; i1 < cnt; i1++ )
  50              		.loc 1 56 0
  51 000c 0021     		movs	r1, #0
  52              	.LVL5:
  53              	.L3:
  54              		.loc 1 56 0 is_stmt 0 discriminator 1
  55 000e A142     		cmp	r1, r4
  56 0010 07D2     		bcs	.L4
  57:Core/u8g2/u8g2_kerning.c ****   {
  58:Core/u8g2/u8g2_kerning.c ****     if ( kerning->first_encoding_table[i1] == e1 )
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s 			page 3


  57              		.loc 1 58 0 is_stmt 1
  58 0012 4568     		ldr	r5, [r0, #4]
  59 0014 35F81150 		ldrh	r5, [r5, r1, lsl #1]
  60 0018 9542     		cmp	r5, r2
  61 001a 02D0     		beq	.L4
  56:Core/u8g2/u8g2_kerning.c ****   for( i1 = 0; i1 < cnt; i1++ )
  62              		.loc 1 56 0 discriminator 2
  63 001c 0131     		adds	r1, r1, #1
  64              	.LVL6:
  65 001e 89B2     		uxth	r1, r1
  66              	.LVL7:
  67 0020 F5E7     		b	.L3
  68              	.L4:
  59:Core/u8g2/u8g2_kerning.c ****       break;
  60:Core/u8g2/u8g2_kerning.c ****   }
  61:Core/u8g2/u8g2_kerning.c ****   if ( i1 >= cnt )
  69              		.loc 1 61 0
  70 0022 A142     		cmp	r1, r4
  71 0024 16D2     		bcs	.L10
  62:Core/u8g2/u8g2_kerning.c ****     return 0;	/* e1 not part of the kerning table, return 0 */
  63:Core/u8g2/u8g2_kerning.c **** 
  64:Core/u8g2/u8g2_kerning.c ****   /* get the upper index for i2 */
  65:Core/u8g2/u8g2_kerning.c ****   end = kerning->index_to_second_table[i1+1];
  72              		.loc 1 65 0
  73 0026 8268     		ldr	r2, [r0, #8]
  74              	.LVL8:
  75 0028 4C1C     		adds	r4, r1, #1
  76              	.LVL9:
  77 002a 32F81440 		ldrh	r4, [r2, r4, lsl #1]
  78              	.LVL10:
  66:Core/u8g2/u8g2_kerning.c ****   for( i2 = kerning->index_to_second_table[i1]; i2 < end; i2++ )
  79              		.loc 1 66 0
  80 002e 32F81120 		ldrh	r2, [r2, r1, lsl #1]
  81              	.LVL11:
  82              	.L6:
  83              		.loc 1 66 0 is_stmt 0 discriminator 1
  84 0032 A242     		cmp	r2, r4
  85 0034 07D2     		bcs	.L7
  67:Core/u8g2/u8g2_kerning.c ****   {
  68:Core/u8g2/u8g2_kerning.c ****     if ( kerning->second_encoding_table[i2] == e2 )
  86              		.loc 1 68 0 is_stmt 1
  87 0036 C168     		ldr	r1, [r0, #12]
  88 0038 31F81210 		ldrh	r1, [r1, r2, lsl #1]
  89 003c 9942     		cmp	r1, r3
  90 003e 02D0     		beq	.L7
  66:Core/u8g2/u8g2_kerning.c ****   for( i2 = kerning->index_to_second_table[i1]; i2 < end; i2++ )
  91              		.loc 1 66 0 discriminator 2
  92 0040 0132     		adds	r2, r2, #1
  93              	.LVL12:
  94 0042 92B2     		uxth	r2, r2
  95              	.LVL13:
  96 0044 F5E7     		b	.L6
  97              	.L7:
  69:Core/u8g2/u8g2_kerning.c ****       break;
  70:Core/u8g2/u8g2_kerning.c ****   }
  71:Core/u8g2/u8g2_kerning.c ****   
  72:Core/u8g2/u8g2_kerning.c ****   if ( i2 >= end )
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s 			page 4


  98              		.loc 1 72 0
  99 0046 A242     		cmp	r2, r4
 100 0048 07D2     		bcs	.L11
  73:Core/u8g2/u8g2_kerning.c ****     return 0;	/* e2 not part of any pair with e1, return 0 */
  74:Core/u8g2/u8g2_kerning.c ****   
  75:Core/u8g2/u8g2_kerning.c ****   return kerning->kerning_values[i2];
 101              		.loc 1 75 0
 102 004a 0369     		ldr	r3, [r0, #16]
 103              	.LVL14:
 104 004c 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 105              	.LVL15:
 106 004e 02E0     		b	.L2
 107              	.LVL16:
 108              	.L9:
 109              	.LCFI1:
 110              		.cfi_def_cfa_offset 0
 111              		.cfi_restore 4
 112              		.cfi_restore 5
  51:Core/u8g2/u8g2_kerning.c ****   
 113              		.loc 1 51 0
 114 0050 0020     		movs	r0, #0
 115              	.LVL17:
  76:Core/u8g2/u8g2_kerning.c **** }
 116              		.loc 1 76 0
 117 0052 7047     		bx	lr
 118              	.LVL18:
 119              	.L10:
 120              	.LCFI2:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 4, -8
 123              		.cfi_offset 5, -4
  62:Core/u8g2/u8g2_kerning.c **** 
 124              		.loc 1 62 0
 125 0054 0020     		movs	r0, #0
 126              	.LVL19:
 127              	.L2:
 128              		.loc 1 76 0
 129 0056 30BC     		pop	{r4, r5}
 130              	.LCFI3:
 131              		.cfi_remember_state
 132              		.cfi_restore 5
 133              		.cfi_restore 4
 134              		.cfi_def_cfa_offset 0
 135 0058 7047     		bx	lr
 136              	.LVL20:
 137              	.L11:
 138              	.LCFI4:
 139              		.cfi_restore_state
  73:Core/u8g2/u8g2_kerning.c ****   
 140              		.loc 1 73 0
 141 005a 0020     		movs	r0, #0
 142              	.LVL21:
 143 005c FBE7     		b	.L2
 144              		.cfi_endproc
 145              	.LFE0:
 147              		.section	.text.u8g2_GetKerningByTable,"ax",%progbits
 148              		.align	1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s 			page 5


 149              		.global	u8g2_GetKerningByTable
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu softvfp
 155              	u8g2_GetKerningByTable:
 156              	.LFB1:
  77:Core/u8g2/u8g2_kerning.c **** 
  78:Core/u8g2/u8g2_kerning.c **** uint8_t u8g2_GetKerningByTable(U8X8_UNUSED u8g2_t *u8g2, const uint16_t *kt, uint16_t e1, uint16_t 
  79:Core/u8g2/u8g2_kerning.c **** {
 157              		.loc 1 79 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162              	.LVL22:
  80:Core/u8g2/u8g2_kerning.c ****   uint16_t i;
  81:Core/u8g2/u8g2_kerning.c ****   i = 0;
  82:Core/u8g2/u8g2_kerning.c ****   if ( kt == NULL )
 163              		.loc 1 82 0
 164 0000 B9B1     		cbz	r1, .L20
  79:Core/u8g2/u8g2_kerning.c ****   uint16_t i;
 165              		.loc 1 79 0
 166 0002 70B4     		push	{r4, r5, r6}
 167              	.LCFI5:
 168              		.cfi_def_cfa_offset 12
 169              		.cfi_offset 4, -12
 170              		.cfi_offset 5, -8
 171              		.cfi_offset 6, -4
 172 0004 0D46     		mov	r5, r1
  81:Core/u8g2/u8g2_kerning.c ****   if ( kt == NULL )
 173              		.loc 1 81 0
 174 0006 0021     		movs	r1, #0
 175              	.LVL23:
 176 0008 01E0     		b	.L19
 177              	.LVL24:
 178              	.L18:
  83:Core/u8g2/u8g2_kerning.c ****     return 0;
  84:Core/u8g2/u8g2_kerning.c ****   for(;;)
  85:Core/u8g2/u8g2_kerning.c ****   {
  86:Core/u8g2/u8g2_kerning.c ****     if ( kt[i] == 0x0ffff )
  87:Core/u8g2/u8g2_kerning.c ****       break;
  88:Core/u8g2/u8g2_kerning.c ****     if ( kt[i] == e1 && kt[i+1] == e2 )
  89:Core/u8g2/u8g2_kerning.c ****       return kt[i+2];
  90:Core/u8g2/u8g2_kerning.c ****     i+=3;
 179              		.loc 1 90 0
 180 000a 0331     		adds	r1, r1, #3
 181              	.LVL25:
 182 000c 89B2     		uxth	r1, r1
 183              	.LVL26:
 184              	.L19:
  86:Core/u8g2/u8g2_kerning.c ****       break;
 185              		.loc 1 86 0
 186 000e 0E46     		mov	r6, r1
 187 0010 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 188 0014 4FF6FF74 		movw	r4, #65535
 189 0018 A042     		cmp	r0, r4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s 			page 6


 190 001a 0CD0     		beq	.L21
  88:Core/u8g2/u8g2_kerning.c ****       return kt[i+2];
 191              		.loc 1 88 0
 192 001c 9042     		cmp	r0, r2
 193 001e F4D1     		bne	.L18
  88:Core/u8g2/u8g2_kerning.c ****       return kt[i+2];
 194              		.loc 1 88 0 is_stmt 0 discriminator 1
 195 0020 481C     		adds	r0, r1, #1
 196 0022 35F81000 		ldrh	r0, [r5, r0, lsl #1]
 197 0026 9842     		cmp	r0, r3
 198 0028 EFD1     		bne	.L18
  89:Core/u8g2/u8g2_kerning.c ****     i+=3;
 199              		.loc 1 89 0 is_stmt 1
 200 002a 0236     		adds	r6, r6, #2
 201 002c 15F81600 		ldrb	r0, [r5, r6, lsl #1]	@ zero_extendqisi2
 202 0030 02E0     		b	.L17
 203              	.LVL27:
 204              	.L20:
 205              	.LCFI6:
 206              		.cfi_def_cfa_offset 0
 207              		.cfi_restore 4
 208              		.cfi_restore 5
 209              		.cfi_restore 6
  83:Core/u8g2/u8g2_kerning.c ****   for(;;)
 210              		.loc 1 83 0
 211 0032 0020     		movs	r0, #0
 212              	.LVL28:
  91:Core/u8g2/u8g2_kerning.c ****   }
  92:Core/u8g2/u8g2_kerning.c ****   return 0;
  93:Core/u8g2/u8g2_kerning.c **** }
 213              		.loc 1 93 0
 214 0034 7047     		bx	lr
 215              	.LVL29:
 216              	.L21:
 217              	.LCFI7:
 218              		.cfi_def_cfa_offset 12
 219              		.cfi_offset 4, -12
 220              		.cfi_offset 5, -8
 221              		.cfi_offset 6, -4
  92:Core/u8g2/u8g2_kerning.c **** }
 222              		.loc 1 92 0
 223 0036 0020     		movs	r0, #0
 224              	.L17:
 225              		.loc 1 93 0
 226 0038 70BC     		pop	{r4, r5, r6}
 227              	.LCFI8:
 228              		.cfi_restore 6
 229              		.cfi_restore 5
 230              		.cfi_restore 4
 231              		.cfi_def_cfa_offset 0
 232              	.LVL30:
 233 003a 7047     		bx	lr
 234              		.cfi_endproc
 235              	.LFE1:
 237              		.text
 238              	.Letext0:
 239              		.file 2 "c:\\program files (x86)\\gnu_tools_arm_embedded\\7_2017-q4-major\\arm-none-eabi\\include\
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s 			page 7


 240              		.file 3 "c:\\program files (x86)\\gnu_tools_arm_embedded\\7_2017-q4-major\\arm-none-eabi\\include\
 241              		.file 4 "Core/u8g2/../u8g2/../u8g2/u8x8.h"
 242              		.file 5 "Core/u8g2/../u8g2/u8g2.h"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 u8g2_kerning.c
C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s:16     .text.u8g2_GetKerning:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s:23     .text.u8g2_GetKerning:00000000 u8g2_GetKerning
C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s:148    .text.u8g2_GetKerningByTable:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccqdht1c.s:155    .text.u8g2_GetKerningByTable:00000000 u8g2_GetKerningByTable

NO UNDEFINED SYMBOLS
