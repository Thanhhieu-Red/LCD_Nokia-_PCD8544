ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	UART_EndTxTransfer:
  23              	.LFB116:
  24              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @file    stm32f1xx_hal_uart.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @attention
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * Copyright (c) 2016 STMicroelectronics.
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) UART pins configuration:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 2


  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the UART TX/RX pins as alternate function pull-up.
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   Tx/Rx parameters.
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_UART_Init() API.
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             and receive process.
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_MspInit() API.
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ##### Callback registration #####
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ==================================
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 3


  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and a pointer to the user callback function.
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     weak (surcharged) function.
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and the Callback ID.
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This function allows to reset following callbacks:
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     or HAL_UART_Init() function.
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     not defined, the callback registration feature is not available
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Three operation modes are available within this driver :
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 4


 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Polling mode IO operation ***
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =================================
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ===================================
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** DMA mode IO operation ***
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ==============================
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     services to user. (For example, these functions allow application to handle use cases
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     where number of data to be received is unknown).
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Compared to standard reception services which only consider number of received
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         data elements as reception completion criteria, these functions also consider additional ev
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         as triggers for updating reception status to caller :
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                for 1 frame time, after last received byte.
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two mode of transfer:
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            or till IDLE event occurs. Reception is handled only during function execution.
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            are returned by function after finishing transfer.
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            These API's return the HAL status.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 5


 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The end of the data processing will be indicated through the
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode API:
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API with Interrupt:
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API with DMA:
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** UART HAL driver macros list ***
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =============================================
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @endverbatim
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) Additional remark: If the parity is enabled, then the MSB bit of the data written
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------------------|---------------------------------------|
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #include "stm32f1xx_hal.h"
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup STM32F1xx_HAL_Driver
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 6


 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART UART
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief HAL UART module driver
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout);
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 7


 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in asynchronous mode.
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Baud Rate
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Word Length
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Stop Bit
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Hardware flow control
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Receiver/transmitter modes
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Over Sampling Method
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     procedures (details for the procedures are available in reference manuals
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (RM0008 for STM32F10Xxx MCUs and RM0041 for STM32F100xx MCUs)).
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2 and USART3 */
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 8


 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 9


 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 10


 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the LIN UART instance */
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Break detection length parameter */
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 11


 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Address USART address
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 12


 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART address node */
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 13


 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the Peripheral */
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlock */
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP Init.
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 14


 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Register a User UART Callback
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   The HAL_UART_RegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_In
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_MultiProcessor_Init() to register callbacks for HAL_UART_MSPINIT_CB_ID and HAL_UART
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart uart handle
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (pCallback == NULL)
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Update the error code */
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 15


 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 16


 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Update the error code */
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Return error status */
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   The HAL_UART_UnRegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_LIN_Init(), HAL_MultiProcessor_Init() to un-register callbacks for HAL_UART_MSPINIT
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and HAL_UART_MSPDEINIT_CB_ID
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart uart handle
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 17


 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 18


 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Update the error code */
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Return error status */
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart     Uart handle
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (pCallback == NULL)
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process locked */
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 19


1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Release Lock */
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart     Uart handle
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process locked */
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Release Lock */
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### IO operation functions #####
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and Half duplex data transfers.
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two modes of transfer:
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            after finishing transfer.
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 20


1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            or DMA, these API's return the HAL status.
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The end of the data processing will be indicated through the
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            using DMA mode.
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode API's are :
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Receive()
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Abort()
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Errors are handled as follows :
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 21


1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 provided through pData.
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout Timeout duration
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   const uint16_t *pdata16bits;
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout management */
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = pData;
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = NULL;
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 22


1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (pdata8bits == NULL)
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata16bits++;
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata8bits++;
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount--;
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_TIMEOUT;
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 available through pData.
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout Timeout duration
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *pdata16bits;
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 23


1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout management */
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = pData;
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = NULL;
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check the remain data to be received */
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (pdata8bits == NULL)
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata16bits++;
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORD
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata8bits++;
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount--;
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 24


1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 provided through pData.
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 available through pData.
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 25


1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 provided through pData.
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   const uint32_t *tmp;
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 26


1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (const uint32_t *)&pData;
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(const uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 available through pData.
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 27


1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 28


1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      */
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data is re
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   HAL_OK is returned if reception is completed (expected number of data has been received
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         or if reception is stopped after IDLE event (less than the expected number of data has 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 29


1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         In this case, RxLen output parameter indicates number of data available in reception bu
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of uint16_t available through pData.
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param huart   UART handle.
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param RxLen   Number of data elements finally received (could be lower than Size, in case rece
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                                            uint32_t Timeout)
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *pdata16bits;
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart;
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout management */
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize  = Size;
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = pData;
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = NULL;
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Initialize output number of received elements */
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     *RxLen = 0U;
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* as long as data have to be received */
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check if IDLE flag is set */
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 30


1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Clear IDLE flag in ISR */
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (*RxLen > 0U)
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->RxEventType = HAL_UART_RXEVENT_IDLE;
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_OK;
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check if RXNE flag is set */
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (pdata8bits == NULL)
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pdata16bits++;
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WO
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           else
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pdata8bits++;
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Increment number of received elements */
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *RxLen += 1U;
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxXferCount--;
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check for the Timeout */
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (Timeout != HAL_MAX_DELAY)
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set number of received elements in output parameter : RxLen */
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 31


1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data is r
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         to UART interrupts raised by RXNE and IDLE events. Callback is called at end of recepti
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         number of received data elements.
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of uint16_t available through pData.
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param huart UART handle.
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status;
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (status == HAL_OK)
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            (Overrun error for instance).
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status = HAL_ERROR;
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 32


1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return status;
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode till either the expected number of data is receive
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         to DMA services, transferring automatically received data elements in user reception bu
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         calling registered callbacks at half/end of reception. UART IDLE events are also used t
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         reception phase as ended. In all cases, callback execution will indicate number of rece
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the parity bit (MSB position).
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of uint16_t available through pData.
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param huart UART handle.
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status;
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (status == HAL_OK)
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            (Overrun error for instance).
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 33


1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status = HAL_ERROR;
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return status;
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Provide Rx Event type that has lead to RxEvent callback execution.
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note  When HAL_UARTEx_ReceiveToIdle_IT() or HAL_UARTEx_ReceiveToIdle_DMA() API are called, pro
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *        of reception process is provided to application through calls of Rx Event callback (eith
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *        HAL_UARTEx_RxEventCallback() or user registered one). As several types of events could o
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *        Half Transfer, or Transfer Complete), this function allows to retrieve the Rx Event type
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *        to Rx Event callback execution.
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note  This function is expected to be called within the user implementation of Rx Event Callba
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *        in order to provide the accurate value :
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *        In Interrupt Mode :
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_TC : when Reception has been completed (expected nb of data has be
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_IDLE : when Idle event occurred prior reception has been completed
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *             received data is lower than expected one)
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *        In DMA Mode :
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_TC : when Reception has been completed (expected nb of data has be
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_HT : when half of expected nb of data has been received
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_IDLE : when Idle event occurred prior reception has been completed
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *             received data is lower than expected one).
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *        In DMA mode, RxEvent callback could be called several times;
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *        When DMA is configured in Normal Mode, HT event does not stop Reception process;
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *        When DMA is configured in Circular Mode, HT, TC or IDLE events don't stop Reception proc
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval Rx Event Type (returned value will be a value of @ref UART_RxEvent_Type_Values)
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_UART_RxEventTypeTypeDef HAL_UARTEx_GetRxEventType(UART_HandleTypeDef *huart)
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Return Rx Event type value, as stored in UART handle */
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return(huart->RxEventType);
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 34


1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 35


1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 36


1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx transfer counter */
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 37


2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Rx transfer counter */
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      before any call to DMA Abort functions */
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Tx Handle is valid */
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmatx != NULL)
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 38


2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmarx != NULL)
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 39


2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (AbortCplt == 0x01U)
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset ErrorCode */
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call registered Abort complete callback */
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 40


2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Tx transfer counter */
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx transfer counter */
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 41


2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Rx transfer counter */
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 42


2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Rx transfer counter */
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If no error occurs */
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (errorflags == RESET)
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       UART_Receive_IT(huart);
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If some errors occur */
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                                 || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 43


2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                                                  || ((cr3its & USART_CR3_EIE) != RESET)))
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_Receive_IT(huart);
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          consider error as blocking */
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
2428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 44


2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           else
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Call user error callback */
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /*Call registered error callback*/
2437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             huart->ErrorCallback(huart);
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /*Call legacy weak error callback*/
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Call user error callback */
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /*Call registered error callback*/
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCallback(huart);
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /*Call legacy weak error callback*/
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Error is notified to user through user error callback */
2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered error callback*/
2462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCallback(huart);
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak error callback*/
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   } /* End if some error occurs */
2473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check current reception Mode :
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       && ((isrflags & USART_SR_IDLE) != 0U)
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       && ((cr1its & USART_SR_IDLE) != 0U))
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_IDLEFLAG(huart);
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* DMA mode enabled */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 45


2486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          (DMA cplt callback will be called).
2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Reception is not complete */
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              in the UART CR3 register */
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
2515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         In this case, Rx Event type is Idle Event */
2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
2530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* DMA mode not enabled */
2534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           && (nb_rx_data > 0U))
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 46


2543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
2555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
2562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
2565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
2570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_Transmit_IT(huart);
2572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
2573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
2577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
2580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 47


2600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART error callbacks.
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 48


2657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle
2706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               reception buffer until which, data are available)
2708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 49


2714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(Size);
2715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART control functions
2727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
2728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
2729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
2730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
2732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
2733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
2741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
2742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Transmits break characters.
2746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
2757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Send break characters */
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
2762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 50


2771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
2784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
2789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
2792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
2812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
2817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
2820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 51


2828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
2839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
2844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
2847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
2850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
2852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
2853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
2874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
2879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
2881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
2882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 52


2885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
2887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
2888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
2904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
2905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
2906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
2908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  [..]
2909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    process
2912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
2916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
2917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Returns the UART state.
2921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL state
2924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
2926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
2928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp1 = huart->gState;
2929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
2930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Return the UART error code
2936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART.
2938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval UART Error Code
2939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
2941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 53


2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
2943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
2955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval none
2961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Init the UART Callback settings */
2966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
2975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 54


2999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Circular mode */
3002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
3016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
3035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
3044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
3045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
3047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
3053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 55


3056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
3063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    In this case, Rx Event type is Transfer Complete */
3068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
3069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check current reception Mode :
3071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
3080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
3097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      In this case, Rx Event type is Half Transfer */
3107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_HT;
3108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check current reception Mode :
3110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 56


3113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
3119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
3136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
3143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
3147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
3148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
3150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
3155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
3156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
3158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered error callback*/
3164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCallback(huart);
3165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak error callback*/
3167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 57


3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         until a flag is no longer in the specified status.
3174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
3177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Status The actual Flag status (SET or RESET).
3178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Tickstart Tick start value
3179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout Timeout duration
3180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
3183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout)
3184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
3186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check for the Timeout */
3189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
3192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE
3195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
3198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Process Unlocked */
3201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
3204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
3208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
3224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferSize = Size;
3225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = Size;
3226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 58


3227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
3231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
3233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
3234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
3238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Data Register not empty Interrupt */
3240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
3241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
3243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
3259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
3261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferSize = Size;
3262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART DMA transfer complete callback */
3267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
3268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART DMA Half transfer complete callback */
3270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
3271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the DMA error callback */
3273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferErrorCallback = UART_DMAError;
3274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the DMA abort callback */
3276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the DMA stream */
3279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp = (uint32_t *)&pData;
3280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
3281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the secon
3283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_CLEAR_OREFLAG(huart);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 59


3284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
3286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
3288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   in the UART CR3 register */
3296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
3299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  25              		.loc 1 3307 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31              	.L2:
  32              	.LBB320:
3308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 3309 0 discriminator 1
  34 0000 0268     		ldr	r2, [r0]
  35              	.LVL1:
  36              	.LBB321:
  37              	.LBB322:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 60


  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 61


  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 62


 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 63


 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 64


 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 65


 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 66


 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 67


 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 68


 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 69


 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 70


 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 71


 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 72


 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 73


 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 74


 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 75


 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 76


 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 77


 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1004:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1007:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1010:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CLZ             (uint8_t)__builtin_clz
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1018:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1021:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1022:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1024:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1025:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1027:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1028:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1029:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1031:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1032:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1035:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1037:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1038:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1041:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1042:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 78


1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1046:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1047:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1048:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1051:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1056:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1057:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1058:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1059:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1060:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1061:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1062:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1067:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1070:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  39              		.loc 2 1072 0 discriminator 1
  40 0002 02F10C03 		add	r3, r2, #12
  41              	.LVL2:
  42              		.syntax unified
  43              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0006 53E8003F 		ldrex r3, [r3]
  45              	@ 0 "" 2
  46              	.LVL3:
  47              		.thumb
  48              		.syntax unified
  49              	.LBE322:
  50              	.LBE321:
  51              		.loc 1 3309 0 discriminator 1
  52 000a 23F0C003 		bic	r3, r3, #192
  53              	.LVL4:
  54              	.LBB323:
  55              	.LBB324:
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1074:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1075:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1076:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1077:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1078:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1079:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 79


1084:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1085:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1086:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1088:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1091:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1092:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1093:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1095:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1096:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1097:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1101:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1102:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1103:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1105:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1107:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1109:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1113:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1119:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1121:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  56              		.loc 2 1123 0 discriminator 1
  57 000e 0C32     		adds	r2, r2, #12
  58              	.LVL5:
  59              		.syntax unified
  60              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  61 0010 42E80031 		strex r1, r3, [r2]
  62              	@ 0 "" 2
  63              	.LVL6:
  64              		.thumb
  65              		.syntax unified
  66              	.LBE324:
  67              	.LBE323:
  68              		.loc 1 3309 0 discriminator 1
  69 0014 0029     		cmp	r1, #0
  70 0016 F3D1     		bne	.L2
  71              	.LBE320:
3310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 80


3311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  72              		.loc 1 3312 0
  73 0018 2023     		movs	r3, #32
  74              	.LVL7:
  75 001a 80F84130 		strb	r3, [r0, #65]
3313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
  76              		.loc 1 3313 0
  77 001e 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE116:
  81              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  82              		.align	1
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu softvfp
  88              	UART_EndRxTransfer:
  89              	.LFB117:
3314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  90              		.loc 1 3321 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.LVL8:
  96              	.L4:
  97              	.LBB325:
3322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  98              		.loc 1 3323 0 discriminator 1
  99 0000 0268     		ldr	r2, [r0]
 100              	.LVL9:
 101              	.LBB326:
 102              	.LBB327:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 103              		.loc 2 1072 0 discriminator 1
 104 0002 02F10C03 		add	r3, r2, #12
 105              	.LVL10:
 106              		.syntax unified
 107              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 108 0006 53E8003F 		ldrex r3, [r3]
 109              	@ 0 "" 2
 110              	.LVL11:
 111              		.thumb
 112              		.syntax unified
 113              	.LBE327:
 114              	.LBE326:
 115              		.loc 1 3323 0 discriminator 1
 116 000a 23F49073 		bic	r3, r3, #288
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 81


 117              	.LVL12:
 118              	.LBB328:
 119              	.LBB329:
 120              		.loc 2 1123 0 discriminator 1
 121 000e 0C32     		adds	r2, r2, #12
 122              	.LVL13:
 123              		.syntax unified
 124              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 125 0010 42E80031 		strex r1, r3, [r2]
 126              	@ 0 "" 2
 127              	.LVL14:
 128              		.thumb
 129              		.syntax unified
 130              	.LBE329:
 131              	.LBE328:
 132              		.loc 1 3323 0 discriminator 1
 133 0014 0029     		cmp	r1, #0
 134 0016 F3D1     		bne	.L4
 135              	.LVL15:
 136              	.L5:
 137              	.LBE325:
 138              	.LBB330:
3324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 139              		.loc 1 3324 0 discriminator 1
 140 0018 0268     		ldr	r2, [r0]
 141              	.LVL16:
 142              	.LBB331:
 143              	.LBB332:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 144              		.loc 2 1072 0 discriminator 1
 145 001a 02F11403 		add	r3, r2, #20
 146              	.LVL17:
 147              		.syntax unified
 148              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 149 001e 53E8003F 		ldrex r3, [r3]
 150              	@ 0 "" 2
 151              	.LVL18:
 152              		.thumb
 153              		.syntax unified
 154              	.LBE332:
 155              	.LBE331:
 156              		.loc 1 3324 0 discriminator 1
 157 0022 23F00103 		bic	r3, r3, #1
 158              	.LVL19:
 159              	.LBB333:
 160              	.LBB334:
 161              		.loc 2 1123 0 discriminator 1
 162 0026 1432     		adds	r2, r2, #20
 163              	.LVL20:
 164              		.syntax unified
 165              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 166 0028 42E80031 		strex r1, r3, [r2]
 167              	@ 0 "" 2
 168              	.LVL21:
 169              		.thumb
 170              		.syntax unified
 171              	.LBE334:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 82


 172              	.LBE333:
 173              		.loc 1 3324 0 discriminator 1
 174 002c 0029     		cmp	r1, #0
 175 002e F3D1     		bne	.L5
 176              	.LBE330:
3325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 177              		.loc 1 3327 0
 178 0030 036B     		ldr	r3, [r0, #48]
 179              	.LVL22:
 180 0032 012B     		cmp	r3, #1
 181 0034 05D0     		beq	.L7
 182              	.L6:
3328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
3330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 183              		.loc 1 3333 0
 184 0036 2023     		movs	r3, #32
 185 0038 80F84230 		strb	r3, [r0, #66]
3334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 186              		.loc 1 3334 0
 187 003c 0023     		movs	r3, #0
 188 003e 0363     		str	r3, [r0, #48]
3335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 189              		.loc 1 3335 0
 190 0040 7047     		bx	lr
 191              	.L7:
 192              	.LBB335:
3329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 193              		.loc 1 3329 0 discriminator 1
 194 0042 0268     		ldr	r2, [r0]
 195              	.LVL23:
 196              	.LBB336:
 197              	.LBB337:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 198              		.loc 2 1072 0 discriminator 1
 199 0044 02F10C03 		add	r3, r2, #12
 200              	.LVL24:
 201              		.syntax unified
 202              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 203 0048 53E8003F 		ldrex r3, [r3]
 204              	@ 0 "" 2
 205              	.LVL25:
 206              		.thumb
 207              		.syntax unified
 208              	.LBE337:
 209              	.LBE336:
3329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 210              		.loc 1 3329 0 discriminator 1
 211 004c 23F01003 		bic	r3, r3, #16
 212              	.LVL26:
 213              	.LBB338:
 214              	.LBB339:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 83


 215              		.loc 2 1123 0 discriminator 1
 216 0050 0C32     		adds	r2, r2, #12
 217              	.LVL27:
 218              		.syntax unified
 219              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 220 0052 42E80031 		strex r1, r3, [r2]
 221              	@ 0 "" 2
 222              	.LVL28:
 223              		.thumb
 224              		.syntax unified
 225              	.LBE339:
 226              	.LBE338:
3329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 227              		.loc 1 3329 0 discriminator 1
 228 0056 0029     		cmp	r1, #0
 229 0058 F3D1     		bne	.L7
 230 005a ECE7     		b	.L6
 231              	.LBE335:
 232              		.cfi_endproc
 233              	.LFE117:
 235              		.section	.text.UART_Transmit_IT,"ax",%progbits
 236              		.align	1
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu softvfp
 242              	UART_Transmit_IT:
 243              	.LFB123:
3336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
3348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
3349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered error callback*/
3352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCallback(huart);
3353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak error callback*/
3355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 84


3365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
3380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
3385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
3386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
3388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort complete callback */
3398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmatx != NULL)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 85


3422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
3426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
3431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
3432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
3434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort complete callback */
3444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
3465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 86


3479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
3493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
3510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
3515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 244              		.loc 1 3515 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249              	.LVL29:
3516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   const uint16_t *tmp;
3517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 250              		.loc 1 3519 0
 251 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 252 0004 DBB2     		uxtb	r3, r3
 253 0006 212B     		cmp	r3, #33
 254 0008 27D1     		bne	.L12
3520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 255              		.loc 1 3521 0
 256 000a 8368     		ldr	r3, [r0, #8]
 257 000c B3F5805F 		cmp	r3, #4096
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 87


 258 0010 16D0     		beq	.L14
 259              	.L10:
3522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
3524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
3525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
3528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 260              		.loc 1 3529 0
 261 0012 036A     		ldr	r3, [r0, #32]
 262 0014 5A1C     		adds	r2, r3, #1
 263 0016 0262     		str	r2, [r0, #32]
 264 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 265 001a 0368     		ldr	r3, [r0]
 266 001c 5A60     		str	r2, [r3, #4]
 267              	.L11:
3530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 268              		.loc 1 3532 0
 269 001e C38C     		ldrh	r3, [r0, #38]
 270 0020 013B     		subs	r3, r3, #1
 271 0022 9BB2     		uxth	r3, r3
 272 0024 C384     		strh	r3, [r0, #38]	@ movhi
 273 0026 D3B9     		cbnz	r3, .L13
3533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 274              		.loc 1 3535 0
 275 0028 0268     		ldr	r2, [r0]
 276 002a D368     		ldr	r3, [r2, #12]
 277 002c 23F08003 		bic	r3, r3, #128
 278 0030 D360     		str	r3, [r2, #12]
3536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 279              		.loc 1 3538 0
 280 0032 0268     		ldr	r2, [r0]
 281 0034 D368     		ldr	r3, [r2, #12]
 282 0036 43F04003 		orr	r3, r3, #64
 283 003a D360     		str	r3, [r2, #12]
3539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 284              		.loc 1 3540 0
 285 003c 0020     		movs	r0, #0
 286              	.LVL30:
 287 003e 7047     		bx	lr
 288              	.LVL31:
 289              	.L14:
3521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 290              		.loc 1 3521 0 discriminator 1
 291 0040 0369     		ldr	r3, [r0, #16]
 292 0042 002B     		cmp	r3, #0
 293 0044 E5D1     		bne	.L10
3523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 88


 294              		.loc 1 3523 0
 295 0046 036A     		ldr	r3, [r0, #32]
 296              	.LVL32:
3524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 297              		.loc 1 3524 0
 298 0048 1B88     		ldrh	r3, [r3]
 299              	.LVL33:
 300 004a 0268     		ldr	r2, [r0]
 301 004c C3F30803 		ubfx	r3, r3, #0, #9
 302 0050 5360     		str	r3, [r2, #4]
 303              	.LVL34:
3525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 304              		.loc 1 3525 0
 305 0052 036A     		ldr	r3, [r0, #32]
 306 0054 0233     		adds	r3, r3, #2
 307 0056 0362     		str	r3, [r0, #32]
 308 0058 E1E7     		b	.L11
 309              	.L12:
3541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 310              		.loc 1 3544 0
 311 005a 0220     		movs	r0, #2
 312              	.LVL35:
 313 005c 7047     		bx	lr
 314              	.LVL36:
 315              	.L13:
3540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 316              		.loc 1 3540 0
 317 005e 0020     		movs	r0, #0
 318              	.LVL37:
3545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 319              		.loc 1 3546 0
 320 0060 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE123:
 324              		.section	.text.UART_SetConfig,"ax",%progbits
 325              		.align	1
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu softvfp
 331              	UART_SetConfig:
 332              	.LFB126:
3547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
3550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 89


3558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
3568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
3571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
3575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
3580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
3581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *pdata16bits;
3583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
3586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
3590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) huart->pRxBuffPtr;
3591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
3592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
3593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
3595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits = (uint8_t *) huart->pRxBuffPtr;
3597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits  = NULL;
3598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLE
3600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
3602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
3604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
3606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->pRxBuffPtr += 1U;
3608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
3611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
3614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 90


3615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
3617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
3620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
3625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
3626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check current reception Mode :
3628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Set reception type to Standard */
3632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable IDLE interrupt */
3635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
3636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Check if IDLE flag is set */
3638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
3639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
3640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Clear IDLE flag in ISR */
3641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_CLEAR_IDLEFLAG(huart);
3642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
3643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered Rx Event callback*/
3646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
3647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
3649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
3650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
3653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Standard reception API called */
3655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
3661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_OK;
3665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
3667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
3671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 91


3672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
3673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 333              		.loc 1 3681 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              	.LVL38:
 338 0000 38B5     		push	{r3, r4, r5, lr}
 339              	.LCFI0:
 340              		.cfi_def_cfa_offset 16
 341              		.cfi_offset 3, -16
 342              		.cfi_offset 4, -12
 343              		.cfi_offset 5, -8
 344              		.cfi_offset 14, -4
 345 0002 0446     		mov	r4, r0
3682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg;
3683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t pclk;
3684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
3686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      according to huart->Init.StopBits value */
3694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 346              		.loc 1 3694 0
 347 0004 0268     		ldr	r2, [r0]
 348 0006 1369     		ldr	r3, [r2, #16]
 349 0008 23F44053 		bic	r3, r3, #12288
 350 000c C168     		ldr	r1, [r0, #12]
 351 000e 0B43     		orrs	r3, r3, r1
 352 0010 1361     		str	r3, [r2, #16]
3695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
3704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
3705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
3706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
3708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 92


3709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 353              		.loc 1 3709 0
 354 0012 8368     		ldr	r3, [r0, #8]
 355 0014 0269     		ldr	r2, [r0, #16]
 356 0016 1343     		orrs	r3, r3, r2
 357 0018 4269     		ldr	r2, [r0, #20]
 358 001a 1A43     		orrs	r2, r2, r3
 359              	.LVL39:
3710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 360              		.loc 1 3710 0
 361 001c 0168     		ldr	r1, [r0]
 362 001e CB68     		ldr	r3, [r1, #12]
 363 0020 23F4B053 		bic	r3, r3, #5632
 364 0024 23F00C03 		bic	r3, r3, #12
 365 0028 1343     		orrs	r3, r3, r2
 366 002a CB60     		str	r3, [r1, #12]
3711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE),
3712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
3713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
3714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 367              		.loc 1 3717 0
 368 002c 0268     		ldr	r2, [r0]
 369              	.LVL40:
 370 002e 5369     		ldr	r3, [r2, #20]
 371 0030 23F44073 		bic	r3, r3, #768
 372 0034 8169     		ldr	r1, [r0, #24]
 373 0036 0B43     		orrs	r3, r3, r1
 374 0038 5361     		str	r3, [r2, #20]
3718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Instance == USART1)
 375              		.loc 1 3720 0
 376 003a 0268     		ldr	r2, [r0]
 377 003c 124B     		ldr	r3, .L20
 378 003e 9A42     		cmp	r2, r3
 379 0040 1FD0     		beq	.L19
3721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     pclk = HAL_RCC_GetPCLK2Freq();
3723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     pclk = HAL_RCC_GetPCLK1Freq();
 380              		.loc 1 3726 0
 381 0042 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 382              	.LVL41:
 383              	.L17:
3727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
3730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
3731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
3732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 93


3735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 384              		.loc 1 3740 0
 385 0046 00EB8000 		add	r0, r0, r0, lsl #2
 386              	.LVL42:
 387 004a 00EB8000 		add	r0, r0, r0, lsl #2
 388 004e 6368     		ldr	r3, [r4, #4]
 389 0050 9B00     		lsls	r3, r3, #2
 390 0052 B0FBF3F0 		udiv	r0, r0, r3
 391 0056 0D4D     		ldr	r5, .L20+4
 392 0058 A5FB0032 		umull	r3, r2, r5, r0
 393 005c 5109     		lsrs	r1, r2, #5
 394 005e 6422     		movs	r2, #100
 395 0060 02FB1102 		mls	r2, r2, r1, r0
 396 0064 1301     		lsls	r3, r2, #4
 397 0066 3233     		adds	r3, r3, #50
 398 0068 A5FB0323 		umull	r2, r3, r5, r3
 399 006c 5B09     		lsrs	r3, r3, #5
 400 006e 03F0F002 		and	r2, r3, #240
 401 0072 02EB0112 		add	r2, r2, r1, lsl #4
 402 0076 03F00F03 		and	r3, r3, #15
 403 007a 2168     		ldr	r1, [r4]
 404 007c 1344     		add	r3, r3, r2
 405 007e 8B60     		str	r3, [r1, #8]
3741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
3742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 406              		.loc 1 3742 0
 407 0080 38BD     		pop	{r3, r4, r5, pc}
 408              	.LVL43:
 409              	.L19:
3722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 410              		.loc 1 3722 0
 411 0082 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 412              	.LVL44:
 413 0086 DEE7     		b	.L17
 414              	.L21:
 415              		.align	2
 416              	.L20:
 417 0088 00380140 		.word	1073821696
 418 008c 1F85EB51 		.word	1374389535
 419              		.cfi_endproc
 420              	.LFE126:
 422              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 423              		.align	1
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 427              		.fpu softvfp
 429              	UART_WaitOnFlagUntilTimeout:
 430              	.LFB113:
3184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
 431              		.loc 1 3184 0
 432              		.cfi_startproc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 94


 433              		@ args = 4, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              	.LVL45:
 436 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 437              	.LCFI1:
 438              		.cfi_def_cfa_offset 24
 439              		.cfi_offset 4, -24
 440              		.cfi_offset 5, -20
 441              		.cfi_offset 6, -16
 442              		.cfi_offset 7, -12
 443              		.cfi_offset 8, -8
 444              		.cfi_offset 14, -4
 445 0004 0446     		mov	r4, r0
 446 0006 0F46     		mov	r7, r1
 447 0008 1646     		mov	r6, r2
 448 000a 9846     		mov	r8, r3
 449 000c 069D     		ldr	r5, [sp, #24]
 450              	.LVL46:
 451              	.L24:
3186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 452              		.loc 1 3186 0
 453 000e 2368     		ldr	r3, [r4]
 454 0010 1B68     		ldr	r3, [r3]
 455 0012 37EA0303 		bics	r3, r7, r3
 456 0016 0CBF     		ite	eq
 457 0018 0123     		moveq	r3, #1
 458 001a 0023     		movne	r3, #0
 459 001c B342     		cmp	r3, r6
 460 001e 2BD1     		bne	.L31
3189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 461              		.loc 1 3189 0
 462 0020 B5F1FF3F 		cmp	r5, #-1
 463 0024 F3D0     		beq	.L24
3191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 464              		.loc 1 3191 0
 465 0026 2DB1     		cbz	r5, .L26
3191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 466              		.loc 1 3191 0 is_stmt 0 discriminator 1
 467 0028 FFF7FEFF 		bl	HAL_GetTick
 468              	.LVL47:
 469 002c A0EB0800 		sub	r0, r0, r8
 470 0030 A842     		cmp	r0, r5
 471 0032 ECD9     		bls	.L24
 472              	.L26:
 473              	.LBB340:
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 474              		.loc 1 3194 0 is_stmt 1 discriminator 1
 475 0034 2268     		ldr	r2, [r4]
 476              	.LVL48:
 477              	.LBB341:
 478              	.LBB342:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 479              		.loc 2 1072 0 discriminator 1
 480 0036 02F10C03 		add	r3, r2, #12
 481              	.LVL49:
 482              		.syntax unified
 483              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 95


 484 003a 53E8003F 		ldrex r3, [r3]
 485              	@ 0 "" 2
 486              	.LVL50:
 487              		.thumb
 488              		.syntax unified
 489              	.LBE342:
 490              	.LBE341:
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 491              		.loc 1 3194 0 discriminator 1
 492 003e 23F4D073 		bic	r3, r3, #416
 493              	.LVL51:
 494              	.LBB343:
 495              	.LBB344:
 496              		.loc 2 1123 0 discriminator 1
 497 0042 0C32     		adds	r2, r2, #12
 498              	.LVL52:
 499              		.syntax unified
 500              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 501 0044 42E80031 		strex r1, r3, [r2]
 502              	@ 0 "" 2
 503              	.LVL53:
 504              		.thumb
 505              		.syntax unified
 506              	.LBE344:
 507              	.LBE343:
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 508              		.loc 1 3194 0 discriminator 1
 509 0048 0029     		cmp	r1, #0
 510 004a F3D1     		bne	.L26
 511              	.LVL54:
 512              	.L27:
 513              	.LBE340:
 514              	.LBB345:
3195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 515              		.loc 1 3195 0 discriminator 1
 516 004c 2268     		ldr	r2, [r4]
 517              	.LVL55:
 518              	.LBB346:
 519              	.LBB347:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 520              		.loc 2 1072 0 discriminator 1
 521 004e 02F11403 		add	r3, r2, #20
 522              	.LVL56:
 523              		.syntax unified
 524              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 525 0052 53E8003F 		ldrex r3, [r3]
 526              	@ 0 "" 2
 527              	.LVL57:
 528              		.thumb
 529              		.syntax unified
 530              	.LBE347:
 531              	.LBE346:
3195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 532              		.loc 1 3195 0 discriminator 1
 533 0056 23F00103 		bic	r3, r3, #1
 534              	.LVL58:
 535              	.LBB348:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 96


 536              	.LBB349:
 537              		.loc 2 1123 0 discriminator 1
 538 005a 1432     		adds	r2, r2, #20
 539              	.LVL59:
 540              		.syntax unified
 541              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 542 005c 42E80031 		strex r1, r3, [r2]
 543              	@ 0 "" 2
 544              	.LVL60:
 545              		.thumb
 546              		.syntax unified
 547              	.LBE349:
 548              	.LBE348:
3195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 549              		.loc 1 3195 0 discriminator 1
 550 0060 0029     		cmp	r1, #0
 551 0062 F3D1     		bne	.L27
 552              	.LBE345:
3197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 553              		.loc 1 3197 0
 554 0064 2023     		movs	r3, #32
 555              	.LVL61:
 556 0066 84F84130 		strb	r3, [r4, #65]
3198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 557              		.loc 1 3198 0
 558 006a 84F84230 		strb	r3, [r4, #66]
3201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 559              		.loc 1 3201 0
 560 006e 0023     		movs	r3, #0
 561 0070 84F84030 		strb	r3, [r4, #64]
3203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 562              		.loc 1 3203 0
 563 0074 0320     		movs	r0, #3
 564 0076 00E0     		b	.L28
 565              	.L31:
3207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 566              		.loc 1 3207 0
 567 0078 0020     		movs	r0, #0
 568              	.L28:
3208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 569              		.loc 1 3208 0
 570 007a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 571              		.cfi_endproc
 572              	.LFE113:
 574              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 575              		.align	1
 576              		.weak	HAL_UART_MspInit
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu softvfp
 582              	HAL_UART_MspInit:
 583              	.LFB70:
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 584              		.loc 1 719 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 97


 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL62:
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 590              		.loc 1 725 0
 591 0000 7047     		bx	lr
 592              		.cfi_endproc
 593              	.LFE70:
 595              		.section	.text.HAL_UART_Init,"ax",%progbits
 596              		.align	1
 597              		.global	HAL_UART_Init
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu softvfp
 603              	HAL_UART_Init:
 604              	.LFB65:
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 605              		.loc 1 355 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              	.LVL63:
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 610              		.loc 1 357 0
 611 0000 60B3     		cbz	r0, .L36
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 612              		.loc 1 355 0
 613 0002 10B5     		push	{r4, lr}
 614              	.LCFI2:
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 4, -8
 617              		.cfi_offset 14, -4
 618 0004 0446     		mov	r4, r0
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 619              		.loc 1 378 0
 620 0006 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 621 000a 13B3     		cbz	r3, .L41
 622              	.LVL64:
 623              	.L35:
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 624              		.loc 1 399 0
 625 000c 2423     		movs	r3, #36
 626 000e 84F84130 		strb	r3, [r4, #65]
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 627              		.loc 1 402 0
 628 0012 2268     		ldr	r2, [r4]
 629 0014 D368     		ldr	r3, [r2, #12]
 630 0016 23F40053 		bic	r3, r3, #8192
 631 001a D360     		str	r3, [r2, #12]
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 632              		.loc 1 405 0
 633 001c 2046     		mov	r0, r4
 634 001e FFF7FEFF 		bl	UART_SetConfig
 635              	.LVL65:
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 636              		.loc 1 410 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 98


 637 0022 2268     		ldr	r2, [r4]
 638 0024 1369     		ldr	r3, [r2, #16]
 639 0026 23F49043 		bic	r3, r3, #18432
 640 002a 1361     		str	r3, [r2, #16]
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 641              		.loc 1 411 0
 642 002c 2268     		ldr	r2, [r4]
 643 002e 5369     		ldr	r3, [r2, #20]
 644 0030 23F02A03 		bic	r3, r3, #42
 645 0034 5361     		str	r3, [r2, #20]
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 646              		.loc 1 414 0
 647 0036 2268     		ldr	r2, [r4]
 648 0038 D368     		ldr	r3, [r2, #12]
 649 003a 43F40053 		orr	r3, r3, #8192
 650 003e D360     		str	r3, [r2, #12]
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 651              		.loc 1 417 0
 652 0040 0020     		movs	r0, #0
 653 0042 6064     		str	r0, [r4, #68]
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 654              		.loc 1 418 0
 655 0044 2023     		movs	r3, #32
 656 0046 84F84130 		strb	r3, [r4, #65]
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 657              		.loc 1 419 0
 658 004a 84F84230 		strb	r3, [r4, #66]
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 659              		.loc 1 420 0
 660 004e 6063     		str	r0, [r4, #52]
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 661              		.loc 1 423 0
 662 0050 10BD     		pop	{r4, pc}
 663              	.LVL66:
 664              	.L41:
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 665              		.loc 1 381 0
 666 0052 80F84030 		strb	r3, [r0, #64]
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 667              		.loc 1 395 0
 668 0056 FFF7FEFF 		bl	HAL_UART_MspInit
 669              	.LVL67:
 670 005a D7E7     		b	.L35
 671              	.LVL68:
 672              	.L36:
 673              	.LCFI3:
 674              		.cfi_def_cfa_offset 0
 675              		.cfi_restore 4
 676              		.cfi_restore 14
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 677              		.loc 1 359 0
 678 005c 0120     		movs	r0, #1
 679              	.LVL69:
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 680              		.loc 1 423 0
 681 005e 7047     		bx	lr
 682              		.cfi_endproc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 99


 683              	.LFE65:
 685              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 686              		.align	1
 687              		.global	HAL_HalfDuplex_Init
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu softvfp
 693              	HAL_HalfDuplex_Init:
 694              	.LFB66:
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 695              		.loc 1 433 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              	.LVL70:
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 700              		.loc 1 435 0
 701 0000 0028     		cmp	r0, #0
 702 0002 31D0     		beq	.L45
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 703              		.loc 1 433 0
 704 0004 10B5     		push	{r4, lr}
 705              	.LCFI4:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 4, -8
 708              		.cfi_offset 14, -4
 709 0006 0446     		mov	r4, r0
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 710              		.loc 1 447 0
 711 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 712 000c 3BB3     		cbz	r3, .L50
 713              	.LVL71:
 714              	.L44:
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 715              		.loc 1 468 0
 716 000e 2423     		movs	r3, #36
 717 0010 84F84130 		strb	r3, [r4, #65]
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 718              		.loc 1 471 0
 719 0014 2268     		ldr	r2, [r4]
 720 0016 D368     		ldr	r3, [r2, #12]
 721 0018 23F40053 		bic	r3, r3, #8192
 722 001c D360     		str	r3, [r2, #12]
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 723              		.loc 1 474 0
 724 001e 2046     		mov	r0, r4
 725 0020 FFF7FEFF 		bl	UART_SetConfig
 726              	.LVL72:
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 727              		.loc 1 479 0
 728 0024 2268     		ldr	r2, [r4]
 729 0026 1369     		ldr	r3, [r2, #16]
 730 0028 23F49043 		bic	r3, r3, #18432
 731 002c 1361     		str	r3, [r2, #16]
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 732              		.loc 1 480 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 100


 733 002e 2268     		ldr	r2, [r4]
 734 0030 5369     		ldr	r3, [r2, #20]
 735 0032 23F02203 		bic	r3, r3, #34
 736 0036 5361     		str	r3, [r2, #20]
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 737              		.loc 1 483 0
 738 0038 2268     		ldr	r2, [r4]
 739 003a 5369     		ldr	r3, [r2, #20]
 740 003c 43F00803 		orr	r3, r3, #8
 741 0040 5361     		str	r3, [r2, #20]
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 742              		.loc 1 486 0
 743 0042 2268     		ldr	r2, [r4]
 744 0044 D368     		ldr	r3, [r2, #12]
 745 0046 43F40053 		orr	r3, r3, #8192
 746 004a D360     		str	r3, [r2, #12]
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 747              		.loc 1 489 0
 748 004c 0020     		movs	r0, #0
 749 004e 6064     		str	r0, [r4, #68]
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 750              		.loc 1 490 0
 751 0050 2023     		movs	r3, #32
 752 0052 84F84130 		strb	r3, [r4, #65]
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 753              		.loc 1 491 0
 754 0056 84F84230 		strb	r3, [r4, #66]
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 755              		.loc 1 492 0
 756 005a 6063     		str	r0, [r4, #52]
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 757              		.loc 1 495 0
 758 005c 10BD     		pop	{r4, pc}
 759              	.LVL73:
 760              	.L50:
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 761              		.loc 1 450 0
 762 005e 80F84030 		strb	r3, [r0, #64]
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 763              		.loc 1 464 0
 764 0062 FFF7FEFF 		bl	HAL_UART_MspInit
 765              	.LVL74:
 766 0066 D2E7     		b	.L44
 767              	.LVL75:
 768              	.L45:
 769              	.LCFI5:
 770              		.cfi_def_cfa_offset 0
 771              		.cfi_restore 4
 772              		.cfi_restore 14
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 773              		.loc 1 437 0
 774 0068 0120     		movs	r0, #1
 775              	.LVL76:
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 776              		.loc 1 495 0
 777 006a 7047     		bx	lr
 778              		.cfi_endproc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 101


 779              	.LFE66:
 781              		.section	.text.HAL_LIN_Init,"ax",%progbits
 782              		.align	1
 783              		.global	HAL_LIN_Init
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 787              		.fpu softvfp
 789              	HAL_LIN_Init:
 790              	.LFB67:
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 791              		.loc 1 509 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              	.LVL77:
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 796              		.loc 1 511 0
 797 0000 0028     		cmp	r0, #0
 798 0002 3CD0     		beq	.L54
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 799              		.loc 1 509 0
 800 0004 38B5     		push	{r3, r4, r5, lr}
 801              	.LCFI6:
 802              		.cfi_def_cfa_offset 16
 803              		.cfi_offset 3, -16
 804              		.cfi_offset 4, -12
 805              		.cfi_offset 5, -8
 806              		.cfi_offset 14, -4
 807 0006 0446     		mov	r4, r0
 808 0008 0D46     		mov	r5, r1
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 809              		.loc 1 526 0
 810 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 811 000e 002B     		cmp	r3, #0
 812 0010 30D0     		beq	.L59
 813              	.LVL78:
 814              	.L53:
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 815              		.loc 1 547 0
 816 0012 2423     		movs	r3, #36
 817 0014 84F84130 		strb	r3, [r4, #65]
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 818              		.loc 1 550 0
 819 0018 2268     		ldr	r2, [r4]
 820 001a D368     		ldr	r3, [r2, #12]
 821 001c 23F40053 		bic	r3, r3, #8192
 822 0020 D360     		str	r3, [r2, #12]
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 823              		.loc 1 553 0
 824 0022 2046     		mov	r0, r4
 825 0024 FFF7FEFF 		bl	UART_SetConfig
 826              	.LVL79:
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 827              		.loc 1 558 0
 828 0028 2268     		ldr	r2, [r4]
 829 002a 1369     		ldr	r3, [r2, #16]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 102


 830 002c 23F40063 		bic	r3, r3, #2048
 831 0030 1361     		str	r3, [r2, #16]
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 832              		.loc 1 559 0
 833 0032 2268     		ldr	r2, [r4]
 834 0034 5369     		ldr	r3, [r2, #20]
 835 0036 23F02A03 		bic	r3, r3, #42
 836 003a 5361     		str	r3, [r2, #20]
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 837              		.loc 1 562 0
 838 003c 2268     		ldr	r2, [r4]
 839 003e 1369     		ldr	r3, [r2, #16]
 840 0040 43F48043 		orr	r3, r3, #16384
 841 0044 1361     		str	r3, [r2, #16]
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 842              		.loc 1 565 0
 843 0046 2268     		ldr	r2, [r4]
 844 0048 1369     		ldr	r3, [r2, #16]
 845 004a 23F02003 		bic	r3, r3, #32
 846 004e 1361     		str	r3, [r2, #16]
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 847              		.loc 1 566 0
 848 0050 2368     		ldr	r3, [r4]
 849 0052 1969     		ldr	r1, [r3, #16]
 850 0054 0D43     		orrs	r5, r5, r1
 851              	.LVL80:
 852 0056 1D61     		str	r5, [r3, #16]
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 853              		.loc 1 569 0
 854 0058 2268     		ldr	r2, [r4]
 855 005a D368     		ldr	r3, [r2, #12]
 856 005c 43F40053 		orr	r3, r3, #8192
 857 0060 D360     		str	r3, [r2, #12]
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 858              		.loc 1 572 0
 859 0062 0020     		movs	r0, #0
 860 0064 6064     		str	r0, [r4, #68]
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 861              		.loc 1 573 0
 862 0066 2023     		movs	r3, #32
 863 0068 84F84130 		strb	r3, [r4, #65]
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 864              		.loc 1 574 0
 865 006c 84F84230 		strb	r3, [r4, #66]
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 866              		.loc 1 575 0
 867 0070 6063     		str	r0, [r4, #52]
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 868              		.loc 1 578 0
 869 0072 38BD     		pop	{r3, r4, r5, pc}
 870              	.LVL81:
 871              	.L59:
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 872              		.loc 1 529 0
 873 0074 80F84030 		strb	r3, [r0, #64]
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 874              		.loc 1 543 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 103


 875 0078 FFF7FEFF 		bl	HAL_UART_MspInit
 876              	.LVL82:
 877 007c C9E7     		b	.L53
 878              	.LVL83:
 879              	.L54:
 880              	.LCFI7:
 881              		.cfi_def_cfa_offset 0
 882              		.cfi_restore 3
 883              		.cfi_restore 4
 884              		.cfi_restore 5
 885              		.cfi_restore 14
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 886              		.loc 1 513 0
 887 007e 0120     		movs	r0, #1
 888              	.LVL84:
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 889              		.loc 1 578 0
 890 0080 7047     		bx	lr
 891              		.cfi_endproc
 892              	.LFE67:
 894              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 895              		.align	1
 896              		.global	HAL_MultiProcessor_Init
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu softvfp
 902              	HAL_MultiProcessor_Init:
 903              	.LFB68:
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 904              		.loc 1 593 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              	.LVL85:
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 909              		.loc 1 595 0
 910 0000 0028     		cmp	r0, #0
 911 0002 41D0     		beq	.L63
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 912              		.loc 1 593 0
 913 0004 70B5     		push	{r4, r5, r6, lr}
 914              	.LCFI8:
 915              		.cfi_def_cfa_offset 16
 916              		.cfi_offset 4, -16
 917              		.cfi_offset 5, -12
 918              		.cfi_offset 6, -8
 919              		.cfi_offset 14, -4
 920 0006 0446     		mov	r4, r0
 921 0008 1646     		mov	r6, r2
 922 000a 0D46     		mov	r5, r1
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 923              		.loc 1 611 0
 924 000c 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 925 0010 002B     		cmp	r3, #0
 926 0012 34D0     		beq	.L68
 927              	.LVL86:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 104


 928              	.L62:
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 929              		.loc 1 632 0
 930 0014 2423     		movs	r3, #36
 931 0016 84F84130 		strb	r3, [r4, #65]
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 932              		.loc 1 635 0
 933 001a 2268     		ldr	r2, [r4]
 934 001c D368     		ldr	r3, [r2, #12]
 935 001e 23F40053 		bic	r3, r3, #8192
 936 0022 D360     		str	r3, [r2, #12]
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 937              		.loc 1 638 0
 938 0024 2046     		mov	r0, r4
 939 0026 FFF7FEFF 		bl	UART_SetConfig
 940              	.LVL87:
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 941              		.loc 1 643 0
 942 002a 2268     		ldr	r2, [r4]
 943 002c 1369     		ldr	r3, [r2, #16]
 944 002e 23F49043 		bic	r3, r3, #18432
 945 0032 1361     		str	r3, [r2, #16]
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 946              		.loc 1 644 0
 947 0034 2268     		ldr	r2, [r4]
 948 0036 5369     		ldr	r3, [r2, #20]
 949 0038 23F02A03 		bic	r3, r3, #42
 950 003c 5361     		str	r3, [r2, #20]
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 951              		.loc 1 647 0
 952 003e 2268     		ldr	r2, [r4]
 953 0040 1369     		ldr	r3, [r2, #16]
 954 0042 23F00F03 		bic	r3, r3, #15
 955 0046 1361     		str	r3, [r2, #16]
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 956              		.loc 1 648 0
 957 0048 2368     		ldr	r3, [r4]
 958 004a 1969     		ldr	r1, [r3, #16]
 959 004c 0D43     		orrs	r5, r5, r1
 960 004e 1D61     		str	r5, [r3, #16]
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 961              		.loc 1 651 0
 962 0050 2268     		ldr	r2, [r4]
 963 0052 D368     		ldr	r3, [r2, #12]
 964 0054 23F40063 		bic	r3, r3, #2048
 965 0058 D360     		str	r3, [r2, #12]
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 966              		.loc 1 652 0
 967 005a 2168     		ldr	r1, [r4]
 968 005c CB68     		ldr	r3, [r1, #12]
 969 005e 3343     		orrs	r3, r3, r6
 970 0060 CB60     		str	r3, [r1, #12]
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 971              		.loc 1 655 0
 972 0062 2268     		ldr	r2, [r4]
 973 0064 D368     		ldr	r3, [r2, #12]
 974 0066 43F40053 		orr	r3, r3, #8192
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 105


 975 006a D360     		str	r3, [r2, #12]
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 976              		.loc 1 658 0
 977 006c 0020     		movs	r0, #0
 978 006e 6064     		str	r0, [r4, #68]
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 979              		.loc 1 659 0
 980 0070 2023     		movs	r3, #32
 981 0072 84F84130 		strb	r3, [r4, #65]
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 982              		.loc 1 660 0
 983 0076 84F84230 		strb	r3, [r4, #66]
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 984              		.loc 1 661 0
 985 007a 6063     		str	r0, [r4, #52]
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 986              		.loc 1 664 0
 987 007c 70BD     		pop	{r4, r5, r6, pc}
 988              	.LVL88:
 989              	.L68:
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 990              		.loc 1 614 0
 991 007e 80F84030 		strb	r3, [r0, #64]
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 992              		.loc 1 628 0
 993 0082 FFF7FEFF 		bl	HAL_UART_MspInit
 994              	.LVL89:
 995 0086 C5E7     		b	.L62
 996              	.LVL90:
 997              	.L63:
 998              	.LCFI9:
 999              		.cfi_def_cfa_offset 0
 1000              		.cfi_restore 4
 1001              		.cfi_restore 5
 1002              		.cfi_restore 6
 1003              		.cfi_restore 14
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1004              		.loc 1 597 0
 1005 0088 0120     		movs	r0, #1
 1006              	.LVL91:
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1007              		.loc 1 664 0
 1008 008a 7047     		bx	lr
 1009              		.cfi_endproc
 1010              	.LFE68:
 1012              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1013              		.align	1
 1014              		.weak	HAL_UART_MspDeInit
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu softvfp
 1020              	HAL_UART_MspDeInit:
 1021              	.LFB71:
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1022              		.loc 1 734 0
 1023              		.cfi_startproc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 106


 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026              		@ link register save eliminated.
 1027              	.LVL92:
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1028              		.loc 1 740 0
 1029 0000 7047     		bx	lr
 1030              		.cfi_endproc
 1031              	.LFE71:
 1033              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 1034              		.align	1
 1035              		.global	HAL_UART_DeInit
 1036              		.syntax unified
 1037              		.thumb
 1038              		.thumb_func
 1039              		.fpu softvfp
 1041              	HAL_UART_DeInit:
 1042              	.LFB69:
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 1043              		.loc 1 673 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 0
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047              	.LVL93:
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1048              		.loc 1 675 0
 1049 0000 B0B1     		cbz	r0, .L72
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 1050              		.loc 1 673 0
 1051 0002 10B5     		push	{r4, lr}
 1052              	.LCFI10:
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 4, -8
 1055              		.cfi_offset 14, -4
 1056 0004 0446     		mov	r4, r0
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1057              		.loc 1 683 0
 1058 0006 2423     		movs	r3, #36
 1059 0008 80F84130 		strb	r3, [r0, #65]
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1060              		.loc 1 686 0
 1061 000c 0268     		ldr	r2, [r0]
 1062 000e D368     		ldr	r3, [r2, #12]
 1063 0010 23F40053 		bic	r3, r3, #8192
 1064 0014 D360     		str	r3, [r2, #12]
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 1065              		.loc 1 697 0
 1066 0016 FFF7FEFF 		bl	HAL_UART_MspDeInit
 1067              	.LVL94:
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 1068              		.loc 1 700 0
 1069 001a 0020     		movs	r0, #0
 1070 001c 6064     		str	r0, [r4, #68]
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 1071              		.loc 1 701 0
 1072 001e 84F84100 		strb	r0, [r4, #65]
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 107


 1073              		.loc 1 702 0
 1074 0022 84F84200 		strb	r0, [r4, #66]
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 1075              		.loc 1 703 0
 1076 0026 2063     		str	r0, [r4, #48]
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1077              		.loc 1 704 0
 1078 0028 6063     		str	r0, [r4, #52]
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1079              		.loc 1 707 0
 1080 002a 84F84000 		strb	r0, [r4, #64]
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1081              		.loc 1 710 0
 1082 002e 10BD     		pop	{r4, pc}
 1083              	.LVL95:
 1084              	.L72:
 1085              	.LCFI11:
 1086              		.cfi_def_cfa_offset 0
 1087              		.cfi_restore 4
 1088              		.cfi_restore 14
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1089              		.loc 1 677 0
 1090 0030 0120     		movs	r0, #1
 1091              	.LVL96:
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1092              		.loc 1 710 0
 1093 0032 7047     		bx	lr
 1094              		.cfi_endproc
 1095              	.LFE69:
 1097              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1098              		.align	1
 1099              		.global	HAL_UART_Transmit
 1100              		.syntax unified
 1101              		.thumb
 1102              		.thumb_func
 1103              		.fpu softvfp
 1105              	HAL_UART_Transmit:
 1106              	.LFB72:
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   const uint8_t  *pdata8bits;
 1107              		.loc 1 1139 0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111              	.LVL97:
 1112 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1113              	.LCFI12:
 1114              		.cfi_def_cfa_offset 24
 1115              		.cfi_offset 4, -24
 1116              		.cfi_offset 5, -20
 1117              		.cfi_offset 6, -16
 1118              		.cfi_offset 7, -12
 1119              		.cfi_offset 8, -8
 1120              		.cfi_offset 14, -4
 1121 0004 82B0     		sub	sp, sp, #8
 1122              	.LCFI13:
 1123              		.cfi_def_cfa_offset 32
 1124 0006 1E46     		mov	r6, r3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 108


 1125              	.LVL98:
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1126              		.loc 1 1145 0
 1127 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1128              	.LVL99:
 1129 000c DBB2     		uxtb	r3, r3
 1130 000e 202B     		cmp	r3, #32
 1131 0010 4BD1     		bne	.L84
 1132 0012 0446     		mov	r4, r0
 1133 0014 0D46     		mov	r5, r1
 1134 0016 9046     		mov	r8, r2
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1135              		.loc 1 1147 0
 1136 0018 0029     		cmp	r1, #0
 1137 001a 4BD0     		beq	.L85
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1138              		.loc 1 1147 0 is_stmt 0 discriminator 1
 1139 001c 0AB9     		cbnz	r2, .L92
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1140              		.loc 1 1149 0 is_stmt 1
 1141 001e 0123     		movs	r3, #1
 1142 0020 44E0     		b	.L78
 1143              	.L92:
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1144              		.loc 1 1152 0
 1145 0022 0023     		movs	r3, #0
 1146 0024 4364     		str	r3, [r0, #68]
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1147              		.loc 1 1153 0
 1148 0026 2123     		movs	r3, #33
 1149 0028 80F84130 		strb	r3, [r0, #65]
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1150              		.loc 1 1156 0
 1151 002c FFF7FEFF 		bl	HAL_GetTick
 1152              	.LVL100:
 1153 0030 0746     		mov	r7, r0
 1154              	.LVL101:
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1155              		.loc 1 1158 0
 1156 0032 A4F82480 		strh	r8, [r4, #36]	@ movhi
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1157              		.loc 1 1159 0
 1158 0036 A4F82680 		strh	r8, [r4, #38]	@ movhi
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1159              		.loc 1 1162 0
 1160 003a A368     		ldr	r3, [r4, #8]
 1161 003c B3F5805F 		cmp	r3, #4096
 1162 0040 02D0     		beq	.L93
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1163              		.loc 1 1170 0
 1164 0042 4FF00008 		mov	r8, #0
 1165 0046 0EE0     		b	.L82
 1166              	.L93:
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1167              		.loc 1 1162 0 discriminator 1
 1168 0048 2369     		ldr	r3, [r4, #16]
 1169 004a F3B1     		cbz	r3, .L88
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 109


1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1170              		.loc 1 1170 0
 1171 004c 4FF00008 		mov	r8, #0
 1172 0050 09E0     		b	.L82
 1173              	.LVL102:
 1174              	.L95:
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata16bits++;
 1175              		.loc 1 1181 0
 1176 0052 38F8023B 		ldrh	r3, [r8], #2
 1177              	.LVL103:
 1178 0056 2268     		ldr	r2, [r4]
 1179 0058 C3F30803 		ubfx	r3, r3, #0, #9
 1180 005c 5360     		str	r3, [r2, #4]
 1181              	.LVL104:
 1182              	.L81:
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1183              		.loc 1 1189 0
 1184 005e E38C     		ldrh	r3, [r4, #38]
 1185 0060 013B     		subs	r3, r3, #1
 1186 0062 9BB2     		uxth	r3, r3
 1187 0064 E384     		strh	r3, [r4, #38]	@ movhi
 1188              	.LVL105:
 1189              	.L82:
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1190              		.loc 1 1173 0
 1191 0066 E38C     		ldrh	r3, [r4, #38]
 1192 0068 9BB2     		uxth	r3, r3
 1193 006a 8BB1     		cbz	r3, .L94
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1194              		.loc 1 1175 0
 1195 006c 0096     		str	r6, [sp]
 1196 006e 3B46     		mov	r3, r7
 1197 0070 0022     		movs	r2, #0
 1198 0072 8021     		movs	r1, #128
 1199 0074 2046     		mov	r0, r4
 1200 0076 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1201              	.LVL106:
 1202 007a E8B9     		cbnz	r0, .L89
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1203              		.loc 1 1179 0
 1204 007c 002D     		cmp	r5, #0
 1205 007e E8D0     		beq	.L95
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata8bits++;
 1206              		.loc 1 1186 0
 1207 0080 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 1208              	.LVL107:
 1209 0084 2368     		ldr	r3, [r4]
 1210 0086 5A60     		str	r2, [r3, #4]
 1211              	.LVL108:
 1212 0088 E9E7     		b	.L81
 1213              	.LVL109:
 1214              	.L88:
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1215              		.loc 1 1165 0
 1216 008a A846     		mov	r8, r5
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 1217              		.loc 1 1164 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 110


 1218 008c 0025     		movs	r5, #0
 1219              	.LVL110:
 1220 008e EAE7     		b	.L82
 1221              	.LVL111:
 1222              	.L94:
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1223              		.loc 1 1192 0
 1224 0090 0096     		str	r6, [sp]
 1225 0092 3B46     		mov	r3, r7
 1226 0094 0022     		movs	r2, #0
 1227 0096 4021     		movs	r1, #64
 1228 0098 2046     		mov	r0, r4
 1229 009a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1230              	.LVL112:
 1231 009e 0346     		mov	r3, r0
 1232 00a0 60B9     		cbnz	r0, .L90
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1233              		.loc 1 1198 0
 1234 00a2 2022     		movs	r2, #32
 1235 00a4 84F84120 		strb	r2, [r4, #65]
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1236              		.loc 1 1200 0
 1237 00a8 00E0     		b	.L78
 1238              	.LVL113:
 1239              	.L84:
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1240              		.loc 1 1204 0
 1241 00aa 0223     		movs	r3, #2
 1242              	.LVL114:
 1243              	.L78:
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1244              		.loc 1 1206 0
 1245 00ac 1846     		mov	r0, r3
 1246 00ae 02B0     		add	sp, sp, #8
 1247              	.LCFI14:
 1248              		.cfi_remember_state
 1249              		.cfi_def_cfa_offset 24
 1250              		@ sp needed
 1251 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1252              	.LVL115:
 1253              	.L85:
 1254              	.LCFI15:
 1255              		.cfi_restore_state
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1256              		.loc 1 1149 0
 1257 00b4 0123     		movs	r3, #1
 1258 00b6 F9E7     		b	.L78
 1259              	.LVL116:
 1260              	.L89:
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 1261              		.loc 1 1177 0
 1262 00b8 0323     		movs	r3, #3
 1263 00ba F7E7     		b	.L78
 1264              	.L90:
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1265              		.loc 1 1194 0
 1266 00bc 0323     		movs	r3, #3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 111


 1267 00be F5E7     		b	.L78
 1268              		.cfi_endproc
 1269              	.LFE72:
 1271              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1272              		.align	1
 1273              		.global	HAL_UART_Receive
 1274              		.syntax unified
 1275              		.thumb
 1276              		.thumb_func
 1277              		.fpu softvfp
 1279              	HAL_UART_Receive:
 1280              	.LFB73:
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
 1281              		.loc 1 1221 0
 1282              		.cfi_startproc
 1283              		@ args = 0, pretend = 0, frame = 0
 1284              		@ frame_needed = 0, uses_anonymous_args = 0
 1285              	.LVL117:
 1286 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1287              	.LCFI16:
 1288              		.cfi_def_cfa_offset 24
 1289              		.cfi_offset 4, -24
 1290              		.cfi_offset 5, -20
 1291              		.cfi_offset 6, -16
 1292              		.cfi_offset 7, -12
 1293              		.cfi_offset 8, -8
 1294              		.cfi_offset 14, -4
 1295 0004 82B0     		sub	sp, sp, #8
 1296              	.LCFI17:
 1297              		.cfi_def_cfa_offset 32
 1298 0006 1E46     		mov	r6, r3
 1299              	.LVL118:
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1300              		.loc 1 1227 0
 1301 0008 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 1302              	.LVL119:
 1303 000c DBB2     		uxtb	r3, r3
 1304 000e 202B     		cmp	r3, #32
 1305 0010 52D1     		bne	.L106
 1306 0012 0446     		mov	r4, r0
 1307 0014 0D46     		mov	r5, r1
 1308 0016 9046     		mov	r8, r2
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1309              		.loc 1 1229 0
 1310 0018 0029     		cmp	r1, #0
 1311 001a 51D0     		beq	.L107
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1312              		.loc 1 1229 0 is_stmt 0 discriminator 1
 1313 001c 0AB9     		cbnz	r2, .L113
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1314              		.loc 1 1231 0 is_stmt 1
 1315 001e 0120     		movs	r0, #1
 1316              	.LVL120:
 1317 0020 4BE0     		b	.L97
 1318              	.LVL121:
 1319              	.L113:
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 112


 1320              		.loc 1 1234 0
 1321 0022 0023     		movs	r3, #0
 1322 0024 4364     		str	r3, [r0, #68]
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1323              		.loc 1 1235 0
 1324 0026 2222     		movs	r2, #34
 1325              	.LVL122:
 1326 0028 80F84220 		strb	r2, [r0, #66]
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1327              		.loc 1 1236 0
 1328 002c 0363     		str	r3, [r0, #48]
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1329              		.loc 1 1239 0
 1330 002e FFF7FEFF 		bl	HAL_GetTick
 1331              	.LVL123:
 1332 0032 0746     		mov	r7, r0
 1333              	.LVL124:
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1334              		.loc 1 1241 0
 1335 0034 A4F82C80 		strh	r8, [r4, #44]	@ movhi
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1336              		.loc 1 1242 0
 1337 0038 A4F82E80 		strh	r8, [r4, #46]	@ movhi
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1338              		.loc 1 1245 0
 1339 003c A368     		ldr	r3, [r4, #8]
 1340 003e B3F5805F 		cmp	r3, #4096
 1341 0042 02D0     		beq	.L114
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1342              		.loc 1 1253 0
 1343 0044 4FF00008 		mov	r8, #0
 1344 0048 16E0     		b	.L99
 1345              	.L114:
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1346              		.loc 1 1245 0 discriminator 1
 1347 004a 2369     		ldr	r3, [r4, #16]
 1348 004c 13B1     		cbz	r3, .L110
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1349              		.loc 1 1253 0
 1350 004e 4FF00008 		mov	r8, #0
 1351 0052 11E0     		b	.L99
 1352              	.L110:
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1353              		.loc 1 1248 0
 1354 0054 A846     		mov	r8, r5
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1355              		.loc 1 1247 0
 1356 0056 0025     		movs	r5, #0
 1357              	.LVL125:
 1358 0058 0EE0     		b	.L99
 1359              	.LVL126:
 1360              	.L116:
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata16bits++;
 1361              		.loc 1 1265 0
 1362 005a 2368     		ldr	r3, [r4]
 1363 005c 5B68     		ldr	r3, [r3, #4]
 1364 005e C3F30803 		ubfx	r3, r3, #0, #9
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 113


 1365 0062 28F8023B 		strh	r3, [r8], #2	@ movhi
 1366              	.LVL127:
 1367 0066 03E0     		b	.L101
 1368              	.L102:
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1369              		.loc 1 1272 0
 1370 0068 2368     		ldr	r3, [r4]
 1371 006a 5B68     		ldr	r3, [r3, #4]
 1372 006c 2B70     		strb	r3, [r5]
 1373              	.L104:
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 1374              		.loc 1 1278 0
 1375 006e 0135     		adds	r5, r5, #1
 1376              	.LVL128:
 1377              	.L101:
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1378              		.loc 1 1280 0
 1379 0070 E38D     		ldrh	r3, [r4, #46]
 1380 0072 013B     		subs	r3, r3, #1
 1381 0074 9BB2     		uxth	r3, r3
 1382 0076 E385     		strh	r3, [r4, #46]	@ movhi
 1383              	.LVL129:
 1384              	.L99:
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1385              		.loc 1 1257 0
 1386 0078 E38D     		ldrh	r3, [r4, #46]
 1387 007a 9BB2     		uxth	r3, r3
 1388 007c BBB1     		cbz	r3, .L115
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1389              		.loc 1 1259 0
 1390 007e 0096     		str	r6, [sp]
 1391 0080 3B46     		mov	r3, r7
 1392 0082 0022     		movs	r2, #0
 1393 0084 2021     		movs	r1, #32
 1394 0086 2046     		mov	r0, r4
 1395 0088 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1396              	.LVL130:
 1397 008c D0B9     		cbnz	r0, .L111
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1398              		.loc 1 1263 0
 1399 008e 002D     		cmp	r5, #0
 1400 0090 E3D0     		beq	.L116
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1401              		.loc 1 1270 0
 1402 0092 A368     		ldr	r3, [r4, #8]
 1403 0094 B3F5805F 		cmp	r3, #4096
 1404 0098 E6D0     		beq	.L102
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1405              		.loc 1 1270 0 is_stmt 0 discriminator 1
 1406 009a 13B9     		cbnz	r3, .L103
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1407              		.loc 1 1270 0 discriminator 2
 1408 009c 2369     		ldr	r3, [r4, #16]
 1409 009e 002B     		cmp	r3, #0
 1410 00a0 E2D0     		beq	.L102
 1411              	.L103:
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 114


 1412              		.loc 1 1276 0 is_stmt 1
 1413 00a2 2368     		ldr	r3, [r4]
 1414 00a4 5B68     		ldr	r3, [r3, #4]
 1415 00a6 03F07F03 		and	r3, r3, #127
 1416 00aa 2B70     		strb	r3, [r5]
 1417 00ac DFE7     		b	.L104
 1418              	.L115:
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1419              		.loc 1 1284 0
 1420 00ae 2023     		movs	r3, #32
 1421 00b0 84F84230 		strb	r3, [r4, #66]
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1422              		.loc 1 1286 0
 1423 00b4 0020     		movs	r0, #0
 1424 00b6 00E0     		b	.L97
 1425              	.LVL131:
 1426              	.L106:
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1427              		.loc 1 1290 0
 1428 00b8 0220     		movs	r0, #2
 1429              	.LVL132:
 1430              	.L97:
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1431              		.loc 1 1292 0
 1432 00ba 02B0     		add	sp, sp, #8
 1433              	.LCFI18:
 1434              		.cfi_remember_state
 1435              		.cfi_def_cfa_offset 24
 1436              		@ sp needed
 1437 00bc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1438              	.LVL133:
 1439              	.L107:
 1440              	.LCFI19:
 1441              		.cfi_restore_state
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1442              		.loc 1 1231 0
 1443 00c0 0120     		movs	r0, #1
 1444              	.LVL134:
 1445 00c2 FAE7     		b	.L97
 1446              	.LVL135:
 1447              	.L111:
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 1448              		.loc 1 1261 0
 1449 00c4 0320     		movs	r0, #3
 1450 00c6 F8E7     		b	.L97
 1451              		.cfi_endproc
 1452              	.LFE73:
 1454              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1455              		.align	1
 1456              		.global	HAL_UART_Transmit_IT
 1457              		.syntax unified
 1458              		.thumb
 1459              		.thumb_func
 1460              		.fpu softvfp
 1462              	HAL_UART_Transmit_IT:
 1463              	.LFB74:
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 115


 1464              		.loc 1 1306 0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 0
 1467              		@ frame_needed = 0, uses_anonymous_args = 0
 1468              		@ link register save eliminated.
 1469              	.LVL136:
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1470              		.loc 1 1308 0
 1471 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1472 0004 DBB2     		uxtb	r3, r3
 1473 0006 202B     		cmp	r3, #32
 1474 0008 10D1     		bne	.L119
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1475              		.loc 1 1310 0
 1476 000a 89B1     		cbz	r1, .L120
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1477              		.loc 1 1310 0 is_stmt 0 discriminator 1
 1478 000c 92B1     		cbz	r2, .L121
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1479              		.loc 1 1315 0 is_stmt 1
 1480 000e 0162     		str	r1, [r0, #32]
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1481              		.loc 1 1316 0
 1482 0010 8284     		strh	r2, [r0, #36]	@ movhi
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1483              		.loc 1 1317 0
 1484 0012 C284     		strh	r2, [r0, #38]	@ movhi
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1485              		.loc 1 1319 0
 1486 0014 0023     		movs	r3, #0
 1487 0016 4364     		str	r3, [r0, #68]
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1488              		.loc 1 1320 0
 1489 0018 2122     		movs	r2, #33
 1490              	.LVL137:
 1491 001a 80F84120 		strb	r2, [r0, #65]
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1492              		.loc 1 1323 0
 1493 001e 0168     		ldr	r1, [r0]
 1494              	.LVL138:
 1495 0020 CA68     		ldr	r2, [r1, #12]
 1496 0022 42F08002 		orr	r2, r2, #128
 1497 0026 CA60     		str	r2, [r1, #12]
 1498              	.LVL139:
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1499              		.loc 1 1325 0
 1500 0028 1846     		mov	r0, r3
 1501              	.LVL140:
 1502 002a 7047     		bx	lr
 1503              	.LVL141:
 1504              	.L119:
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1505              		.loc 1 1329 0
 1506 002c 0220     		movs	r0, #2
 1507              	.LVL142:
 1508 002e 7047     		bx	lr
 1509              	.LVL143:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 116


 1510              	.L120:
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1511              		.loc 1 1312 0
 1512 0030 0120     		movs	r0, #1
 1513              	.LVL144:
 1514 0032 7047     		bx	lr
 1515              	.LVL145:
 1516              	.L121:
 1517 0034 0120     		movs	r0, #1
 1518              	.LVL146:
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1519              		.loc 1 1331 0
 1520 0036 7047     		bx	lr
 1521              		.cfi_endproc
 1522              	.LFE74:
 1524              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1525              		.align	1
 1526              		.global	HAL_UART_Transmit_DMA
 1527              		.syntax unified
 1528              		.thumb
 1529              		.thumb_func
 1530              		.fpu softvfp
 1532              	HAL_UART_Transmit_DMA:
 1533              	.LFB76:
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   const uint32_t *tmp;
 1534              		.loc 1 1377 0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 0
 1537              		@ frame_needed = 0, uses_anonymous_args = 0
 1538              	.LVL147:
 1539 0000 38B5     		push	{r3, r4, r5, lr}
 1540              	.LCFI20:
 1541              		.cfi_def_cfa_offset 16
 1542              		.cfi_offset 3, -16
 1543              		.cfi_offset 4, -12
 1544              		.cfi_offset 5, -8
 1545              		.cfi_offset 14, -4
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1546              		.loc 1 1381 0
 1547 0002 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1548 0006 EDB2     		uxtb	r5, r5
 1549 0008 202D     		cmp	r5, #32
 1550 000a 30D1     		bne	.L125
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1551              		.loc 1 1383 0
 1552 000c 0029     		cmp	r1, #0
 1553 000e 30D0     		beq	.L126
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1554              		.loc 1 1383 0 is_stmt 0 discriminator 1
 1555 0010 0AB9     		cbnz	r2, .L129
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1556              		.loc 1 1385 0 is_stmt 1
 1557 0012 0120     		movs	r0, #1
 1558              	.LVL148:
 1559 0014 2CE0     		b	.L123
 1560              	.LVL149:
 1561              	.L129:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 117


 1562 0016 1346     		mov	r3, r2
 1563 0018 0446     		mov	r4, r0
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1564              		.loc 1 1388 0
 1565 001a 0162     		str	r1, [r0, #32]
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1566              		.loc 1 1389 0
 1567 001c A284     		strh	r2, [r4, #36]	@ movhi
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1568              		.loc 1 1390 0
 1569 001e E284     		strh	r2, [r4, #38]	@ movhi
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1570              		.loc 1 1392 0
 1571 0020 0022     		movs	r2, #0
 1572              	.LVL150:
 1573 0022 4264     		str	r2, [r0, #68]
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1574              		.loc 1 1393 0
 1575 0024 2120     		movs	r0, #33
 1576              	.LVL151:
 1577 0026 84F84100 		strb	r0, [r4, #65]
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1578              		.loc 1 1396 0
 1579 002a A06B     		ldr	r0, [r4, #56]
 1580 002c 124D     		ldr	r5, .L130
 1581 002e 8562     		str	r5, [r0, #40]
 1582              	.LVL152:
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1583              		.loc 1 1399 0
 1584 0030 A06B     		ldr	r0, [r4, #56]
 1585 0032 124D     		ldr	r5, .L130+4
 1586 0034 C562     		str	r5, [r0, #44]
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1587              		.loc 1 1402 0
 1588 0036 A06B     		ldr	r0, [r4, #56]
 1589 0038 114D     		ldr	r5, .L130+8
 1590 003a 0563     		str	r5, [r0, #48]
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1591              		.loc 1 1405 0
 1592 003c A06B     		ldr	r0, [r4, #56]
 1593 003e 4263     		str	r2, [r0, #52]
 1594              	.LVL153:
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1595              		.loc 1 1409 0
 1596 0040 2268     		ldr	r2, [r4]
 1597 0042 0432     		adds	r2, r2, #4
 1598 0044 A06B     		ldr	r0, [r4, #56]
 1599 0046 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1600              	.LVL154:
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1601              		.loc 1 1412 0
 1602 004a 2368     		ldr	r3, [r4]
 1603 004c 6FF04002 		mvn	r2, #64
 1604 0050 1A60     		str	r2, [r3]
 1605              	.L124:
 1606              	.LBB350:
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 118


 1607              		.loc 1 1416 0 discriminator 1
 1608 0052 2268     		ldr	r2, [r4]
 1609              	.LVL155:
 1610              	.LBB351:
 1611              	.LBB352:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1612              		.loc 2 1072 0 discriminator 1
 1613 0054 02F11403 		add	r3, r2, #20
 1614              	.LVL156:
 1615              		.syntax unified
 1616              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1617 0058 53E8003F 		ldrex r3, [r3]
 1618              	@ 0 "" 2
 1619              	.LVL157:
 1620              		.thumb
 1621              		.syntax unified
 1622              	.LBE352:
 1623              	.LBE351:
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1624              		.loc 1 1416 0 discriminator 1
 1625 005c 43F08003 		orr	r3, r3, #128
 1626              	.LVL158:
 1627              	.LBB353:
 1628              	.LBB354:
 1629              		.loc 2 1123 0 discriminator 1
 1630 0060 1432     		adds	r2, r2, #20
 1631              	.LVL159:
 1632              		.syntax unified
 1633              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1634 0062 42E80031 		strex r1, r3, [r2]
 1635              	@ 0 "" 2
 1636              	.LVL160:
 1637              		.thumb
 1638              		.syntax unified
 1639              	.LBE354:
 1640              	.LBE353:
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1641              		.loc 1 1416 0 discriminator 1
 1642 0066 0029     		cmp	r1, #0
 1643 0068 F3D1     		bne	.L124
 1644              	.LBE350:
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1645              		.loc 1 1418 0
 1646 006a 0020     		movs	r0, #0
 1647              	.LBB355:
 1648 006c 00E0     		b	.L123
 1649              	.LVL161:
 1650              	.L125:
 1651              	.LBE355:
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1652              		.loc 1 1422 0
 1653 006e 0220     		movs	r0, #2
 1654              	.LVL162:
 1655              	.L123:
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1656              		.loc 1 1424 0
 1657 0070 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 119


 1658              	.LVL163:
 1659              	.L126:
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1660              		.loc 1 1385 0
 1661 0072 0120     		movs	r0, #1
 1662              	.LVL164:
 1663 0074 FCE7     		b	.L123
 1664              	.L131:
 1665 0076 00BF     		.align	2
 1666              	.L130:
 1667 0078 00000000 		.word	UART_DMATransmitCplt
 1668 007c 00000000 		.word	UART_DMATxHalfCplt
 1669 0080 00000000 		.word	UART_DMAError
 1670              		.cfi_endproc
 1671              	.LFE76:
 1673              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1674              		.align	1
 1675              		.global	HAL_UART_DMAPause
 1676              		.syntax unified
 1677              		.thumb
 1678              		.thumb_func
 1679              		.fpu softvfp
 1681              	HAL_UART_DMAPause:
 1682              	.LFB78:
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1683              		.loc 1 1466 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 0
 1686              		@ frame_needed = 0, uses_anonymous_args = 0
 1687              		@ link register save eliminated.
 1688              	.LVL165:
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1689              		.loc 1 1469 0
 1690 0000 0368     		ldr	r3, [r0]
 1691 0002 5A69     		ldr	r2, [r3, #20]
 1692 0004 02F08002 		and	r2, r2, #128
 1693              	.LVL166:
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1694              		.loc 1 1470 0
 1695 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1696 000c DBB2     		uxtb	r3, r3
 1697 000e 212B     		cmp	r3, #33
 1698 0010 0AD0     		beq	.L139
 1699              	.LVL167:
 1700              	.L133:
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1701              		.loc 1 1476 0
 1702 0012 0368     		ldr	r3, [r0]
 1703 0014 5A69     		ldr	r2, [r3, #20]
 1704 0016 02F04002 		and	r2, r2, #64
 1705              	.LVL168:
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1706              		.loc 1 1477 0
 1707 001a 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 1708 001e DBB2     		uxtb	r3, r3
 1709 0020 222B     		cmp	r3, #34
 1710 0022 10D0     		beq	.L140
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 120


 1711              	.LVL169:
 1712              	.L135:
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1713              		.loc 1 1488 0
 1714 0024 0020     		movs	r0, #0
 1715              	.LVL170:
 1716 0026 7047     		bx	lr
 1717              	.LVL171:
 1718              	.L139:
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1719              		.loc 1 1470 0 discriminator 1
 1720 0028 002A     		cmp	r2, #0
 1721 002a F2D0     		beq	.L133
 1722              	.LVL172:
 1723              	.L134:
 1724              	.LBB356:
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1725              		.loc 1 1473 0 discriminator 1
 1726 002c 0268     		ldr	r2, [r0]
 1727              	.LVL173:
 1728              	.LBB357:
 1729              	.LBB358:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1730              		.loc 2 1072 0 discriminator 1
 1731 002e 02F11403 		add	r3, r2, #20
 1732              	.LVL174:
 1733              		.syntax unified
 1734              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1735 0032 53E8003F 		ldrex r3, [r3]
 1736              	@ 0 "" 2
 1737              	.LVL175:
 1738              		.thumb
 1739              		.syntax unified
 1740              	.LBE358:
 1741              	.LBE357:
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1742              		.loc 1 1473 0 discriminator 1
 1743 0036 23F08003 		bic	r3, r3, #128
 1744              	.LVL176:
 1745              	.LBB359:
 1746              	.LBB360:
 1747              		.loc 2 1123 0 discriminator 1
 1748 003a 1432     		adds	r2, r2, #20
 1749              	.LVL177:
 1750              		.syntax unified
 1751              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1752 003c 42E80031 		strex r1, r3, [r2]
 1753              	@ 0 "" 2
 1754              	.LVL178:
 1755              		.thumb
 1756              		.syntax unified
 1757              	.LBE360:
 1758              	.LBE359:
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1759              		.loc 1 1473 0 discriminator 1
 1760 0040 0029     		cmp	r1, #0
 1761 0042 F3D1     		bne	.L134
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 121


 1762 0044 E5E7     		b	.L133
 1763              	.LVL179:
 1764              	.L140:
 1765              	.LBE356:
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1766              		.loc 1 1477 0 discriminator 1
 1767 0046 002A     		cmp	r2, #0
 1768 0048 ECD0     		beq	.L135
 1769              	.LVL180:
 1770              	.L136:
 1771              	.LBB361:
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1772              		.loc 1 1480 0 discriminator 1
 1773 004a 0268     		ldr	r2, [r0]
 1774              	.LVL181:
 1775              	.LBB362:
 1776              	.LBB363:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1777              		.loc 2 1072 0 discriminator 1
 1778 004c 02F10C03 		add	r3, r2, #12
 1779              	.LVL182:
 1780              		.syntax unified
 1781              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1782 0050 53E8003F 		ldrex r3, [r3]
 1783              	@ 0 "" 2
 1784              	.LVL183:
 1785              		.thumb
 1786              		.syntax unified
 1787              	.LBE363:
 1788              	.LBE362:
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1789              		.loc 1 1480 0 discriminator 1
 1790 0054 23F48073 		bic	r3, r3, #256
 1791              	.LVL184:
 1792              	.LBB364:
 1793              	.LBB365:
 1794              		.loc 2 1123 0 discriminator 1
 1795 0058 0C32     		adds	r2, r2, #12
 1796              	.LVL185:
 1797              		.syntax unified
 1798              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1799 005a 42E80031 		strex r1, r3, [r2]
 1800              	@ 0 "" 2
 1801              	.LVL186:
 1802              		.thumb
 1803              		.syntax unified
 1804              	.LBE365:
 1805              	.LBE364:
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1806              		.loc 1 1480 0 discriminator 1
 1807 005e 0029     		cmp	r1, #0
 1808 0060 F3D1     		bne	.L136
 1809              	.LVL187:
 1810              	.L137:
 1811              	.LBE361:
 1812              	.LBB366:
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 122


 1813              		.loc 1 1481 0 discriminator 1
 1814 0062 0268     		ldr	r2, [r0]
 1815              	.LVL188:
 1816              	.LBB367:
 1817              	.LBB368:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1818              		.loc 2 1072 0 discriminator 1
 1819 0064 02F11403 		add	r3, r2, #20
 1820              	.LVL189:
 1821              		.syntax unified
 1822              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1823 0068 53E8003F 		ldrex r3, [r3]
 1824              	@ 0 "" 2
 1825              	.LVL190:
 1826              		.thumb
 1827              		.syntax unified
 1828              	.LBE368:
 1829              	.LBE367:
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1830              		.loc 1 1481 0 discriminator 1
 1831 006c 23F00103 		bic	r3, r3, #1
 1832              	.LVL191:
 1833              	.LBB369:
 1834              	.LBB370:
 1835              		.loc 2 1123 0 discriminator 1
 1836 0070 1432     		adds	r2, r2, #20
 1837              	.LVL192:
 1838              		.syntax unified
 1839              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1840 0072 42E80031 		strex r1, r3, [r2]
 1841              	@ 0 "" 2
 1842              	.LVL193:
 1843              		.thumb
 1844              		.syntax unified
 1845              	.LBE370:
 1846              	.LBE369:
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1847              		.loc 1 1481 0 discriminator 1
 1848 0076 0029     		cmp	r1, #0
 1849 0078 F3D1     		bne	.L137
 1850              	.LVL194:
 1851              	.L138:
 1852              	.LBE366:
 1853              	.LBB371:
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1854              		.loc 1 1484 0 discriminator 1
 1855 007a 0268     		ldr	r2, [r0]
 1856              	.LVL195:
 1857              	.LBB372:
 1858              	.LBB373:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1859              		.loc 2 1072 0 discriminator 1
 1860 007c 02F11403 		add	r3, r2, #20
 1861              	.LVL196:
 1862              		.syntax unified
 1863              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1864 0080 53E8003F 		ldrex r3, [r3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 123


 1865              	@ 0 "" 2
 1866              	.LVL197:
 1867              		.thumb
 1868              		.syntax unified
 1869              	.LBE373:
 1870              	.LBE372:
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1871              		.loc 1 1484 0 discriminator 1
 1872 0084 23F04003 		bic	r3, r3, #64
 1873              	.LVL198:
 1874              	.LBB374:
 1875              	.LBB375:
 1876              		.loc 2 1123 0 discriminator 1
 1877 0088 1432     		adds	r2, r2, #20
 1878              	.LVL199:
 1879              		.syntax unified
 1880              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1881 008a 42E80031 		strex r1, r3, [r2]
 1882              	@ 0 "" 2
 1883              	.LVL200:
 1884              		.thumb
 1885              		.syntax unified
 1886              	.LBE375:
 1887              	.LBE374:
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1888              		.loc 1 1484 0 discriminator 1
 1889 008e 0029     		cmp	r1, #0
 1890 0090 F3D1     		bne	.L138
 1891 0092 C7E7     		b	.L135
 1892              	.LBE371:
 1893              		.cfi_endproc
 1894              	.LFE78:
 1896              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1897              		.align	1
 1898              		.global	HAL_UART_DMAResume
 1899              		.syntax unified
 1900              		.thumb
 1901              		.thumb_func
 1902              		.fpu softvfp
 1904              	HAL_UART_DMAResume:
 1905              	.LFB79:
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1906              		.loc 1 1497 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 8
 1909              		@ frame_needed = 0, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911              	.LVL201:
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1912              		.loc 1 1499 0
 1913 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1914 0004 DBB2     		uxtb	r3, r3
 1915 0006 212B     		cmp	r3, #33
 1916 0008 06D0     		beq	.L143
 1917              	.L142:
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1918              		.loc 1 1505 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 124


 1919 000a 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 1920 000e DBB2     		uxtb	r3, r3
 1921 0010 222B     		cmp	r3, #34
 1922 0012 0ED0     		beq	.L153
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1923              		.loc 1 1522 0
 1924 0014 0020     		movs	r0, #0
 1925              	.LVL202:
 1926 0016 7047     		bx	lr
 1927              	.LVL203:
 1928              	.L143:
 1929              	.LBB376:
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1930              		.loc 1 1502 0 discriminator 1
 1931 0018 0268     		ldr	r2, [r0]
 1932              	.LVL204:
 1933              	.LBB377:
 1934              	.LBB378:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1935              		.loc 2 1072 0 discriminator 1
 1936 001a 02F11403 		add	r3, r2, #20
 1937              	.LVL205:
 1938              		.syntax unified
 1939              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1940 001e 53E8003F 		ldrex r3, [r3]
 1941              	@ 0 "" 2
 1942              	.LVL206:
 1943              		.thumb
 1944              		.syntax unified
 1945              	.LBE378:
 1946              	.LBE377:
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1947              		.loc 1 1502 0 discriminator 1
 1948 0022 43F08003 		orr	r3, r3, #128
 1949              	.LVL207:
 1950              	.LBB379:
 1951              	.LBB380:
 1952              		.loc 2 1123 0 discriminator 1
 1953 0026 1432     		adds	r2, r2, #20
 1954              	.LVL208:
 1955              		.syntax unified
 1956              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1957 0028 42E80031 		strex r1, r3, [r2]
 1958              	@ 0 "" 2
 1959              	.LVL209:
 1960              		.thumb
 1961              		.syntax unified
 1962              	.LBE380:
 1963              	.LBE379:
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1964              		.loc 1 1502 0 discriminator 1
 1965 002c 0029     		cmp	r1, #0
 1966 002e F3D1     		bne	.L143
 1967 0030 EBE7     		b	.L142
 1968              	.LVL210:
 1969              	.L153:
 1970              	.LBE376:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 125


1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1971              		.loc 1 1497 0
 1972 0032 82B0     		sub	sp, sp, #8
 1973              	.LCFI21:
 1974              		.cfi_def_cfa_offset 8
 1975              	.LBB381:
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1976              		.loc 1 1508 0
 1977 0034 0023     		movs	r3, #0
 1978 0036 0193     		str	r3, [sp, #4]
 1979 0038 0368     		ldr	r3, [r0]
 1980 003a 1A68     		ldr	r2, [r3]
 1981 003c 0192     		str	r2, [sp, #4]
 1982 003e 5B68     		ldr	r3, [r3, #4]
 1983 0040 0193     		str	r3, [sp, #4]
 1984 0042 019B     		ldr	r3, [sp, #4]
 1985              	.LBE381:
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1986              		.loc 1 1511 0
 1987 0044 0369     		ldr	r3, [r0, #16]
 1988 0046 5BB1     		cbz	r3, .L147
 1989              	.L146:
 1990              	.LBB382:
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1991              		.loc 1 1513 0 discriminator 1
 1992 0048 0268     		ldr	r2, [r0]
 1993              	.LVL211:
 1994              	.LBB383:
 1995              	.LBB384:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1996              		.loc 2 1072 0 discriminator 1
 1997 004a 02F10C03 		add	r3, r2, #12
 1998              	.LVL212:
 1999              		.syntax unified
 2000              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2001 004e 53E8003F 		ldrex r3, [r3]
 2002              	@ 0 "" 2
 2003              	.LVL213:
 2004              		.thumb
 2005              		.syntax unified
 2006              	.LBE384:
 2007              	.LBE383:
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2008              		.loc 1 1513 0 discriminator 1
 2009 0052 43F48073 		orr	r3, r3, #256
 2010              	.LVL214:
 2011              	.LBB385:
 2012              	.LBB386:
 2013              		.loc 2 1123 0 discriminator 1
 2014 0056 0C32     		adds	r2, r2, #12
 2015              	.LVL215:
 2016              		.syntax unified
 2017              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2018 0058 42E80031 		strex r1, r3, [r2]
 2019              	@ 0 "" 2
 2020              	.LVL216:
 2021              		.thumb
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 126


 2022              		.syntax unified
 2023              	.LBE386:
 2024              	.LBE385:
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2025              		.loc 1 1513 0 discriminator 1
 2026 005c 0029     		cmp	r1, #0
 2027 005e F3D1     		bne	.L146
 2028              	.LVL217:
 2029              	.L147:
 2030              	.LBE382:
 2031              	.LBB387:
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2032              		.loc 1 1515 0 discriminator 1
 2033 0060 0268     		ldr	r2, [r0]
 2034              	.LVL218:
 2035              	.LBB388:
 2036              	.LBB389:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2037              		.loc 2 1072 0 discriminator 1
 2038 0062 02F11403 		add	r3, r2, #20
 2039              	.LVL219:
 2040              		.syntax unified
 2041              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2042 0066 53E8003F 		ldrex r3, [r3]
 2043              	@ 0 "" 2
 2044              	.LVL220:
 2045              		.thumb
 2046              		.syntax unified
 2047              	.LBE389:
 2048              	.LBE388:
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2049              		.loc 1 1515 0 discriminator 1
 2050 006a 43F00103 		orr	r3, r3, #1
 2051              	.LVL221:
 2052              	.LBB390:
 2053              	.LBB391:
 2054              		.loc 2 1123 0 discriminator 1
 2055 006e 1432     		adds	r2, r2, #20
 2056              	.LVL222:
 2057              		.syntax unified
 2058              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2059 0070 42E80031 		strex r1, r3, [r2]
 2060              	@ 0 "" 2
 2061              	.LVL223:
 2062              		.thumb
 2063              		.syntax unified
 2064              	.LBE391:
 2065              	.LBE390:
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2066              		.loc 1 1515 0 discriminator 1
 2067 0074 0029     		cmp	r1, #0
 2068 0076 F3D1     		bne	.L147
 2069              	.LVL224:
 2070              	.L148:
 2071              	.LBE387:
 2072              	.LBB392:
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 127


 2073              		.loc 1 1518 0 discriminator 1
 2074 0078 0268     		ldr	r2, [r0]
 2075              	.LVL225:
 2076              	.LBB393:
 2077              	.LBB394:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2078              		.loc 2 1072 0 discriminator 1
 2079 007a 02F11403 		add	r3, r2, #20
 2080              	.LVL226:
 2081              		.syntax unified
 2082              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2083 007e 53E8003F 		ldrex r3, [r3]
 2084              	@ 0 "" 2
 2085              	.LVL227:
 2086              		.thumb
 2087              		.syntax unified
 2088              	.LBE394:
 2089              	.LBE393:
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2090              		.loc 1 1518 0 discriminator 1
 2091 0082 43F04003 		orr	r3, r3, #64
 2092              	.LVL228:
 2093              	.LBB395:
 2094              	.LBB396:
 2095              		.loc 2 1123 0 discriminator 1
 2096 0086 1432     		adds	r2, r2, #20
 2097              	.LVL229:
 2098              		.syntax unified
 2099              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2100 0088 42E80031 		strex r1, r3, [r2]
 2101              	@ 0 "" 2
 2102              	.LVL230:
 2103              		.thumb
 2104              		.syntax unified
 2105              	.LBE396:
 2106              	.LBE395:
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2107              		.loc 1 1518 0 discriminator 1
 2108 008c 0029     		cmp	r1, #0
 2109 008e F3D1     		bne	.L148
 2110              	.LBE392:
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2111              		.loc 1 1522 0
 2112 0090 0020     		movs	r0, #0
 2113              	.LVL231:
 2114 0092 02B0     		add	sp, sp, #8
 2115              	.LCFI22:
 2116              		.cfi_def_cfa_offset 0
 2117              		@ sp needed
 2118 0094 7047     		bx	lr
 2119              		.cfi_endproc
 2120              	.LFE79:
 2122              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2123              		.align	1
 2124              		.global	HAL_UART_DMAStop
 2125              		.syntax unified
 2126              		.thumb
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 128


 2127              		.thumb_func
 2128              		.fpu softvfp
 2130              	HAL_UART_DMAStop:
 2131              	.LFB80:
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2132              		.loc 1 1531 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              	.LVL232:
 2137 0000 10B5     		push	{r4, lr}
 2138              	.LCFI23:
 2139              		.cfi_def_cfa_offset 8
 2140              		.cfi_offset 4, -8
 2141              		.cfi_offset 14, -4
 2142 0002 0446     		mov	r4, r0
 2143              	.LVL233:
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2144              		.loc 1 1540 0
 2145 0004 0368     		ldr	r3, [r0]
 2146 0006 5A69     		ldr	r2, [r3, #20]
 2147              	.LVL234:
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2148              		.loc 1 1541 0
 2149 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2150 000c DBB2     		uxtb	r3, r3
 2151 000e 212B     		cmp	r3, #33
 2152 0010 0AD0     		beq	.L162
 2153              	.LVL235:
 2154              	.L155:
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2155              		.loc 1 1554 0
 2156 0012 2368     		ldr	r3, [r4]
 2157 0014 5A69     		ldr	r2, [r3, #20]
 2158 0016 02F04002 		and	r2, r2, #64
 2159              	.LVL236:
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2160              		.loc 1 1555 0
 2161 001a 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 2162 001e DBB2     		uxtb	r3, r3
 2163 0020 222B     		cmp	r3, #34
 2164 0022 19D0     		beq	.L163
 2165              	.LVL237:
 2166              	.L158:
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2167              		.loc 1 1568 0
 2168 0024 0020     		movs	r0, #0
 2169 0026 10BD     		pop	{r4, pc}
 2170              	.LVL238:
 2171              	.L162:
 2172 0028 02F08002 		and	r2, r2, #128
 2173              	.LVL239:
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2174              		.loc 1 1541 0 discriminator 1
 2175 002c 002A     		cmp	r2, #0
 2176 002e F0D0     		beq	.L155
 2177              	.L156:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 129


 2178              	.LBB397:
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2179              		.loc 1 1543 0 discriminator 1
 2180 0030 2268     		ldr	r2, [r4]
 2181              	.LVL240:
 2182              	.LBB398:
 2183              	.LBB399:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2184              		.loc 2 1072 0 discriminator 1
 2185 0032 02F11403 		add	r3, r2, #20
 2186              	.LVL241:
 2187              		.syntax unified
 2188              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2189 0036 53E8003F 		ldrex r3, [r3]
 2190              	@ 0 "" 2
 2191              	.LVL242:
 2192              		.thumb
 2193              		.syntax unified
 2194              	.LBE399:
 2195              	.LBE398:
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2196              		.loc 1 1543 0 discriminator 1
 2197 003a 23F08003 		bic	r3, r3, #128
 2198              	.LVL243:
 2199              	.LBB400:
 2200              	.LBB401:
 2201              		.loc 2 1123 0 discriminator 1
 2202 003e 1432     		adds	r2, r2, #20
 2203              	.LVL244:
 2204              		.syntax unified
 2205              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2206 0040 42E80031 		strex r1, r3, [r2]
 2207              	@ 0 "" 2
 2208              	.LVL245:
 2209              		.thumb
 2210              		.syntax unified
 2211              	.LBE401:
 2212              	.LBE400:
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2213              		.loc 1 1543 0 discriminator 1
 2214 0044 0029     		cmp	r1, #0
 2215 0046 F3D1     		bne	.L156
 2216              	.LBE397:
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2217              		.loc 1 1546 0
 2218 0048 A06B     		ldr	r0, [r4, #56]
 2219              	.LVL246:
 2220 004a 08B1     		cbz	r0, .L157
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2221              		.loc 1 1548 0
 2222 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2223              	.LVL247:
 2224              	.L157:
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2225              		.loc 1 1550 0
 2226 0050 2046     		mov	r0, r4
 2227 0052 FFF7FEFF 		bl	UART_EndTxTransfer
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 130


 2228              	.LVL248:
 2229 0056 DCE7     		b	.L155
 2230              	.LVL249:
 2231              	.L163:
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2232              		.loc 1 1555 0 discriminator 1
 2233 0058 002A     		cmp	r2, #0
 2234 005a E3D0     		beq	.L158
 2235              	.LVL250:
 2236              	.L159:
 2237              	.LBB402:
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2238              		.loc 1 1557 0 discriminator 1
 2239 005c 2268     		ldr	r2, [r4]
 2240              	.LVL251:
 2241              	.LBB403:
 2242              	.LBB404:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2243              		.loc 2 1072 0 discriminator 1
 2244 005e 02F11403 		add	r3, r2, #20
 2245              	.LVL252:
 2246              		.syntax unified
 2247              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2248 0062 53E8003F 		ldrex r3, [r3]
 2249              	@ 0 "" 2
 2250              	.LVL253:
 2251              		.thumb
 2252              		.syntax unified
 2253              	.LBE404:
 2254              	.LBE403:
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2255              		.loc 1 1557 0 discriminator 1
 2256 0066 23F04003 		bic	r3, r3, #64
 2257              	.LVL254:
 2258              	.LBB405:
 2259              	.LBB406:
 2260              		.loc 2 1123 0 discriminator 1
 2261 006a 1432     		adds	r2, r2, #20
 2262              	.LVL255:
 2263              		.syntax unified
 2264              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2265 006c 42E80031 		strex r1, r3, [r2]
 2266              	@ 0 "" 2
 2267              	.LVL256:
 2268              		.thumb
 2269              		.syntax unified
 2270              	.LBE406:
 2271              	.LBE405:
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2272              		.loc 1 1557 0 discriminator 1
 2273 0070 0029     		cmp	r1, #0
 2274 0072 F3D1     		bne	.L159
 2275              	.LBE402:
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2276              		.loc 1 1560 0
 2277 0074 E06B     		ldr	r0, [r4, #60]
 2278 0076 08B1     		cbz	r0, .L160
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 131


1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2279              		.loc 1 1562 0
 2280 0078 FFF7FEFF 		bl	HAL_DMA_Abort
 2281              	.LVL257:
 2282              	.L160:
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2283              		.loc 1 1564 0
 2284 007c 2046     		mov	r0, r4
 2285 007e FFF7FEFF 		bl	UART_EndRxTransfer
 2286              	.LVL258:
 2287 0082 CFE7     		b	.L158
 2288              		.cfi_endproc
 2289              	.LFE80:
 2291              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 2292              		.align	1
 2293              		.global	HAL_UARTEx_ReceiveToIdle
 2294              		.syntax unified
 2295              		.thumb
 2296              		.thumb_func
 2297              		.fpu softvfp
 2299              	HAL_UARTEx_ReceiveToIdle:
 2300              	.LFB81:
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
 2301              		.loc 1 1587 0
 2302              		.cfi_startproc
 2303              		@ args = 4, pretend = 0, frame = 8
 2304              		@ frame_needed = 0, uses_anonymous_args = 0
 2305              	.LVL259:
 2306 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2307              	.LCFI24:
 2308              		.cfi_def_cfa_offset 28
 2309              		.cfi_offset 4, -28
 2310              		.cfi_offset 5, -24
 2311              		.cfi_offset 6, -20
 2312              		.cfi_offset 7, -16
 2313              		.cfi_offset 8, -12
 2314              		.cfi_offset 9, -8
 2315              		.cfi_offset 14, -4
 2316 0004 83B0     		sub	sp, sp, #12
 2317              	.LCFI25:
 2318              		.cfi_def_cfa_offset 40
 2319 0006 1F46     		mov	r7, r3
 2320 0008 0A9D     		ldr	r5, [sp, #40]
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2321              		.loc 1 1593 0
 2322 000a 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 2323              	.LVL260:
 2324 000e DBB2     		uxtb	r3, r3
 2325 0010 202B     		cmp	r3, #32
 2326 0012 7DD1     		bne	.L178
 2327 0014 0446     		mov	r4, r0
 2328 0016 0E46     		mov	r6, r1
 2329 0018 9146     		mov	r9, r2
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2330              		.loc 1 1595 0
 2331 001a 0029     		cmp	r1, #0
 2332 001c 7CD0     		beq	.L179
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 132


1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2333              		.loc 1 1595 0 is_stmt 0 discriminator 1
 2334 001e 0AB9     		cbnz	r2, .L184
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2335              		.loc 1 1597 0 is_stmt 1
 2336 0020 0120     		movs	r0, #1
 2337              	.LVL261:
 2338 0022 76E0     		b	.L165
 2339              	.LVL262:
 2340              	.L184:
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2341              		.loc 1 1600 0
 2342 0024 0023     		movs	r3, #0
 2343 0026 4364     		str	r3, [r0, #68]
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2344              		.loc 1 1601 0
 2345 0028 2222     		movs	r2, #34
 2346              	.LVL263:
 2347 002a 80F84220 		strb	r2, [r0, #66]
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 2348              		.loc 1 1602 0
 2349 002e 0122     		movs	r2, #1
 2350 0030 0263     		str	r2, [r0, #48]
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2351              		.loc 1 1603 0
 2352 0032 4363     		str	r3, [r0, #52]
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2353              		.loc 1 1606 0
 2354 0034 FFF7FEFF 		bl	HAL_GetTick
 2355              	.LVL264:
 2356 0038 8046     		mov	r8, r0
 2357              	.LVL265:
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 2358              		.loc 1 1608 0
 2359 003a A4F82C90 		strh	r9, [r4, #44]	@ movhi
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2360              		.loc 1 1609 0
 2361 003e A4F82E90 		strh	r9, [r4, #46]	@ movhi
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2362              		.loc 1 1612 0
 2363 0042 A368     		ldr	r3, [r4, #8]
 2364 0044 B3F5805F 		cmp	r3, #4096
 2365 0048 04D0     		beq	.L185
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2366              		.loc 1 1620 0
 2367 004a 4FF00009 		mov	r9, #0
 2368              	.LVL266:
 2369              	.L166:
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2370              		.loc 1 1624 0
 2371 004e 0023     		movs	r3, #0
 2372 0050 3B80     		strh	r3, [r7]	@ movhi
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2373              		.loc 1 1627 0
 2374 0052 21E0     		b	.L167
 2375              	.LVL267:
 2376              	.L185:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 133


1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2377              		.loc 1 1612 0 discriminator 1
 2378 0054 2369     		ldr	r3, [r4, #16]
 2379 0056 13B1     		cbz	r3, .L182
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2380              		.loc 1 1620 0
 2381 0058 4FF00009 		mov	r9, #0
 2382 005c F7E7     		b	.L166
 2383              	.L182:
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2384              		.loc 1 1615 0
 2385 005e B146     		mov	r9, r6
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 2386              		.loc 1 1614 0
 2387 0060 0026     		movs	r6, #0
 2388              	.LVL268:
 2389 0062 F4E7     		b	.L166
 2390              	.LVL269:
 2391              	.L188:
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2392              		.loc 1 1639 0
 2393 0064 0223     		movs	r3, #2
 2394 0066 6363     		str	r3, [r4, #52]
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2395              		.loc 1 1640 0
 2396 0068 2023     		movs	r3, #32
 2397 006a 84F84230 		strb	r3, [r4, #66]
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 2398              		.loc 1 1642 0
 2399 006e 0020     		movs	r0, #0
 2400 0070 4FE0     		b	.L165
 2401              	.L189:
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pdata16bits++;
 2402              		.loc 1 1651 0
 2403 0072 5B68     		ldr	r3, [r3, #4]
 2404 0074 C3F30803 		ubfx	r3, r3, #0, #9
 2405 0078 29F8023B 		strh	r3, [r9], #2	@ movhi
 2406              	.LVL270:
 2407 007c 02E0     		b	.L171
 2408              	.L172:
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
 2409              		.loc 1 1658 0
 2410 007e 5B68     		ldr	r3, [r3, #4]
 2411 0080 3370     		strb	r3, [r6]
 2412              	.L174:
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 2413              		.loc 1 1665 0
 2414 0082 0136     		adds	r6, r6, #1
 2415              	.LVL271:
 2416              	.L171:
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxXferCount--;
 2417              		.loc 1 1668 0
 2418 0084 3B88     		ldrh	r3, [r7]
 2419 0086 0133     		adds	r3, r3, #1
 2420 0088 3B80     		strh	r3, [r7]	@ movhi
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2421              		.loc 1 1669 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 134


 2422 008a E38D     		ldrh	r3, [r4, #46]
 2423 008c 013B     		subs	r3, r3, #1
 2424 008e 9BB2     		uxth	r3, r3
 2425 0090 E385     		strh	r3, [r4, #46]	@ movhi
 2426              	.L169:
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2427              		.loc 1 1673 0
 2428 0092 B5F1FF3F 		cmp	r5, #-1
 2429 0096 25D1     		bne	.L186
 2430              	.L167:
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2431              		.loc 1 1627 0
 2432 0098 E38D     		ldrh	r3, [r4, #46]
 2433 009a 9BB2     		uxth	r3, r3
 2434 009c 002B     		cmp	r3, #0
 2435 009e 2ED0     		beq	.L187
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2436              		.loc 1 1630 0
 2437 00a0 2368     		ldr	r3, [r4]
 2438 00a2 1A68     		ldr	r2, [r3]
 2439 00a4 12F0100F 		tst	r2, #16
 2440 00a8 09D0     		beq	.L168
 2441              	.LBB407:
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2442              		.loc 1 1633 0
 2443 00aa 0022     		movs	r2, #0
 2444 00ac 0192     		str	r2, [sp, #4]
 2445 00ae 1A68     		ldr	r2, [r3]
 2446 00b0 0192     		str	r2, [sp, #4]
 2447 00b2 5A68     		ldr	r2, [r3, #4]
 2448 00b4 0192     		str	r2, [sp, #4]
 2449 00b6 019A     		ldr	r2, [sp, #4]
 2450              	.LBE407:
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 2451              		.loc 1 1637 0
 2452 00b8 3A88     		ldrh	r2, [r7]
 2453 00ba 002A     		cmp	r2, #0
 2454 00bc D2D1     		bne	.L188
 2455              	.L168:
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2456              		.loc 1 1647 0
 2457 00be 1A68     		ldr	r2, [r3]
 2458 00c0 12F0200F 		tst	r2, #32
 2459 00c4 E5D0     		beq	.L169
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 2460              		.loc 1 1649 0
 2461 00c6 002E     		cmp	r6, #0
 2462 00c8 D3D0     		beq	.L189
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
 2463              		.loc 1 1656 0
 2464 00ca A268     		ldr	r2, [r4, #8]
 2465 00cc B2F5805F 		cmp	r2, #4096
 2466 00d0 D5D0     		beq	.L172
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
 2467              		.loc 1 1656 0 is_stmt 0 discriminator 1
 2468 00d2 12B9     		cbnz	r2, .L173
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 135


 2469              		.loc 1 1656 0 discriminator 2
 2470 00d4 2269     		ldr	r2, [r4, #16]
 2471 00d6 002A     		cmp	r2, #0
 2472 00d8 D1D0     		beq	.L172
 2473              	.L173:
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
 2474              		.loc 1 1662 0 is_stmt 1
 2475 00da 5B68     		ldr	r3, [r3, #4]
 2476 00dc 03F07F03 		and	r3, r3, #127
 2477 00e0 3370     		strb	r3, [r6]
 2478 00e2 CEE7     		b	.L174
 2479              	.L186:
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 2480              		.loc 1 1675 0
 2481 00e4 FFF7FEFF 		bl	HAL_GetTick
 2482              	.LVL272:
 2483 00e8 A0EB0800 		sub	r0, r0, r8
 2484 00ec A842     		cmp	r0, r5
 2485 00ee 01D8     		bhi	.L176
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 2486              		.loc 1 1675 0 is_stmt 0 discriminator 1
 2487 00f0 002D     		cmp	r5, #0
 2488 00f2 D1D1     		bne	.L167
 2489              	.L176:
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2490              		.loc 1 1677 0 is_stmt 1
 2491 00f4 2023     		movs	r3, #32
 2492 00f6 84F84230 		strb	r3, [r4, #66]
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 2493              		.loc 1 1679 0
 2494 00fa 0320     		movs	r0, #3
 2495 00fc 09E0     		b	.L165
 2496              	.L187:
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 2497              		.loc 1 1685 0
 2498 00fe A38D     		ldrh	r3, [r4, #44]
 2499 0100 E28D     		ldrh	r2, [r4, #46]
 2500 0102 9B1A     		subs	r3, r3, r2
 2501 0104 3B80     		strh	r3, [r7]	@ movhi
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2502              		.loc 1 1687 0
 2503 0106 2023     		movs	r3, #32
 2504 0108 84F84230 		strb	r3, [r4, #66]
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2505              		.loc 1 1689 0
 2506 010c 0020     		movs	r0, #0
 2507 010e 00E0     		b	.L165
 2508              	.LVL273:
 2509              	.L178:
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2510              		.loc 1 1693 0
 2511 0110 0220     		movs	r0, #2
 2512              	.LVL274:
 2513              	.L165:
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2514              		.loc 1 1695 0
 2515 0112 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 136


 2516              	.LCFI26:
 2517              		.cfi_remember_state
 2518              		.cfi_def_cfa_offset 28
 2519              		@ sp needed
 2520 0114 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2521              	.LVL275:
 2522              	.L179:
 2523              	.LCFI27:
 2524              		.cfi_restore_state
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2525              		.loc 1 1597 0
 2526 0118 0120     		movs	r0, #1
 2527              	.LVL276:
 2528 011a FAE7     		b	.L165
 2529              		.cfi_endproc
 2530              	.LFE81:
 2532              		.section	.text.HAL_UARTEx_GetRxEventType,"ax",%progbits
 2533              		.align	1
 2534              		.global	HAL_UARTEx_GetRxEventType
 2535              		.syntax unified
 2536              		.thumb
 2537              		.thumb_func
 2538              		.fpu softvfp
 2540              	HAL_UARTEx_GetRxEventType:
 2541              	.LFB84:
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Return Rx Event type value, as stored in UART handle */
 2542              		.loc 1 1839 0
 2543              		.cfi_startproc
 2544              		@ args = 0, pretend = 0, frame = 0
 2545              		@ frame_needed = 0, uses_anonymous_args = 0
 2546              		@ link register save eliminated.
 2547              	.LVL277:
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2548              		.loc 1 1841 0
 2549 0000 406B     		ldr	r0, [r0, #52]
 2550              	.LVL278:
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2551              		.loc 1 1842 0
 2552 0002 7047     		bx	lr
 2553              		.cfi_endproc
 2554              	.LFE84:
 2556              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2557              		.align	1
 2558              		.global	HAL_UART_Abort
 2559              		.syntax unified
 2560              		.thumb
 2561              		.thumb_func
 2562              		.fpu softvfp
 2564              	HAL_UART_Abort:
 2565              	.LFB85:
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2566              		.loc 1 1857 0
 2567              		.cfi_startproc
 2568              		@ args = 0, pretend = 0, frame = 0
 2569              		@ frame_needed = 0, uses_anonymous_args = 0
 2570              	.LVL279:
 2571 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 137


 2572              	.LCFI28:
 2573              		.cfi_def_cfa_offset 8
 2574              		.cfi_offset 4, -8
 2575              		.cfi_offset 14, -4
 2576 0002 0446     		mov	r4, r0
 2577              	.L192:
 2578              	.LBB408:
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2579              		.loc 1 1859 0 discriminator 1
 2580 0004 2268     		ldr	r2, [r4]
 2581              	.LVL280:
 2582              	.LBB409:
 2583              	.LBB410:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2584              		.loc 2 1072 0 discriminator 1
 2585 0006 02F10C03 		add	r3, r2, #12
 2586              	.LVL281:
 2587              		.syntax unified
 2588              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2589 000a 53E8003F 		ldrex r3, [r3]
 2590              	@ 0 "" 2
 2591              	.LVL282:
 2592              		.thumb
 2593              		.syntax unified
 2594              	.LBE410:
 2595              	.LBE409:
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2596              		.loc 1 1859 0 discriminator 1
 2597 000e 23F4F073 		bic	r3, r3, #480
 2598              	.LVL283:
 2599              	.LBB411:
 2600              	.LBB412:
 2601              		.loc 2 1123 0 discriminator 1
 2602 0012 0C32     		adds	r2, r2, #12
 2603              	.LVL284:
 2604              		.syntax unified
 2605              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2606 0014 42E80031 		strex r1, r3, [r2]
 2607              	@ 0 "" 2
 2608              	.LVL285:
 2609              		.thumb
 2610              		.syntax unified
 2611              	.LBE412:
 2612              	.LBE411:
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2613              		.loc 1 1859 0 discriminator 1
 2614 0018 0029     		cmp	r1, #0
 2615 001a F3D1     		bne	.L192
 2616              	.LVL286:
 2617              	.L193:
 2618              	.LBE408:
 2619              	.LBB413:
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2620              		.loc 1 1860 0 discriminator 1
 2621 001c 2268     		ldr	r2, [r4]
 2622              	.LVL287:
 2623              	.LBB414:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 138


 2624              	.LBB415:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2625              		.loc 2 1072 0 discriminator 1
 2626 001e 02F11403 		add	r3, r2, #20
 2627              	.LVL288:
 2628              		.syntax unified
 2629              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2630 0022 53E8003F 		ldrex r3, [r3]
 2631              	@ 0 "" 2
 2632              	.LVL289:
 2633              		.thumb
 2634              		.syntax unified
 2635              	.LBE415:
 2636              	.LBE414:
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2637              		.loc 1 1860 0 discriminator 1
 2638 0026 23F00103 		bic	r3, r3, #1
 2639              	.LVL290:
 2640              	.LBB416:
 2641              	.LBB417:
 2642              		.loc 2 1123 0 discriminator 1
 2643 002a 1432     		adds	r2, r2, #20
 2644              	.LVL291:
 2645              		.syntax unified
 2646              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2647 002c 42E80031 		strex r1, r3, [r2]
 2648              	@ 0 "" 2
 2649              	.LVL292:
 2650              		.thumb
 2651              		.syntax unified
 2652              	.LBE417:
 2653              	.LBE416:
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2654              		.loc 1 1860 0 discriminator 1
 2655 0030 0029     		cmp	r1, #0
 2656 0032 F3D1     		bne	.L193
 2657              	.LBE413:
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2658              		.loc 1 1863 0
 2659 0034 236B     		ldr	r3, [r4, #48]
 2660              	.LVL293:
 2661 0036 012B     		cmp	r3, #1
 2662 0038 3CD0     		beq	.L195
 2663              	.L194:
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2664              		.loc 1 1869 0
 2665 003a 2368     		ldr	r3, [r4]
 2666 003c 5B69     		ldr	r3, [r3, #20]
 2667 003e 13F0800F 		tst	r3, #128
 2668 0042 13D0     		beq	.L196
 2669              	.L197:
 2670              	.LBB418:
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2671              		.loc 1 1871 0 discriminator 1
 2672 0044 2268     		ldr	r2, [r4]
 2673              	.LVL294:
 2674              	.LBB419:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 139


 2675              	.LBB420:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2676              		.loc 2 1072 0 discriminator 1
 2677 0046 02F11403 		add	r3, r2, #20
 2678              	.LVL295:
 2679              		.syntax unified
 2680              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2681 004a 53E8003F 		ldrex r3, [r3]
 2682              	@ 0 "" 2
 2683              	.LVL296:
 2684              		.thumb
 2685              		.syntax unified
 2686              	.LBE420:
 2687              	.LBE419:
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2688              		.loc 1 1871 0 discriminator 1
 2689 004e 23F08003 		bic	r3, r3, #128
 2690              	.LVL297:
 2691              	.LBB421:
 2692              	.LBB422:
 2693              		.loc 2 1123 0 discriminator 1
 2694 0052 1432     		adds	r2, r2, #20
 2695              	.LVL298:
 2696              		.syntax unified
 2697              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2698 0054 42E80031 		strex r1, r3, [r2]
 2699              	@ 0 "" 2
 2700              	.LVL299:
 2701              		.thumb
 2702              		.syntax unified
 2703              	.LBE422:
 2704              	.LBE421:
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2705              		.loc 1 1871 0 discriminator 1
 2706 0058 0029     		cmp	r1, #0
 2707 005a F3D1     		bne	.L197
 2708              	.LBE418:
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2709              		.loc 1 1874 0
 2710 005c A36B     		ldr	r3, [r4, #56]
 2711              	.LVL300:
 2712 005e 2BB1     		cbz	r3, .L196
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2713              		.loc 1 1878 0
 2714 0060 0022     		movs	r2, #0
 2715 0062 5A63     		str	r2, [r3, #52]
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2716              		.loc 1 1880 0
 2717 0064 A06B     		ldr	r0, [r4, #56]
 2718              	.LVL301:
 2719 0066 FFF7FEFF 		bl	HAL_DMA_Abort
 2720              	.LVL302:
 2721 006a 80BB     		cbnz	r0, .L202
 2722              	.L196:
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2723              		.loc 1 1894 0
 2724 006c 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 140


 2725 006e 5B69     		ldr	r3, [r3, #20]
 2726 0070 13F0400F 		tst	r3, #64
 2727 0074 13D0     		beq	.L199
 2728              	.L200:
 2729              	.LBB423:
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2730              		.loc 1 1896 0 discriminator 1
 2731 0076 2268     		ldr	r2, [r4]
 2732              	.LVL303:
 2733              	.LBB424:
 2734              	.LBB425:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2735              		.loc 2 1072 0 discriminator 1
 2736 0078 02F11403 		add	r3, r2, #20
 2737              	.LVL304:
 2738              		.syntax unified
 2739              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2740 007c 53E8003F 		ldrex r3, [r3]
 2741              	@ 0 "" 2
 2742              	.LVL305:
 2743              		.thumb
 2744              		.syntax unified
 2745              	.LBE425:
 2746              	.LBE424:
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2747              		.loc 1 1896 0 discriminator 1
 2748 0080 23F04003 		bic	r3, r3, #64
 2749              	.LVL306:
 2750              	.LBB426:
 2751              	.LBB427:
 2752              		.loc 2 1123 0 discriminator 1
 2753 0084 1432     		adds	r2, r2, #20
 2754              	.LVL307:
 2755              		.syntax unified
 2756              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2757 0086 42E80031 		strex r1, r3, [r2]
 2758              	@ 0 "" 2
 2759              	.LVL308:
 2760              		.thumb
 2761              		.syntax unified
 2762              	.LBE427:
 2763              	.LBE426:
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2764              		.loc 1 1896 0 discriminator 1
 2765 008a 0029     		cmp	r1, #0
 2766 008c F3D1     		bne	.L200
 2767              	.LBE423:
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2768              		.loc 1 1899 0
 2769 008e E36B     		ldr	r3, [r4, #60]
 2770              	.LVL309:
 2771 0090 2BB1     		cbz	r3, .L199
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2772              		.loc 1 1903 0
 2773 0092 0022     		movs	r2, #0
 2774 0094 5A63     		str	r2, [r3, #52]
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 141


 2775              		.loc 1 1905 0
 2776 0096 E06B     		ldr	r0, [r4, #60]
 2777 0098 FFF7FEFF 		bl	HAL_DMA_Abort
 2778              	.LVL310:
 2779 009c 00BB     		cbnz	r0, .L203
 2780              	.L199:
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2781              		.loc 1 1919 0
 2782 009e 0020     		movs	r0, #0
 2783 00a0 E084     		strh	r0, [r4, #38]	@ movhi
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2784              		.loc 1 1920 0
 2785 00a2 E085     		strh	r0, [r4, #46]	@ movhi
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2786              		.loc 1 1923 0
 2787 00a4 6064     		str	r0, [r4, #68]
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2788              		.loc 1 1926 0
 2789 00a6 2023     		movs	r3, #32
 2790 00a8 84F84230 		strb	r3, [r4, #66]
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2791              		.loc 1 1927 0
 2792 00ac 84F84130 		strb	r3, [r4, #65]
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2793              		.loc 1 1928 0
 2794 00b0 2063     		str	r0, [r4, #48]
 2795              	.L198:
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2796              		.loc 1 1931 0
 2797 00b2 10BD     		pop	{r4, pc}
 2798              	.LVL311:
 2799              	.L195:
 2800              	.LBB428:
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2801              		.loc 1 1865 0 discriminator 1
 2802 00b4 2268     		ldr	r2, [r4]
 2803              	.LVL312:
 2804              	.LBB429:
 2805              	.LBB430:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2806              		.loc 2 1072 0 discriminator 1
 2807 00b6 02F10C03 		add	r3, r2, #12
 2808              	.LVL313:
 2809              		.syntax unified
 2810              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2811 00ba 53E8003F 		ldrex r3, [r3]
 2812              	@ 0 "" 2
 2813              	.LVL314:
 2814              		.thumb
 2815              		.syntax unified
 2816              	.LBE430:
 2817              	.LBE429:
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2818              		.loc 1 1865 0 discriminator 1
 2819 00be 23F01003 		bic	r3, r3, #16
 2820              	.LVL315:
 2821              	.LBB431:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 142


 2822              	.LBB432:
 2823              		.loc 2 1123 0 discriminator 1
 2824 00c2 0C32     		adds	r2, r2, #12
 2825              	.LVL316:
 2826              		.syntax unified
 2827              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2828 00c4 42E80031 		strex r1, r3, [r2]
 2829              	@ 0 "" 2
 2830              	.LVL317:
 2831              		.thumb
 2832              		.syntax unified
 2833              	.LBE432:
 2834              	.LBE431:
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2835              		.loc 1 1865 0 discriminator 1
 2836 00c8 0029     		cmp	r1, #0
 2837 00ca F3D1     		bne	.L195
 2838 00cc B5E7     		b	.L194
 2839              	.LVL318:
 2840              	.L202:
 2841              	.LBE428:
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 2842              		.loc 1 1882 0
 2843 00ce A06B     		ldr	r0, [r4, #56]
 2844 00d0 FFF7FEFF 		bl	HAL_DMA_GetError
 2845              	.LVL319:
 2846 00d4 2028     		cmp	r0, #32
 2847 00d6 C9D1     		bne	.L196
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2848              		.loc 1 1885 0
 2849 00d8 1023     		movs	r3, #16
 2850 00da 6364     		str	r3, [r4, #68]
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 2851              		.loc 1 1887 0
 2852 00dc 0320     		movs	r0, #3
 2853 00de E8E7     		b	.L198
 2854              	.L203:
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 2855              		.loc 1 1907 0
 2856 00e0 E06B     		ldr	r0, [r4, #60]
 2857 00e2 FFF7FEFF 		bl	HAL_DMA_GetError
 2858              	.LVL320:
 2859 00e6 2028     		cmp	r0, #32
 2860 00e8 D9D1     		bne	.L199
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2861              		.loc 1 1910 0
 2862 00ea 1023     		movs	r3, #16
 2863 00ec 6364     		str	r3, [r4, #68]
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 2864              		.loc 1 1912 0
 2865 00ee 0320     		movs	r0, #3
 2866 00f0 DFE7     		b	.L198
 2867              		.cfi_endproc
 2868              	.LFE85:
 2870              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2871              		.align	1
 2872              		.global	HAL_UART_AbortTransmit
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 143


 2873              		.syntax unified
 2874              		.thumb
 2875              		.thumb_func
 2876              		.fpu softvfp
 2878              	HAL_UART_AbortTransmit:
 2879              	.LFB86:
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2880              		.loc 1 1946 0
 2881              		.cfi_startproc
 2882              		@ args = 0, pretend = 0, frame = 0
 2883              		@ frame_needed = 0, uses_anonymous_args = 0
 2884              	.LVL321:
 2885 0000 10B5     		push	{r4, lr}
 2886              	.LCFI29:
 2887              		.cfi_def_cfa_offset 8
 2888              		.cfi_offset 4, -8
 2889              		.cfi_offset 14, -4
 2890 0002 0446     		mov	r4, r0
 2891              	.L205:
 2892              	.LBB433:
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2893              		.loc 1 1948 0 discriminator 1
 2894 0004 2268     		ldr	r2, [r4]
 2895              	.LVL322:
 2896              	.LBB434:
 2897              	.LBB435:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2898              		.loc 2 1072 0 discriminator 1
 2899 0006 02F10C03 		add	r3, r2, #12
 2900              	.LVL323:
 2901              		.syntax unified
 2902              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2903 000a 53E8003F 		ldrex r3, [r3]
 2904              	@ 0 "" 2
 2905              	.LVL324:
 2906              		.thumb
 2907              		.syntax unified
 2908              	.LBE435:
 2909              	.LBE434:
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2910              		.loc 1 1948 0 discriminator 1
 2911 000e 23F0C003 		bic	r3, r3, #192
 2912              	.LVL325:
 2913              	.LBB436:
 2914              	.LBB437:
 2915              		.loc 2 1123 0 discriminator 1
 2916 0012 0C32     		adds	r2, r2, #12
 2917              	.LVL326:
 2918              		.syntax unified
 2919              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2920 0014 42E80031 		strex r1, r3, [r2]
 2921              	@ 0 "" 2
 2922              	.LVL327:
 2923              		.thumb
 2924              		.syntax unified
 2925              	.LBE437:
 2926              	.LBE436:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 144


1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2927              		.loc 1 1948 0 discriminator 1
 2928 0018 0029     		cmp	r1, #0
 2929 001a F3D1     		bne	.L205
 2930              	.LBE433:
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2931              		.loc 1 1951 0
 2932 001c 2368     		ldr	r3, [r4]
 2933              	.LVL328:
 2934 001e 5B69     		ldr	r3, [r3, #20]
 2935 0020 13F0800F 		tst	r3, #128
 2936 0024 13D0     		beq	.L206
 2937              	.L207:
 2938              	.LBB438:
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2939              		.loc 1 1953 0 discriminator 1
 2940 0026 2268     		ldr	r2, [r4]
 2941              	.LVL329:
 2942              	.LBB439:
 2943              	.LBB440:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2944              		.loc 2 1072 0 discriminator 1
 2945 0028 02F11403 		add	r3, r2, #20
 2946              	.LVL330:
 2947              		.syntax unified
 2948              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2949 002c 53E8003F 		ldrex r3, [r3]
 2950              	@ 0 "" 2
 2951              	.LVL331:
 2952              		.thumb
 2953              		.syntax unified
 2954              	.LBE440:
 2955              	.LBE439:
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2956              		.loc 1 1953 0 discriminator 1
 2957 0030 23F08003 		bic	r3, r3, #128
 2958              	.LVL332:
 2959              	.LBB441:
 2960              	.LBB442:
 2961              		.loc 2 1123 0 discriminator 1
 2962 0034 1432     		adds	r2, r2, #20
 2963              	.LVL333:
 2964              		.syntax unified
 2965              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2966 0036 42E80031 		strex r1, r3, [r2]
 2967              	@ 0 "" 2
 2968              	.LVL334:
 2969              		.thumb
 2970              		.syntax unified
 2971              	.LBE442:
 2972              	.LBE441:
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2973              		.loc 1 1953 0 discriminator 1
 2974 003a 0029     		cmp	r1, #0
 2975 003c F3D1     		bne	.L207
 2976              	.LBE438:
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 145


 2977              		.loc 1 1956 0
 2978 003e A36B     		ldr	r3, [r4, #56]
 2979              	.LVL335:
 2980 0040 2BB1     		cbz	r3, .L206
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2981              		.loc 1 1960 0
 2982 0042 0022     		movs	r2, #0
 2983 0044 5A63     		str	r2, [r3, #52]
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2984              		.loc 1 1962 0
 2985 0046 A06B     		ldr	r0, [r4, #56]
 2986              	.LVL336:
 2987 0048 FFF7FEFF 		bl	HAL_DMA_Abort
 2988              	.LVL337:
 2989 004c 28B9     		cbnz	r0, .L210
 2990              	.L206:
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2991              		.loc 1 1976 0
 2992 004e 0020     		movs	r0, #0
 2993 0050 E084     		strh	r0, [r4, #38]	@ movhi
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2994              		.loc 1 1979 0
 2995 0052 2023     		movs	r3, #32
 2996 0054 84F84130 		strb	r3, [r4, #65]
 2997              	.L208:
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2998              		.loc 1 1982 0
 2999 0058 10BD     		pop	{r4, pc}
 3000              	.LVL338:
 3001              	.L210:
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 3002              		.loc 1 1964 0
 3003 005a A06B     		ldr	r0, [r4, #56]
 3004 005c FFF7FEFF 		bl	HAL_DMA_GetError
 3005              	.LVL339:
 3006 0060 2028     		cmp	r0, #32
 3007 0062 F4D1     		bne	.L206
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3008              		.loc 1 1967 0
 3009 0064 1023     		movs	r3, #16
 3010 0066 6364     		str	r3, [r4, #68]
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 3011              		.loc 1 1969 0
 3012 0068 0320     		movs	r0, #3
 3013 006a F5E7     		b	.L208
 3014              		.cfi_endproc
 3015              	.LFE86:
 3017              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3018              		.align	1
 3019              		.global	HAL_UART_AbortReceive
 3020              		.syntax unified
 3021              		.thumb
 3022              		.thumb_func
 3023              		.fpu softvfp
 3025              	HAL_UART_AbortReceive:
 3026              	.LFB87:
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 146


 3027              		.loc 1 1997 0
 3028              		.cfi_startproc
 3029              		@ args = 0, pretend = 0, frame = 0
 3030              		@ frame_needed = 0, uses_anonymous_args = 0
 3031              	.LVL340:
 3032 0000 10B5     		push	{r4, lr}
 3033              	.LCFI30:
 3034              		.cfi_def_cfa_offset 8
 3035              		.cfi_offset 4, -8
 3036              		.cfi_offset 14, -4
 3037 0002 0446     		mov	r4, r0
 3038              	.L212:
 3039              	.LBB443:
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3040              		.loc 1 1999 0 discriminator 1
 3041 0004 2268     		ldr	r2, [r4]
 3042              	.LVL341:
 3043              	.LBB444:
 3044              	.LBB445:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3045              		.loc 2 1072 0 discriminator 1
 3046 0006 02F10C03 		add	r3, r2, #12
 3047              	.LVL342:
 3048              		.syntax unified
 3049              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3050 000a 53E8003F 		ldrex r3, [r3]
 3051              	@ 0 "" 2
 3052              	.LVL343:
 3053              		.thumb
 3054              		.syntax unified
 3055              	.LBE445:
 3056              	.LBE444:
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3057              		.loc 1 1999 0 discriminator 1
 3058 000e 23F49073 		bic	r3, r3, #288
 3059              	.LVL344:
 3060              	.LBB446:
 3061              	.LBB447:
 3062              		.loc 2 1123 0 discriminator 1
 3063 0012 0C32     		adds	r2, r2, #12
 3064              	.LVL345:
 3065              		.syntax unified
 3066              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3067 0014 42E80031 		strex r1, r3, [r2]
 3068              	@ 0 "" 2
 3069              	.LVL346:
 3070              		.thumb
 3071              		.syntax unified
 3072              	.LBE447:
 3073              	.LBE446:
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3074              		.loc 1 1999 0 discriminator 1
 3075 0018 0029     		cmp	r1, #0
 3076 001a F3D1     		bne	.L212
 3077              	.LVL347:
 3078              	.L213:
 3079              	.LBE443:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 147


 3080              	.LBB448:
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3081              		.loc 1 2000 0 discriminator 1
 3082 001c 2268     		ldr	r2, [r4]
 3083              	.LVL348:
 3084              	.LBB449:
 3085              	.LBB450:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3086              		.loc 2 1072 0 discriminator 1
 3087 001e 02F11403 		add	r3, r2, #20
 3088              	.LVL349:
 3089              		.syntax unified
 3090              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3091 0022 53E8003F 		ldrex r3, [r3]
 3092              	@ 0 "" 2
 3093              	.LVL350:
 3094              		.thumb
 3095              		.syntax unified
 3096              	.LBE450:
 3097              	.LBE449:
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3098              		.loc 1 2000 0 discriminator 1
 3099 0026 23F00103 		bic	r3, r3, #1
 3100              	.LVL351:
 3101              	.LBB451:
 3102              	.LBB452:
 3103              		.loc 2 1123 0 discriminator 1
 3104 002a 1432     		adds	r2, r2, #20
 3105              	.LVL352:
 3106              		.syntax unified
 3107              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3108 002c 42E80031 		strex r1, r3, [r2]
 3109              	@ 0 "" 2
 3110              	.LVL353:
 3111              		.thumb
 3112              		.syntax unified
 3113              	.LBE452:
 3114              	.LBE451:
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3115              		.loc 1 2000 0 discriminator 1
 3116 0030 0029     		cmp	r1, #0
 3117 0032 F3D1     		bne	.L213
 3118              	.LBE448:
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3119              		.loc 1 2003 0
 3120 0034 236B     		ldr	r3, [r4, #48]
 3121              	.LVL354:
 3122 0036 012B     		cmp	r3, #1
 3123 0038 1FD0     		beq	.L215
 3124              	.L214:
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3125              		.loc 1 2009 0
 3126 003a 2368     		ldr	r3, [r4]
 3127 003c 5B69     		ldr	r3, [r3, #20]
 3128 003e 13F0400F 		tst	r3, #64
 3129 0042 13D0     		beq	.L216
 3130              	.L217:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 148


 3131              	.LBB453:
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3132              		.loc 1 2011 0 discriminator 1
 3133 0044 2268     		ldr	r2, [r4]
 3134              	.LVL355:
 3135              	.LBB454:
 3136              	.LBB455:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3137              		.loc 2 1072 0 discriminator 1
 3138 0046 02F11403 		add	r3, r2, #20
 3139              	.LVL356:
 3140              		.syntax unified
 3141              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3142 004a 53E8003F 		ldrex r3, [r3]
 3143              	@ 0 "" 2
 3144              	.LVL357:
 3145              		.thumb
 3146              		.syntax unified
 3147              	.LBE455:
 3148              	.LBE454:
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3149              		.loc 1 2011 0 discriminator 1
 3150 004e 23F04003 		bic	r3, r3, #64
 3151              	.LVL358:
 3152              	.LBB456:
 3153              	.LBB457:
 3154              		.loc 2 1123 0 discriminator 1
 3155 0052 1432     		adds	r2, r2, #20
 3156              	.LVL359:
 3157              		.syntax unified
 3158              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3159 0054 42E80031 		strex r1, r3, [r2]
 3160              	@ 0 "" 2
 3161              	.LVL360:
 3162              		.thumb
 3163              		.syntax unified
 3164              	.LBE457:
 3165              	.LBE456:
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3166              		.loc 1 2011 0 discriminator 1
 3167 0058 0029     		cmp	r1, #0
 3168 005a F3D1     		bne	.L217
 3169              	.LBE453:
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3170              		.loc 1 2014 0
 3171 005c E36B     		ldr	r3, [r4, #60]
 3172              	.LVL361:
 3173 005e 2BB1     		cbz	r3, .L216
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3174              		.loc 1 2018 0
 3175 0060 0022     		movs	r2, #0
 3176 0062 5A63     		str	r2, [r3, #52]
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3177              		.loc 1 2020 0
 3178 0064 E06B     		ldr	r0, [r4, #60]
 3179              	.LVL362:
 3180 0066 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 149


 3181              	.LVL363:
 3182 006a 98B9     		cbnz	r0, .L220
 3183              	.L216:
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3184              		.loc 1 2034 0
 3185 006c 0020     		movs	r0, #0
 3186 006e E085     		strh	r0, [r4, #46]	@ movhi
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3187              		.loc 1 2037 0
 3188 0070 2023     		movs	r3, #32
 3189 0072 84F84230 		strb	r3, [r4, #66]
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3190              		.loc 1 2038 0
 3191 0076 2063     		str	r0, [r4, #48]
 3192              	.L218:
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3193              		.loc 1 2041 0
 3194 0078 10BD     		pop	{r4, pc}
 3195              	.LVL364:
 3196              	.L215:
 3197              	.LBB458:
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3198              		.loc 1 2005 0 discriminator 1
 3199 007a 2268     		ldr	r2, [r4]
 3200              	.LVL365:
 3201              	.LBB459:
 3202              	.LBB460:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3203              		.loc 2 1072 0 discriminator 1
 3204 007c 02F10C03 		add	r3, r2, #12
 3205              	.LVL366:
 3206              		.syntax unified
 3207              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3208 0080 53E8003F 		ldrex r3, [r3]
 3209              	@ 0 "" 2
 3210              	.LVL367:
 3211              		.thumb
 3212              		.syntax unified
 3213              	.LBE460:
 3214              	.LBE459:
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3215              		.loc 1 2005 0 discriminator 1
 3216 0084 23F01003 		bic	r3, r3, #16
 3217              	.LVL368:
 3218              	.LBB461:
 3219              	.LBB462:
 3220              		.loc 2 1123 0 discriminator 1
 3221 0088 0C32     		adds	r2, r2, #12
 3222              	.LVL369:
 3223              		.syntax unified
 3224              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3225 008a 42E80031 		strex r1, r3, [r2]
 3226              	@ 0 "" 2
 3227              	.LVL370:
 3228              		.thumb
 3229              		.syntax unified
 3230              	.LBE462:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 150


 3231              	.LBE461:
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3232              		.loc 1 2005 0 discriminator 1
 3233 008e 0029     		cmp	r1, #0
 3234 0090 F3D1     		bne	.L215
 3235 0092 D2E7     		b	.L214
 3236              	.LVL371:
 3237              	.L220:
 3238              	.LBE458:
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 3239              		.loc 1 2022 0
 3240 0094 E06B     		ldr	r0, [r4, #60]
 3241 0096 FFF7FEFF 		bl	HAL_DMA_GetError
 3242              	.LVL372:
 3243 009a 2028     		cmp	r0, #32
 3244 009c E6D1     		bne	.L216
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3245              		.loc 1 2025 0
 3246 009e 1023     		movs	r3, #16
 3247 00a0 6364     		str	r3, [r4, #68]
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 3248              		.loc 1 2027 0
 3249 00a2 0320     		movs	r0, #3
 3250 00a4 E8E7     		b	.L218
 3251              		.cfi_endproc
 3252              	.LFE87:
 3254              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3255              		.align	1
 3256              		.weak	HAL_UART_TxCpltCallback
 3257              		.syntax unified
 3258              		.thumb
 3259              		.thumb_func
 3260              		.fpu softvfp
 3262              	HAL_UART_TxCpltCallback:
 3263              	.LFB92:
2590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3264              		.loc 1 2590 0
 3265              		.cfi_startproc
 3266              		@ args = 0, pretend = 0, frame = 0
 3267              		@ frame_needed = 0, uses_anonymous_args = 0
 3268              		@ link register save eliminated.
 3269              	.LVL373:
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3270              		.loc 1 2596 0
 3271 0000 7047     		bx	lr
 3272              		.cfi_endproc
 3273              	.LFE92:
 3275              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 3276              		.align	1
 3277              		.syntax unified
 3278              		.thumb
 3279              		.thumb_func
 3280              		.fpu softvfp
 3282              	UART_DMATransmitCplt:
 3283              	.LFB108:
2986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3284              		.loc 1 2986 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 151


 3285              		.cfi_startproc
 3286              		@ args = 0, pretend = 0, frame = 0
 3287              		@ frame_needed = 0, uses_anonymous_args = 0
 3288              	.LVL374:
 3289 0000 08B5     		push	{r3, lr}
 3290              	.LCFI31:
 3291              		.cfi_def_cfa_offset 8
 3292              		.cfi_offset 3, -8
 3293              		.cfi_offset 14, -4
2987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
 3294              		.loc 1 2987 0
 3295 0002 416A     		ldr	r1, [r0, #36]
 3296              	.LVL375:
2989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3297              		.loc 1 2989 0
 3298 0004 0368     		ldr	r3, [r0]
 3299 0006 1B68     		ldr	r3, [r3]
 3300 0008 13F0200F 		tst	r3, #32
 3301 000c 1AD1     		bne	.L223
2991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3302              		.loc 1 2991 0
 3303 000e 0023     		movs	r3, #0
 3304 0010 CB84     		strh	r3, [r1, #38]	@ movhi
 3305              	.LVL376:
 3306              	.L224:
 3307              	.LBB463:
2995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3308              		.loc 1 2995 0 discriminator 1
 3309 0012 0A68     		ldr	r2, [r1]
 3310              	.LVL377:
 3311              	.LBB464:
 3312              	.LBB465:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3313              		.loc 2 1072 0 discriminator 1
 3314 0014 02F11403 		add	r3, r2, #20
 3315              	.LVL378:
 3316              		.syntax unified
 3317              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3318 0018 53E8003F 		ldrex r3, [r3]
 3319              	@ 0 "" 2
 3320              	.LVL379:
 3321              		.thumb
 3322              		.syntax unified
 3323              	.LBE465:
 3324              	.LBE464:
2995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3325              		.loc 1 2995 0 discriminator 1
 3326 001c 23F08003 		bic	r3, r3, #128
 3327              	.LVL380:
 3328              	.LBB466:
 3329              	.LBB467:
 3330              		.loc 2 1123 0 discriminator 1
 3331 0020 1432     		adds	r2, r2, #20
 3332              	.LVL381:
 3333              		.syntax unified
 3334              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3335 0022 42E80030 		strex r0, r3, [r2]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 152


 3336              	@ 0 "" 2
 3337              	.LVL382:
 3338              		.thumb
 3339              		.syntax unified
 3340              	.LBE467:
 3341              	.LBE466:
2995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3342              		.loc 1 2995 0 discriminator 1
 3343 0026 0028     		cmp	r0, #0
 3344 0028 F3D1     		bne	.L224
 3345              	.LVL383:
 3346              	.L225:
 3347              	.LBE463:
 3348              	.LBB468:
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3349              		.loc 1 2998 0 discriminator 1
 3350 002a 0A68     		ldr	r2, [r1]
 3351              	.LVL384:
 3352              	.LBB469:
 3353              	.LBB470:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3354              		.loc 2 1072 0 discriminator 1
 3355 002c 02F10C03 		add	r3, r2, #12
 3356              	.LVL385:
 3357              		.syntax unified
 3358              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3359 0030 53E8003F 		ldrex r3, [r3]
 3360              	@ 0 "" 2
 3361              	.LVL386:
 3362              		.thumb
 3363              		.syntax unified
 3364              	.LBE470:
 3365              	.LBE469:
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3366              		.loc 1 2998 0 discriminator 1
 3367 0034 43F04003 		orr	r3, r3, #64
 3368              	.LVL387:
 3369              	.LBB471:
 3370              	.LBB472:
 3371              		.loc 2 1123 0 discriminator 1
 3372 0038 0C32     		adds	r2, r2, #12
 3373              	.LVL388:
 3374              		.syntax unified
 3375              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3376 003a 42E80030 		strex r0, r3, [r2]
 3377              	@ 0 "" 2
 3378              	.LVL389:
 3379              		.thumb
 3380              		.syntax unified
 3381              	.LBE472:
 3382              	.LBE471:
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3383              		.loc 1 2998 0 discriminator 1
 3384 003e 0028     		cmp	r0, #0
 3385 0040 F3D1     		bne	.L225
 3386              	.LVL390:
 3387              	.L222:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 153


 3388              	.LBE468:
3012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3389              		.loc 1 3012 0
 3390 0042 08BD     		pop	{r3, pc}
 3391              	.LVL391:
 3392              	.L223:
3009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3393              		.loc 1 3009 0
 3394 0044 0846     		mov	r0, r1
 3395              	.LVL392:
 3396 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3397              	.LVL393:
3012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3398              		.loc 1 3012 0
 3399 004a FAE7     		b	.L222
 3400              		.cfi_endproc
 3401              	.LFE108:
 3403              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 3404              		.align	1
 3405              		.syntax unified
 3406              		.thumb
 3407              		.thumb_func
 3408              		.fpu softvfp
 3410              	UART_EndTransmit_IT:
 3411              	.LFB124:
3555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
 3412              		.loc 1 3555 0
 3413              		.cfi_startproc
 3414              		@ args = 0, pretend = 0, frame = 0
 3415              		@ frame_needed = 0, uses_anonymous_args = 0
 3416              	.LVL394:
 3417 0000 08B5     		push	{r3, lr}
 3418              	.LCFI32:
 3419              		.cfi_def_cfa_offset 8
 3420              		.cfi_offset 3, -8
 3421              		.cfi_offset 14, -4
3557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3422              		.loc 1 3557 0
 3423 0002 0168     		ldr	r1, [r0]
 3424 0004 CB68     		ldr	r3, [r1, #12]
 3425 0006 23F04003 		bic	r3, r3, #64
 3426 000a CB60     		str	r3, [r1, #12]
3560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3427              		.loc 1 3560 0
 3428 000c 2023     		movs	r3, #32
 3429 000e 80F84130 		strb	r3, [r0, #65]
3567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3430              		.loc 1 3567 0
 3431 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3432              	.LVL395:
3571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3433              		.loc 1 3571 0
 3434 0016 0020     		movs	r0, #0
 3435 0018 08BD     		pop	{r3, pc}
 3436              		.cfi_endproc
 3437              	.LFE124:
 3439              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 154


 3440              		.align	1
 3441              		.weak	HAL_UART_TxHalfCpltCallback
 3442              		.syntax unified
 3443              		.thumb
 3444              		.thumb_func
 3445              		.fpu softvfp
 3447              	HAL_UART_TxHalfCpltCallback:
 3448              	.LFB93:
2605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3449              		.loc 1 2605 0
 3450              		.cfi_startproc
 3451              		@ args = 0, pretend = 0, frame = 0
 3452              		@ frame_needed = 0, uses_anonymous_args = 0
 3453              		@ link register save eliminated.
 3454              	.LVL396:
2611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3455              		.loc 1 2611 0
 3456 0000 7047     		bx	lr
 3457              		.cfi_endproc
 3458              	.LFE93:
 3460              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 3461              		.align	1
 3462              		.syntax unified
 3463              		.thumb
 3464              		.thumb_func
 3465              		.fpu softvfp
 3467              	UART_DMATxHalfCplt:
 3468              	.LFB109:
3021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3469              		.loc 1 3021 0
 3470              		.cfi_startproc
 3471              		@ args = 0, pretend = 0, frame = 0
 3472              		@ frame_needed = 0, uses_anonymous_args = 0
 3473              	.LVL397:
 3474 0000 08B5     		push	{r3, lr}
 3475              	.LCFI33:
 3476              		.cfi_def_cfa_offset 8
 3477              		.cfi_offset 3, -8
 3478              		.cfi_offset 14, -4
 3479              	.LVL398:
3029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3480              		.loc 1 3029 0
 3481 0002 406A     		ldr	r0, [r0, #36]
 3482              	.LVL399:
 3483 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 3484              	.LVL400:
3031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3485              		.loc 1 3031 0
 3486 0008 08BD     		pop	{r3, pc}
 3487              		.cfi_endproc
 3488              	.LFE109:
 3490              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3491              		.align	1
 3492              		.weak	HAL_UART_RxCpltCallback
 3493              		.syntax unified
 3494              		.thumb
 3495              		.thumb_func
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 155


 3496              		.fpu softvfp
 3498              	HAL_UART_RxCpltCallback:
 3499              	.LFB94:
2620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3500              		.loc 1 2620 0
 3501              		.cfi_startproc
 3502              		@ args = 0, pretend = 0, frame = 0
 3503              		@ frame_needed = 0, uses_anonymous_args = 0
 3504              		@ link register save eliminated.
 3505              	.LVL401:
2626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3506              		.loc 1 2626 0
 3507 0000 7047     		bx	lr
 3508              		.cfi_endproc
 3509              	.LFE94:
 3511              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3512              		.align	1
 3513              		.weak	HAL_UART_RxHalfCpltCallback
 3514              		.syntax unified
 3515              		.thumb
 3516              		.thumb_func
 3517              		.fpu softvfp
 3519              	HAL_UART_RxHalfCpltCallback:
 3520              	.LFB95:
2635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3521              		.loc 1 2635 0
 3522              		.cfi_startproc
 3523              		@ args = 0, pretend = 0, frame = 0
 3524              		@ frame_needed = 0, uses_anonymous_args = 0
 3525              		@ link register save eliminated.
 3526              	.LVL402:
2641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3527              		.loc 1 2641 0
 3528 0000 7047     		bx	lr
 3529              		.cfi_endproc
 3530              	.LFE95:
 3532              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3533              		.align	1
 3534              		.weak	HAL_UART_ErrorCallback
 3535              		.syntax unified
 3536              		.thumb
 3537              		.thumb_func
 3538              		.fpu softvfp
 3540              	HAL_UART_ErrorCallback:
 3541              	.LFB96:
2650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3542              		.loc 1 2650 0
 3543              		.cfi_startproc
 3544              		@ args = 0, pretend = 0, frame = 0
 3545              		@ frame_needed = 0, uses_anonymous_args = 0
 3546              		@ link register save eliminated.
 3547              	.LVL403:
2656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3548              		.loc 1 2656 0
 3549 0000 7047     		bx	lr
 3550              		.cfi_endproc
 3551              	.LFE96:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 156


 3553              		.section	.text.UART_DMAError,"ax",%progbits
 3554              		.align	1
 3555              		.syntax unified
 3556              		.thumb
 3557              		.thumb_func
 3558              		.fpu softvfp
 3560              	UART_DMAError:
 3561              	.LFB112:
3141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3562              		.loc 1 3141 0
 3563              		.cfi_startproc
 3564              		@ args = 0, pretend = 0, frame = 0
 3565              		@ frame_needed = 0, uses_anonymous_args = 0
 3566              	.LVL404:
 3567 0000 10B5     		push	{r4, lr}
 3568              	.LCFI34:
 3569              		.cfi_def_cfa_offset 8
 3570              		.cfi_offset 4, -8
 3571              		.cfi_offset 14, -4
 3572              	.LVL405:
3143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3573              		.loc 1 3143 0
 3574 0002 446A     		ldr	r4, [r0, #36]
 3575              	.LVL406:
3146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 3576              		.loc 1 3146 0
 3577 0004 2368     		ldr	r3, [r4]
 3578 0006 5A69     		ldr	r2, [r3, #20]
 3579              	.LVL407:
3147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3580              		.loc 1 3147 0
 3581 0008 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 3582 000c DBB2     		uxtb	r3, r3
 3583 000e 212B     		cmp	r3, #33
 3584 0010 10D0     		beq	.L240
 3585              	.LVL408:
 3586              	.L237:
3154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 3587              		.loc 1 3154 0
 3588 0012 2368     		ldr	r3, [r4]
 3589 0014 5A69     		ldr	r2, [r3, #20]
 3590 0016 02F04002 		and	r2, r2, #64
 3591              	.LVL409:
3155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3592              		.loc 1 3155 0
 3593 001a 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 3594 001e DBB2     		uxtb	r3, r3
 3595 0020 222B     		cmp	r3, #34
 3596 0022 11D0     		beq	.L241
 3597              	.LVL410:
 3598              	.L238:
3161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 3599              		.loc 1 3161 0
 3600 0024 636C     		ldr	r3, [r4, #68]
 3601 0026 43F01003 		orr	r3, r3, #16
 3602 002a 6364     		str	r3, [r4, #68]
3167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 157


 3603              		.loc 1 3167 0
 3604 002c 2046     		mov	r0, r4
 3605 002e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3606              	.LVL411:
3169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3607              		.loc 1 3169 0
 3608 0032 10BD     		pop	{r4, pc}
 3609              	.LVL412:
 3610              	.L240:
 3611 0034 02F08002 		and	r2, r2, #128
 3612              	.LVL413:
3147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3613              		.loc 1 3147 0 discriminator 1
 3614 0038 002A     		cmp	r2, #0
 3615 003a EAD0     		beq	.L237
3149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 3616              		.loc 1 3149 0
 3617 003c 0023     		movs	r3, #0
 3618 003e E384     		strh	r3, [r4, #38]	@ movhi
3150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3619              		.loc 1 3150 0
 3620 0040 2046     		mov	r0, r4
 3621              	.LVL414:
 3622 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 3623              	.LVL415:
 3624 0046 E4E7     		b	.L237
 3625              	.LVL416:
 3626              	.L241:
3155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3627              		.loc 1 3155 0 discriminator 1
 3628 0048 002A     		cmp	r2, #0
 3629 004a EBD0     		beq	.L238
3157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3630              		.loc 1 3157 0
 3631 004c 0023     		movs	r3, #0
 3632 004e E385     		strh	r3, [r4, #46]	@ movhi
3158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3633              		.loc 1 3158 0
 3634 0050 2046     		mov	r0, r4
 3635 0052 FFF7FEFF 		bl	UART_EndRxTransfer
 3636              	.LVL417:
 3637 0056 E5E7     		b	.L238
 3638              		.cfi_endproc
 3639              	.LFE112:
 3641              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3642              		.align	1
 3643              		.syntax unified
 3644              		.thumb
 3645              		.thumb_func
 3646              		.fpu softvfp
 3648              	UART_DMAAbortOnError:
 3649              	.LFB118:
3345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3650              		.loc 1 3345 0
 3651              		.cfi_startproc
 3652              		@ args = 0, pretend = 0, frame = 0
 3653              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 158


 3654              	.LVL418:
 3655 0000 08B5     		push	{r3, lr}
 3656              	.LCFI35:
 3657              		.cfi_def_cfa_offset 8
 3658              		.cfi_offset 3, -8
 3659              		.cfi_offset 14, -4
3346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3660              		.loc 1 3346 0
 3661 0002 406A     		ldr	r0, [r0, #36]
 3662              	.LVL419:
3347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3663              		.loc 1 3347 0
 3664 0004 0023     		movs	r3, #0
 3665 0006 C385     		strh	r3, [r0, #46]	@ movhi
3348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3666              		.loc 1 3348 0
 3667 0008 C384     		strh	r3, [r0, #38]	@ movhi
3355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3668              		.loc 1 3355 0
 3669 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3670              	.LVL420:
3357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3671              		.loc 1 3357 0
 3672 000e 08BD     		pop	{r3, pc}
 3673              		.cfi_endproc
 3674              	.LFE118:
 3676              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3677              		.align	1
 3678              		.weak	HAL_UART_AbortCpltCallback
 3679              		.syntax unified
 3680              		.thumb
 3681              		.thumb_func
 3682              		.fpu softvfp
 3684              	HAL_UART_AbortCpltCallback:
 3685              	.LFB97:
2664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3686              		.loc 1 2664 0
 3687              		.cfi_startproc
 3688              		@ args = 0, pretend = 0, frame = 0
 3689              		@ frame_needed = 0, uses_anonymous_args = 0
 3690              		@ link register save eliminated.
 3691              	.LVL421:
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3692              		.loc 1 2671 0
 3693 0000 7047     		bx	lr
 3694              		.cfi_endproc
 3695              	.LFE97:
 3697              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3698              		.align	1
 3699              		.global	HAL_UART_Abort_IT
 3700              		.syntax unified
 3701              		.thumb
 3702              		.thumb_func
 3703              		.fpu softvfp
 3705              	HAL_UART_Abort_IT:
 3706              	.LFB88:
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 159


 3707              		.loc 1 2058 0
 3708              		.cfi_startproc
 3709              		@ args = 0, pretend = 0, frame = 0
 3710              		@ frame_needed = 0, uses_anonymous_args = 0
 3711              	.LVL422:
 3712 0000 38B5     		push	{r3, r4, r5, lr}
 3713              	.LCFI36:
 3714              		.cfi_def_cfa_offset 16
 3715              		.cfi_offset 3, -16
 3716              		.cfi_offset 4, -12
 3717              		.cfi_offset 5, -8
 3718              		.cfi_offset 14, -4
 3719 0002 0446     		mov	r4, r0
 3720              	.LVL423:
 3721              	.L246:
 3722              	.LBB473:
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3723              		.loc 1 2062 0 discriminator 1
 3724 0004 2268     		ldr	r2, [r4]
 3725              	.LVL424:
 3726              	.LBB474:
 3727              	.LBB475:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3728              		.loc 2 1072 0 discriminator 1
 3729 0006 02F10C03 		add	r3, r2, #12
 3730              	.LVL425:
 3731              		.syntax unified
 3732              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3733 000a 53E8003F 		ldrex r3, [r3]
 3734              	@ 0 "" 2
 3735              	.LVL426:
 3736              		.thumb
 3737              		.syntax unified
 3738              	.LBE475:
 3739              	.LBE474:
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3740              		.loc 1 2062 0 discriminator 1
 3741 000e 23F4F073 		bic	r3, r3, #480
 3742              	.LVL427:
 3743              	.LBB476:
 3744              	.LBB477:
 3745              		.loc 2 1123 0 discriminator 1
 3746 0012 0C32     		adds	r2, r2, #12
 3747              	.LVL428:
 3748              		.syntax unified
 3749              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3750 0014 42E80031 		strex r1, r3, [r2]
 3751              	@ 0 "" 2
 3752              	.LVL429:
 3753              		.thumb
 3754              		.syntax unified
 3755              	.LBE477:
 3756              	.LBE476:
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3757              		.loc 1 2062 0 discriminator 1
 3758 0018 0029     		cmp	r1, #0
 3759 001a F3D1     		bne	.L246
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 160


 3760              	.LVL430:
 3761              	.L247:
 3762              	.LBE473:
 3763              	.LBB478:
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3764              		.loc 1 2063 0 discriminator 1
 3765 001c 2268     		ldr	r2, [r4]
 3766              	.LVL431:
 3767              	.LBB479:
 3768              	.LBB480:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3769              		.loc 2 1072 0 discriminator 1
 3770 001e 02F11403 		add	r3, r2, #20
 3771              	.LVL432:
 3772              		.syntax unified
 3773              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3774 0022 53E8003F 		ldrex r3, [r3]
 3775              	@ 0 "" 2
 3776              	.LVL433:
 3777              		.thumb
 3778              		.syntax unified
 3779              	.LBE480:
 3780              	.LBE479:
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3781              		.loc 1 2063 0 discriminator 1
 3782 0026 23F00103 		bic	r3, r3, #1
 3783              	.LVL434:
 3784              	.LBB481:
 3785              	.LBB482:
 3786              		.loc 2 1123 0 discriminator 1
 3787 002a 1432     		adds	r2, r2, #20
 3788              	.LVL435:
 3789              		.syntax unified
 3790              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3791 002c 42E80031 		strex r1, r3, [r2]
 3792              	@ 0 "" 2
 3793              	.LVL436:
 3794              		.thumb
 3795              		.syntax unified
 3796              	.LBE482:
 3797              	.LBE481:
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3798              		.loc 1 2063 0 discriminator 1
 3799 0030 0029     		cmp	r1, #0
 3800 0032 F3D1     		bne	.L247
 3801              	.LBE478:
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3802              		.loc 1 2066 0
 3803 0034 236B     		ldr	r3, [r4, #48]
 3804              	.LVL437:
 3805 0036 012B     		cmp	r3, #1
 3806 0038 2ED0     		beq	.L249
 3807              	.L248:
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3808              		.loc 1 2074 0
 3809 003a A36B     		ldr	r3, [r4, #56]
 3810 003c 33B1     		cbz	r3, .L250
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 161


2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3811              		.loc 1 2078 0
 3812 003e 2268     		ldr	r2, [r4]
 3813 0040 5269     		ldr	r2, [r2, #20]
 3814 0042 12F0800F 		tst	r2, #128
 3815 0046 34D0     		beq	.L251
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3816              		.loc 1 2080 0
 3817 0048 344A     		ldr	r2, .L263
 3818 004a 5A63     		str	r2, [r3, #52]
 3819              	.L250:
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3820              		.loc 1 2088 0
 3821 004c E36B     		ldr	r3, [r4, #60]
 3822 004e 33B1     		cbz	r3, .L252
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3823              		.loc 1 2092 0
 3824 0050 2268     		ldr	r2, [r4]
 3825 0052 5269     		ldr	r2, [r2, #20]
 3826 0054 12F0400F 		tst	r2, #64
 3827 0058 2ED0     		beq	.L253
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3828              		.loc 1 2094 0
 3829 005a 314A     		ldr	r2, .L263+4
 3830 005c 5A63     		str	r2, [r3, #52]
 3831              	.L252:
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3832              		.loc 1 2103 0
 3833 005e 2368     		ldr	r3, [r4]
 3834 0060 5B69     		ldr	r3, [r3, #20]
 3835 0062 13F0800F 		tst	r3, #128
 3836 0066 2AD0     		beq	.L260
 3837              	.L255:
 3838              	.LBB483:
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3839              		.loc 1 2106 0 discriminator 1
 3840 0068 2168     		ldr	r1, [r4]
 3841              	.LVL438:
 3842              	.LBB484:
 3843              	.LBB485:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3844              		.loc 2 1072 0 discriminator 1
 3845 006a 01F11403 		add	r3, r1, #20
 3846              	.LVL439:
 3847              		.syntax unified
 3848              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3849 006e 53E8003F 		ldrex r3, [r3]
 3850              	@ 0 "" 2
 3851              	.LVL440:
 3852              		.thumb
 3853              		.syntax unified
 3854              	.LBE485:
 3855              	.LBE484:
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3856              		.loc 1 2106 0 discriminator 1
 3857 0072 23F08003 		bic	r3, r3, #128
 3858              	.LVL441:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 162


 3859              	.LBB486:
 3860              	.LBB487:
 3861              		.loc 2 1123 0 discriminator 1
 3862 0076 1431     		adds	r1, r1, #20
 3863              	.LVL442:
 3864              		.syntax unified
 3865              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3866 0078 41E80032 		strex r2, r3, [r1]
 3867              	@ 0 "" 2
 3868              		.thumb
 3869              		.syntax unified
 3870 007c 1546     		mov	r5, r2
 3871              	.LVL443:
 3872              	.LBE487:
 3873              	.LBE486:
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3874              		.loc 1 2106 0 discriminator 1
 3875 007e 002A     		cmp	r2, #0
 3876 0080 F2D1     		bne	.L255
 3877              	.LBE483:
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3878              		.loc 1 2109 0
 3879 0082 A06B     		ldr	r0, [r4, #56]
 3880              	.LVL444:
 3881 0084 0028     		cmp	r0, #0
 3882 0086 42D0     		beq	.L261
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3883              		.loc 1 2115 0
 3884 0088 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3885              	.LVL445:
 3886 008c C0B1     		cbz	r0, .L254
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3887              		.loc 1 2117 0
 3888 008e A36B     		ldr	r3, [r4, #56]
 3889 0090 0022     		movs	r2, #0
 3890 0092 5A63     		str	r2, [r3, #52]
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3891              		.loc 1 2059 0
 3892 0094 0125     		movs	r5, #1
 3893 0096 13E0     		b	.L254
 3894              	.LVL446:
 3895              	.L249:
 3896              	.LBB488:
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3897              		.loc 1 2068 0 discriminator 1
 3898 0098 2268     		ldr	r2, [r4]
 3899              	.LVL447:
 3900              	.LBB489:
 3901              	.LBB490:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3902              		.loc 2 1072 0 discriminator 1
 3903 009a 02F10C03 		add	r3, r2, #12
 3904              	.LVL448:
 3905              		.syntax unified
 3906              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3907 009e 53E8003F 		ldrex r3, [r3]
 3908              	@ 0 "" 2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 163


 3909              	.LVL449:
 3910              		.thumb
 3911              		.syntax unified
 3912              	.LBE490:
 3913              	.LBE489:
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3914              		.loc 1 2068 0 discriminator 1
 3915 00a2 23F01003 		bic	r3, r3, #16
 3916              	.LVL450:
 3917              	.LBB491:
 3918              	.LBB492:
 3919              		.loc 2 1123 0 discriminator 1
 3920 00a6 0C32     		adds	r2, r2, #12
 3921              	.LVL451:
 3922              		.syntax unified
 3923              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3924 00a8 42E80031 		strex r1, r3, [r2]
 3925              	@ 0 "" 2
 3926              	.LVL452:
 3927              		.thumb
 3928              		.syntax unified
 3929              	.LBE492:
 3930              	.LBE491:
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3931              		.loc 1 2068 0 discriminator 1
 3932 00ac 0029     		cmp	r1, #0
 3933 00ae F3D1     		bne	.L249
 3934 00b0 C3E7     		b	.L248
 3935              	.LVL453:
 3936              	.L251:
 3937              	.LBE488:
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3938              		.loc 1 2084 0
 3939 00b2 0022     		movs	r2, #0
 3940 00b4 5A63     		str	r2, [r3, #52]
 3941 00b6 C9E7     		b	.L250
 3942              	.L253:
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3943              		.loc 1 2098 0
 3944 00b8 0022     		movs	r2, #0
 3945 00ba 5A63     		str	r2, [r3, #52]
 3946 00bc CFE7     		b	.L252
 3947              	.L260:
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3948              		.loc 1 2059 0
 3949 00be 0125     		movs	r5, #1
 3950              	.LVL454:
 3951              	.L254:
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3952              		.loc 1 2127 0
 3953 00c0 2368     		ldr	r3, [r4]
 3954 00c2 5B69     		ldr	r3, [r3, #20]
 3955 00c4 13F0400F 		tst	r3, #64
 3956 00c8 23D0     		beq	.L256
 3957              	.L257:
 3958              	.LBB493:
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 164


 3959              		.loc 1 2129 0 discriminator 1
 3960 00ca 2268     		ldr	r2, [r4]
 3961              	.LVL455:
 3962              	.LBB494:
 3963              	.LBB495:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3964              		.loc 2 1072 0 discriminator 1
 3965 00cc 02F11403 		add	r3, r2, #20
 3966              	.LVL456:
 3967              		.syntax unified
 3968              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3969 00d0 53E8003F 		ldrex r3, [r3]
 3970              	@ 0 "" 2
 3971              	.LVL457:
 3972              		.thumb
 3973              		.syntax unified
 3974              	.LBE495:
 3975              	.LBE494:
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3976              		.loc 1 2129 0 discriminator 1
 3977 00d4 23F04003 		bic	r3, r3, #64
 3978              	.LVL458:
 3979              	.LBB496:
 3980              	.LBB497:
 3981              		.loc 2 1123 0 discriminator 1
 3982 00d8 1432     		adds	r2, r2, #20
 3983              	.LVL459:
 3984              		.syntax unified
 3985              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3986 00da 42E80031 		strex r1, r3, [r2]
 3987              	@ 0 "" 2
 3988              	.LVL460:
 3989              		.thumb
 3990              		.syntax unified
 3991              	.LBE497:
 3992              	.LBE496:
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3993              		.loc 1 2129 0 discriminator 1
 3994 00de 0029     		cmp	r1, #0
 3995 00e0 F3D1     		bne	.L257
 3996              	.LBE493:
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3997              		.loc 1 2132 0
 3998 00e2 E06B     		ldr	r0, [r4, #60]
 3999 00e4 A8B1     		cbz	r0, .L256
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 4000              		.loc 1 2138 0
 4001 00e6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4002              	.LVL461:
 4003 00ea A0B1     		cbz	r0, .L258
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
 4004              		.loc 1 2140 0
 4005 00ec E36B     		ldr	r3, [r4, #60]
 4006 00ee 0022     		movs	r2, #0
 4007 00f0 5A63     		str	r2, [r3, #52]
 4008              	.LVL462:
 4009              	.L259:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 165


2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4010              		.loc 1 2154 0
 4011 00f2 0023     		movs	r3, #0
 4012 00f4 E384     		strh	r3, [r4, #38]	@ movhi
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4013              		.loc 1 2155 0
 4014 00f6 E385     		strh	r3, [r4, #46]	@ movhi
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4015              		.loc 1 2158 0
 4016 00f8 6364     		str	r3, [r4, #68]
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4017              		.loc 1 2161 0
 4018 00fa 2022     		movs	r2, #32
 4019 00fc 84F84120 		strb	r2, [r4, #65]
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4020              		.loc 1 2162 0
 4021 0100 84F84220 		strb	r2, [r4, #66]
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4022              		.loc 1 2163 0
 4023 0104 2363     		str	r3, [r4, #48]
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4024              		.loc 1 2171 0
 4025 0106 2046     		mov	r0, r4
 4026 0108 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4027              	.LVL463:
 4028 010c 03E0     		b	.L258
 4029              	.LVL464:
 4030              	.L261:
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4031              		.loc 1 2059 0
 4032 010e 0125     		movs	r5, #1
 4033 0110 D6E7     		b	.L254
 4034              	.LVL465:
 4035              	.L256:
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 4036              		.loc 1 2151 0
 4037 0112 012D     		cmp	r5, #1
 4038 0114 EDD0     		beq	.L259
 4039              	.LVL466:
 4040              	.L258:
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4041              		.loc 1 2176 0
 4042 0116 0020     		movs	r0, #0
 4043 0118 38BD     		pop	{r3, r4, r5, pc}
 4044              	.LVL467:
 4045              	.L264:
 4046 011a 00BF     		.align	2
 4047              	.L263:
 4048 011c 00000000 		.word	UART_DMATxAbortCallback
 4049 0120 00000000 		.word	UART_DMARxAbortCallback
 4050              		.cfi_endproc
 4051              	.LFE88:
 4053              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 4054              		.align	1
 4055              		.syntax unified
 4056              		.thumb
 4057              		.thumb_func
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 166


 4058              		.fpu softvfp
 4060              	UART_DMARxAbortCallback:
 4061              	.LFB120:
3415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4062              		.loc 1 3415 0
 4063              		.cfi_startproc
 4064              		@ args = 0, pretend = 0, frame = 0
 4065              		@ frame_needed = 0, uses_anonymous_args = 0
 4066              	.LVL468:
 4067 0000 08B5     		push	{r3, lr}
 4068              	.LCFI37:
 4069              		.cfi_def_cfa_offset 8
 4070              		.cfi_offset 3, -8
 4071              		.cfi_offset 14, -4
3416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4072              		.loc 1 3416 0
 4073 0002 406A     		ldr	r0, [r0, #36]
 4074              	.LVL469:
3418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4075              		.loc 1 3418 0
 4076 0004 C36B     		ldr	r3, [r0, #60]
 4077 0006 0022     		movs	r2, #0
 4078 0008 5A63     		str	r2, [r3, #52]
3421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 4079              		.loc 1 3421 0
 4080 000a 836B     		ldr	r3, [r0, #56]
 4081 000c 13B1     		cbz	r3, .L266
3423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 4082              		.loc 1 3423 0
 4083 000e 5B6B     		ldr	r3, [r3, #52]
 4084 0010 03B1     		cbz	r3, .L266
 4085              	.LVL470:
 4086              	.L265:
3449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4087              		.loc 1 3449 0
 4088 0012 08BD     		pop	{r3, pc}
 4089              	.LVL471:
 4090              	.L266:
3430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4091              		.loc 1 3430 0
 4092 0014 0023     		movs	r3, #0
 4093 0016 C384     		strh	r3, [r0, #38]	@ movhi
3431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4094              		.loc 1 3431 0
 4095 0018 C385     		strh	r3, [r0, #46]	@ movhi
3434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4096              		.loc 1 3434 0
 4097 001a 4364     		str	r3, [r0, #68]
3437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4098              		.loc 1 3437 0
 4099 001c 2022     		movs	r2, #32
 4100 001e 80F84120 		strb	r2, [r0, #65]
3438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4101              		.loc 1 3438 0
 4102 0022 80F84220 		strb	r2, [r0, #66]
3439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4103              		.loc 1 3439 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 167


 4104 0026 0363     		str	r3, [r0, #48]
3447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4105              		.loc 1 3447 0
 4106 0028 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4107              	.LVL472:
 4108 002c F1E7     		b	.L265
 4109              		.cfi_endproc
 4110              	.LFE120:
 4112              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 4113              		.align	1
 4114              		.syntax unified
 4115              		.thumb
 4116              		.thumb_func
 4117              		.fpu softvfp
 4119              	UART_DMATxAbortCallback:
 4120              	.LFB119:
3369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4121              		.loc 1 3369 0
 4122              		.cfi_startproc
 4123              		@ args = 0, pretend = 0, frame = 0
 4124              		@ frame_needed = 0, uses_anonymous_args = 0
 4125              	.LVL473:
 4126 0000 08B5     		push	{r3, lr}
 4127              	.LCFI38:
 4128              		.cfi_def_cfa_offset 8
 4129              		.cfi_offset 3, -8
 4130              		.cfi_offset 14, -4
3370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4131              		.loc 1 3370 0
 4132 0002 406A     		ldr	r0, [r0, #36]
 4133              	.LVL474:
3372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4134              		.loc 1 3372 0
 4135 0004 836B     		ldr	r3, [r0, #56]
 4136 0006 0022     		movs	r2, #0
 4137 0008 5A63     		str	r2, [r3, #52]
3375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 4138              		.loc 1 3375 0
 4139 000a C36B     		ldr	r3, [r0, #60]
 4140 000c 13B1     		cbz	r3, .L270
3377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 4141              		.loc 1 3377 0
 4142 000e 5B6B     		ldr	r3, [r3, #52]
 4143 0010 03B1     		cbz	r3, .L270
 4144              	.LVL475:
 4145              	.L269:
3403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4146              		.loc 1 3403 0
 4147 0012 08BD     		pop	{r3, pc}
 4148              	.LVL476:
 4149              	.L270:
3384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4150              		.loc 1 3384 0
 4151 0014 0023     		movs	r3, #0
 4152 0016 C384     		strh	r3, [r0, #38]	@ movhi
3385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4153              		.loc 1 3385 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 168


 4154 0018 C385     		strh	r3, [r0, #46]	@ movhi
3388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4155              		.loc 1 3388 0
 4156 001a 4364     		str	r3, [r0, #68]
3391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4157              		.loc 1 3391 0
 4158 001c 2022     		movs	r2, #32
 4159 001e 80F84120 		strb	r2, [r0, #65]
3392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4160              		.loc 1 3392 0
 4161 0022 80F84220 		strb	r2, [r0, #66]
3393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4162              		.loc 1 3393 0
 4163 0026 0363     		str	r3, [r0, #48]
3401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4164              		.loc 1 3401 0
 4165 0028 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4166              	.LVL477:
 4167 002c F1E7     		b	.L269
 4168              		.cfi_endproc
 4169              	.LFE119:
 4171              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4172              		.align	1
 4173              		.weak	HAL_UART_AbortTransmitCpltCallback
 4174              		.syntax unified
 4175              		.thumb
 4176              		.thumb_func
 4177              		.fpu softvfp
 4179              	HAL_UART_AbortTransmitCpltCallback:
 4180              	.LFB98:
2679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4181              		.loc 1 2679 0
 4182              		.cfi_startproc
 4183              		@ args = 0, pretend = 0, frame = 0
 4184              		@ frame_needed = 0, uses_anonymous_args = 0
 4185              		@ link register save eliminated.
 4186              	.LVL478:
2686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4187              		.loc 1 2686 0
 4188 0000 7047     		bx	lr
 4189              		.cfi_endproc
 4190              	.LFE98:
 4192              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4193              		.align	1
 4194              		.global	HAL_UART_AbortTransmit_IT
 4195              		.syntax unified
 4196              		.thumb
 4197              		.thumb_func
 4198              		.fpu softvfp
 4200              	HAL_UART_AbortTransmit_IT:
 4201              	.LFB89:
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 4202              		.loc 1 2193 0
 4203              		.cfi_startproc
 4204              		@ args = 0, pretend = 0, frame = 0
 4205              		@ frame_needed = 0, uses_anonymous_args = 0
 4206              	.LVL479:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 169


 4207 0000 10B5     		push	{r4, lr}
 4208              	.LCFI39:
 4209              		.cfi_def_cfa_offset 8
 4210              		.cfi_offset 4, -8
 4211              		.cfi_offset 14, -4
 4212 0002 0446     		mov	r4, r0
 4213              	.L275:
 4214              	.LBB498:
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4215              		.loc 1 2195 0 discriminator 1
 4216 0004 2268     		ldr	r2, [r4]
 4217              	.LVL480:
 4218              	.LBB499:
 4219              	.LBB500:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4220              		.loc 2 1072 0 discriminator 1
 4221 0006 02F10C03 		add	r3, r2, #12
 4222              	.LVL481:
 4223              		.syntax unified
 4224              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4225 000a 53E8003F 		ldrex r3, [r3]
 4226              	@ 0 "" 2
 4227              	.LVL482:
 4228              		.thumb
 4229              		.syntax unified
 4230              	.LBE500:
 4231              	.LBE499:
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4232              		.loc 1 2195 0 discriminator 1
 4233 000e 23F0C003 		bic	r3, r3, #192
 4234              	.LVL483:
 4235              	.LBB501:
 4236              	.LBB502:
 4237              		.loc 2 1123 0 discriminator 1
 4238 0012 0C32     		adds	r2, r2, #12
 4239              	.LVL484:
 4240              		.syntax unified
 4241              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4242 0014 42E80031 		strex r1, r3, [r2]
 4243              	@ 0 "" 2
 4244              	.LVL485:
 4245              		.thumb
 4246              		.syntax unified
 4247              	.LBE502:
 4248              	.LBE501:
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4249              		.loc 1 2195 0 discriminator 1
 4250 0018 0029     		cmp	r1, #0
 4251 001a F3D1     		bne	.L275
 4252              	.LBE498:
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 4253              		.loc 1 2198 0
 4254 001c 2368     		ldr	r3, [r4]
 4255              	.LVL486:
 4256 001e 5B69     		ldr	r3, [r3, #20]
 4257 0020 13F0800F 		tst	r3, #128
 4258 0024 21D0     		beq	.L276
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 170


 4259              	.L277:
 4260              	.LBB503:
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4261              		.loc 1 2200 0 discriminator 1
 4262 0026 2268     		ldr	r2, [r4]
 4263              	.LVL487:
 4264              	.LBB504:
 4265              	.LBB505:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4266              		.loc 2 1072 0 discriminator 1
 4267 0028 02F11403 		add	r3, r2, #20
 4268              	.LVL488:
 4269              		.syntax unified
 4270              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4271 002c 53E8003F 		ldrex r3, [r3]
 4272              	@ 0 "" 2
 4273              	.LVL489:
 4274              		.thumb
 4275              		.syntax unified
 4276              	.LBE505:
 4277              	.LBE504:
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4278              		.loc 1 2200 0 discriminator 1
 4279 0030 23F08003 		bic	r3, r3, #128
 4280              	.LVL490:
 4281              	.LBB506:
 4282              	.LBB507:
 4283              		.loc 2 1123 0 discriminator 1
 4284 0034 1432     		adds	r2, r2, #20
 4285              	.LVL491:
 4286              		.syntax unified
 4287              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4288 0036 42E80031 		strex r1, r3, [r2]
 4289              	@ 0 "" 2
 4290              	.LVL492:
 4291              		.thumb
 4292              		.syntax unified
 4293              	.LBE507:
 4294              	.LBE506:
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4295              		.loc 1 2200 0 discriminator 1
 4296 003a 0029     		cmp	r1, #0
 4297 003c F3D1     		bne	.L277
 4298              	.LBE503:
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 4299              		.loc 1 2203 0
 4300 003e A36B     		ldr	r3, [r4, #56]
 4301              	.LVL493:
 4302 0040 53B1     		cbz	r3, .L278
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4303              		.loc 1 2207 0
 4304 0042 0E4A     		ldr	r2, .L281
 4305 0044 5A63     		str	r2, [r3, #52]
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 4306              		.loc 1 2210 0
 4307 0046 A06B     		ldr	r0, [r4, #56]
 4308              	.LVL494:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 171


 4309 0048 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4310              	.LVL495:
 4311 004c 10B1     		cbz	r0, .L279
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 4312              		.loc 1 2213 0
 4313 004e A06B     		ldr	r0, [r4, #56]
 4314 0050 436B     		ldr	r3, [r0, #52]
 4315 0052 9847     		blx	r3
 4316              	.LVL496:
 4317              	.L279:
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4318              		.loc 1 2253 0
 4319 0054 0020     		movs	r0, #0
 4320 0056 10BD     		pop	{r4, pc}
 4321              	.LVL497:
 4322              	.L278:
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4323              		.loc 1 2219 0
 4324 0058 0023     		movs	r3, #0
 4325 005a E384     		strh	r3, [r4, #38]	@ movhi
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4326              		.loc 1 2222 0
 4327 005c 2023     		movs	r3, #32
 4328 005e 84F84130 		strb	r3, [r4, #65]
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4329              		.loc 1 2230 0
 4330 0062 2046     		mov	r0, r4
 4331              	.LVL498:
 4332 0064 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4333              	.LVL499:
 4334 0068 F4E7     		b	.L279
 4335              	.LVL500:
 4336              	.L276:
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4337              		.loc 1 2237 0
 4338 006a 0023     		movs	r3, #0
 4339 006c E384     		strh	r3, [r4, #38]	@ movhi
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4340              		.loc 1 2240 0
 4341 006e 2023     		movs	r3, #32
 4342 0070 84F84130 		strb	r3, [r4, #65]
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4343              		.loc 1 2248 0
 4344 0074 2046     		mov	r0, r4
 4345              	.LVL501:
 4346 0076 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4347              	.LVL502:
 4348 007a EBE7     		b	.L279
 4349              	.L282:
 4350              		.align	2
 4351              	.L281:
 4352 007c 00000000 		.word	UART_DMATxOnlyAbortCallback
 4353              		.cfi_endproc
 4354              	.LFE89:
 4356              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 4357              		.align	1
 4358              		.syntax unified
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 172


 4359              		.thumb
 4360              		.thumb_func
 4361              		.fpu softvfp
 4363              	UART_DMATxOnlyAbortCallback:
 4364              	.LFB121:
3461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4365              		.loc 1 3461 0
 4366              		.cfi_startproc
 4367              		@ args = 0, pretend = 0, frame = 0
 4368              		@ frame_needed = 0, uses_anonymous_args = 0
 4369              	.LVL503:
 4370 0000 08B5     		push	{r3, lr}
 4371              	.LCFI40:
 4372              		.cfi_def_cfa_offset 8
 4373              		.cfi_offset 3, -8
 4374              		.cfi_offset 14, -4
3462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4375              		.loc 1 3462 0
 4376 0002 406A     		ldr	r0, [r0, #36]
 4377              	.LVL504:
3464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4378              		.loc 1 3464 0
 4379 0004 0023     		movs	r3, #0
 4380 0006 C384     		strh	r3, [r0, #38]	@ movhi
3467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4381              		.loc 1 3467 0
 4382 0008 2023     		movs	r3, #32
 4383 000a 80F84130 		strb	r3, [r0, #65]
3475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4384              		.loc 1 3475 0
 4385 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4386              	.LVL505:
3477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4387              		.loc 1 3477 0
 4388 0012 08BD     		pop	{r3, pc}
 4389              		.cfi_endproc
 4390              	.LFE121:
 4392              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4393              		.align	1
 4394              		.weak	HAL_UART_AbortReceiveCpltCallback
 4395              		.syntax unified
 4396              		.thumb
 4397              		.thumb_func
 4398              		.fpu softvfp
 4400              	HAL_UART_AbortReceiveCpltCallback:
 4401              	.LFB99:
2694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4402              		.loc 1 2694 0
 4403              		.cfi_startproc
 4404              		@ args = 0, pretend = 0, frame = 0
 4405              		@ frame_needed = 0, uses_anonymous_args = 0
 4406              		@ link register save eliminated.
 4407              	.LVL506:
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4408              		.loc 1 2701 0
 4409 0000 7047     		bx	lr
 4410              		.cfi_endproc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 173


 4411              	.LFE99:
 4413              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4414              		.align	1
 4415              		.global	HAL_UART_AbortReceive_IT
 4416              		.syntax unified
 4417              		.thumb
 4418              		.thumb_func
 4419              		.fpu softvfp
 4421              	HAL_UART_AbortReceive_IT:
 4422              	.LFB90:
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 4423              		.loc 1 2270 0
 4424              		.cfi_startproc
 4425              		@ args = 0, pretend = 0, frame = 0
 4426              		@ frame_needed = 0, uses_anonymous_args = 0
 4427              	.LVL507:
 4428 0000 10B5     		push	{r4, lr}
 4429              	.LCFI41:
 4430              		.cfi_def_cfa_offset 8
 4431              		.cfi_offset 4, -8
 4432              		.cfi_offset 14, -4
 4433 0002 0446     		mov	r4, r0
 4434              	.L287:
 4435              	.LBB508:
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4436              		.loc 1 2272 0 discriminator 1
 4437 0004 2268     		ldr	r2, [r4]
 4438              	.LVL508:
 4439              	.LBB509:
 4440              	.LBB510:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4441              		.loc 2 1072 0 discriminator 1
 4442 0006 02F10C03 		add	r3, r2, #12
 4443              	.LVL509:
 4444              		.syntax unified
 4445              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4446 000a 53E8003F 		ldrex r3, [r3]
 4447              	@ 0 "" 2
 4448              	.LVL510:
 4449              		.thumb
 4450              		.syntax unified
 4451              	.LBE510:
 4452              	.LBE509:
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4453              		.loc 1 2272 0 discriminator 1
 4454 000e 23F49073 		bic	r3, r3, #288
 4455              	.LVL511:
 4456              	.LBB511:
 4457              	.LBB512:
 4458              		.loc 2 1123 0 discriminator 1
 4459 0012 0C32     		adds	r2, r2, #12
 4460              	.LVL512:
 4461              		.syntax unified
 4462              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4463 0014 42E80031 		strex r1, r3, [r2]
 4464              	@ 0 "" 2
 4465              	.LVL513:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 174


 4466              		.thumb
 4467              		.syntax unified
 4468              	.LBE512:
 4469              	.LBE511:
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4470              		.loc 1 2272 0 discriminator 1
 4471 0018 0029     		cmp	r1, #0
 4472 001a F3D1     		bne	.L287
 4473              	.LVL514:
 4474              	.L288:
 4475              	.LBE508:
 4476              	.LBB513:
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4477              		.loc 1 2273 0 discriminator 1
 4478 001c 2268     		ldr	r2, [r4]
 4479              	.LVL515:
 4480              	.LBB514:
 4481              	.LBB515:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4482              		.loc 2 1072 0 discriminator 1
 4483 001e 02F11403 		add	r3, r2, #20
 4484              	.LVL516:
 4485              		.syntax unified
 4486              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4487 0022 53E8003F 		ldrex r3, [r3]
 4488              	@ 0 "" 2
 4489              	.LVL517:
 4490              		.thumb
 4491              		.syntax unified
 4492              	.LBE515:
 4493              	.LBE514:
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4494              		.loc 1 2273 0 discriminator 1
 4495 0026 23F00103 		bic	r3, r3, #1
 4496              	.LVL518:
 4497              	.LBB516:
 4498              	.LBB517:
 4499              		.loc 2 1123 0 discriminator 1
 4500 002a 1432     		adds	r2, r2, #20
 4501              	.LVL519:
 4502              		.syntax unified
 4503              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4504 002c 42E80031 		strex r1, r3, [r2]
 4505              	@ 0 "" 2
 4506              	.LVL520:
 4507              		.thumb
 4508              		.syntax unified
 4509              	.LBE517:
 4510              	.LBE516:
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4511              		.loc 1 2273 0 discriminator 1
 4512 0030 0029     		cmp	r1, #0
 4513 0032 F3D1     		bne	.L288
 4514              	.LBE513:
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 4515              		.loc 1 2276 0
 4516 0034 236B     		ldr	r3, [r4, #48]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 175


 4517              	.LVL521:
 4518 0036 012B     		cmp	r3, #1
 4519 0038 1DD0     		beq	.L290
 4520              	.L289:
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 4521              		.loc 1 2282 0
 4522 003a 2368     		ldr	r3, [r4]
 4523 003c 5B69     		ldr	r3, [r3, #20]
 4524 003e 13F0400F 		tst	r3, #64
 4525 0042 2FD0     		beq	.L291
 4526              	.L292:
 4527              	.LBB518:
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4528              		.loc 1 2284 0 discriminator 1
 4529 0044 2268     		ldr	r2, [r4]
 4530              	.LVL522:
 4531              	.LBB519:
 4532              	.LBB520:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4533              		.loc 2 1072 0 discriminator 1
 4534 0046 02F11403 		add	r3, r2, #20
 4535              	.LVL523:
 4536              		.syntax unified
 4537              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4538 004a 53E8003F 		ldrex r3, [r3]
 4539              	@ 0 "" 2
 4540              	.LVL524:
 4541              		.thumb
 4542              		.syntax unified
 4543              	.LBE520:
 4544              	.LBE519:
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4545              		.loc 1 2284 0 discriminator 1
 4546 004e 23F04003 		bic	r3, r3, #64
 4547              	.LVL525:
 4548              	.LBB521:
 4549              	.LBB522:
 4550              		.loc 2 1123 0 discriminator 1
 4551 0052 1432     		adds	r2, r2, #20
 4552              	.LVL526:
 4553              		.syntax unified
 4554              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4555 0054 42E80031 		strex r1, r3, [r2]
 4556              	@ 0 "" 2
 4557              	.LVL527:
 4558              		.thumb
 4559              		.syntax unified
 4560              	.LBE522:
 4561              	.LBE521:
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4562              		.loc 1 2284 0 discriminator 1
 4563 0058 0029     		cmp	r1, #0
 4564 005a F3D1     		bne	.L292
 4565              	.LBE518:
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 4566              		.loc 1 2287 0
 4567 005c E36B     		ldr	r3, [r4, #60]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 176


 4568              	.LVL528:
 4569 005e BBB1     		cbz	r3, .L293
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4570              		.loc 1 2291 0
 4571 0060 154A     		ldr	r2, .L296
 4572 0062 5A63     		str	r2, [r3, #52]
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 4573              		.loc 1 2294 0
 4574 0064 E06B     		ldr	r0, [r4, #60]
 4575              	.LVL529:
 4576 0066 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4577              	.LVL530:
 4578 006a 10B1     		cbz	r0, .L294
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 4579              		.loc 1 2297 0
 4580 006c E06B     		ldr	r0, [r4, #60]
 4581 006e 436B     		ldr	r3, [r0, #52]
 4582 0070 9847     		blx	r3
 4583              	.LVL531:
 4584              	.L294:
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4585              		.loc 1 2339 0
 4586 0072 0020     		movs	r0, #0
 4587 0074 10BD     		pop	{r4, pc}
 4588              	.LVL532:
 4589              	.L290:
 4590              	.LBB523:
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 4591              		.loc 1 2278 0 discriminator 1
 4592 0076 2268     		ldr	r2, [r4]
 4593              	.LVL533:
 4594              	.LBB524:
 4595              	.LBB525:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4596              		.loc 2 1072 0 discriminator 1
 4597 0078 02F10C03 		add	r3, r2, #12
 4598              	.LVL534:
 4599              		.syntax unified
 4600              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4601 007c 53E8003F 		ldrex r3, [r3]
 4602              	@ 0 "" 2
 4603              	.LVL535:
 4604              		.thumb
 4605              		.syntax unified
 4606              	.LBE525:
 4607              	.LBE524:
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 4608              		.loc 1 2278 0 discriminator 1
 4609 0080 23F01003 		bic	r3, r3, #16
 4610              	.LVL536:
 4611              	.LBB526:
 4612              	.LBB527:
 4613              		.loc 2 1123 0 discriminator 1
 4614 0084 0C32     		adds	r2, r2, #12
 4615              	.LVL537:
 4616              		.syntax unified
 4617              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 177


 4618 0086 42E80031 		strex r1, r3, [r2]
 4619              	@ 0 "" 2
 4620              	.LVL538:
 4621              		.thumb
 4622              		.syntax unified
 4623              	.LBE527:
 4624              	.LBE526:
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 4625              		.loc 1 2278 0 discriminator 1
 4626 008a 0029     		cmp	r1, #0
 4627 008c F3D1     		bne	.L290
 4628 008e D4E7     		b	.L289
 4629              	.LVL539:
 4630              	.L293:
 4631              	.LBE523:
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4632              		.loc 1 2303 0
 4633 0090 0023     		movs	r3, #0
 4634 0092 E385     		strh	r3, [r4, #46]	@ movhi
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4635              		.loc 1 2306 0
 4636 0094 2022     		movs	r2, #32
 4637 0096 84F84220 		strb	r2, [r4, #66]
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4638              		.loc 1 2307 0
 4639 009a 2363     		str	r3, [r4, #48]
2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4640              		.loc 1 2315 0
 4641 009c 2046     		mov	r0, r4
 4642              	.LVL540:
 4643 009e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4644              	.LVL541:
 4645 00a2 E6E7     		b	.L294
 4646              	.LVL542:
 4647              	.L291:
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4648              		.loc 1 2322 0
 4649 00a4 0023     		movs	r3, #0
 4650 00a6 E385     		strh	r3, [r4, #46]	@ movhi
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4651              		.loc 1 2325 0
 4652 00a8 2022     		movs	r2, #32
 4653 00aa 84F84220 		strb	r2, [r4, #66]
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4654              		.loc 1 2326 0
 4655 00ae 2363     		str	r3, [r4, #48]
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4656              		.loc 1 2334 0
 4657 00b0 2046     		mov	r0, r4
 4658              	.LVL543:
 4659 00b2 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4660              	.LVL544:
 4661 00b6 DCE7     		b	.L294
 4662              	.L297:
 4663              		.align	2
 4664              	.L296:
 4665 00b8 00000000 		.word	UART_DMARxOnlyAbortCallback
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 178


 4666              		.cfi_endproc
 4667              	.LFE90:
 4669              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 4670              		.align	1
 4671              		.syntax unified
 4672              		.thumb
 4673              		.thumb_func
 4674              		.fpu softvfp
 4676              	UART_DMARxOnlyAbortCallback:
 4677              	.LFB122:
3489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4678              		.loc 1 3489 0
 4679              		.cfi_startproc
 4680              		@ args = 0, pretend = 0, frame = 0
 4681              		@ frame_needed = 0, uses_anonymous_args = 0
 4682              	.LVL545:
 4683 0000 08B5     		push	{r3, lr}
 4684              	.LCFI42:
 4685              		.cfi_def_cfa_offset 8
 4686              		.cfi_offset 3, -8
 4687              		.cfi_offset 14, -4
3490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4688              		.loc 1 3490 0
 4689 0002 406A     		ldr	r0, [r0, #36]
 4690              	.LVL546:
3492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4691              		.loc 1 3492 0
 4692 0004 0023     		movs	r3, #0
 4693 0006 C385     		strh	r3, [r0, #46]	@ movhi
3495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4694              		.loc 1 3495 0
 4695 0008 2022     		movs	r2, #32
 4696 000a 80F84220 		strb	r2, [r0, #66]
3496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4697              		.loc 1 3496 0
 4698 000e 0363     		str	r3, [r0, #48]
3504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4699              		.loc 1 3504 0
 4700 0010 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4701              	.LVL547:
3506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4702              		.loc 1 3506 0
 4703 0014 08BD     		pop	{r3, pc}
 4704              		.cfi_endproc
 4705              	.LFE122:
 4707              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 4708              		.align	1
 4709              		.weak	HAL_UARTEx_RxEventCallback
 4710              		.syntax unified
 4711              		.thumb
 4712              		.thumb_func
 4713              		.fpu softvfp
 4715              	HAL_UARTEx_RxEventCallback:
 4716              	.LFB100:
2711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4717              		.loc 1 2711 0
 4718              		.cfi_startproc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 179


 4719              		@ args = 0, pretend = 0, frame = 0
 4720              		@ frame_needed = 0, uses_anonymous_args = 0
 4721              		@ link register save eliminated.
 4722              	.LVL548:
2719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4723              		.loc 1 2719 0
 4724 0000 7047     		bx	lr
 4725              		.cfi_endproc
 4726              	.LFE100:
 4728              		.section	.text.UART_Receive_IT,"ax",%progbits
 4729              		.align	1
 4730              		.syntax unified
 4731              		.thumb
 4732              		.thumb_func
 4733              		.fpu softvfp
 4735              	UART_Receive_IT:
 4736              	.LFB125:
3580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4737              		.loc 1 3580 0
 4738              		.cfi_startproc
 4739              		@ args = 0, pretend = 0, frame = 8
 4740              		@ frame_needed = 0, uses_anonymous_args = 0
 4741              	.LVL549:
3585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 4742              		.loc 1 3585 0
 4743 0000 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 4744 0004 DBB2     		uxtb	r3, r3
 4745 0006 222B     		cmp	r3, #34
 4746 0008 69D1     		bne	.L311
3587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 4747              		.loc 1 3587 0
 4748 000a 8368     		ldr	r3, [r0, #8]
 4749 000c B3F5805F 		cmp	r3, #4096
 4750 0010 4ED0     		beq	.L317
 4751              	.L303:
3596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits  = NULL;
 4752              		.loc 1 3596 0
 4753 0012 826A     		ldr	r2, [r0, #40]
 4754              	.LVL550:
3599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 4755              		.loc 1 3599 0
 4756 0014 B3F5805F 		cmp	r3, #4096
 4757 0018 04D0     		beq	.L305
3599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 4758              		.loc 1 3599 0 is_stmt 0 discriminator 1
 4759 001a 002B     		cmp	r3, #0
 4760 001c 55D1     		bne	.L306
3599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 4761              		.loc 1 3599 0 discriminator 2
 4762 001e 0369     		ldr	r3, [r0, #16]
 4763 0020 002B     		cmp	r3, #0
 4764 0022 52D1     		bne	.L306
 4765              	.L305:
3601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 4766              		.loc 1 3601 0 is_stmt 1
 4767 0024 0368     		ldr	r3, [r0]
 4768 0026 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 180


 4769 0028 1370     		strb	r3, [r2]
 4770              	.L307:
3607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 4771              		.loc 1 3607 0
 4772 002a 836A     		ldr	r3, [r0, #40]
 4773 002c 0133     		adds	r3, r3, #1
 4774 002e 8362     		str	r3, [r0, #40]
 4775              	.LVL551:
 4776              	.L304:
3610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 4777              		.loc 1 3610 0
 4778 0030 C38D     		ldrh	r3, [r0, #46]
 4779 0032 013B     		subs	r3, r3, #1
 4780 0034 9BB2     		uxth	r3, r3
 4781 0036 C385     		strh	r3, [r0, #46]	@ movhi
 4782 0038 002B     		cmp	r3, #0
 4783 003a 52D1     		bne	.L312
3580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4784              		.loc 1 3580 0
 4785 003c 00B5     		push	{lr}
 4786              	.LCFI43:
 4787              		.cfi_def_cfa_offset 4
 4788              		.cfi_offset 14, -4
 4789 003e 83B0     		sub	sp, sp, #12
 4790              	.LCFI44:
 4791              		.cfi_def_cfa_offset 16
3613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4792              		.loc 1 3613 0
 4793 0040 0268     		ldr	r2, [r0]
 4794 0042 D368     		ldr	r3, [r2, #12]
 4795 0044 23F02003 		bic	r3, r3, #32
 4796 0048 D360     		str	r3, [r2, #12]
3616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4797              		.loc 1 3616 0
 4798 004a 0268     		ldr	r2, [r0]
 4799 004c D368     		ldr	r3, [r2, #12]
 4800 004e 23F48073 		bic	r3, r3, #256
 4801 0052 D360     		str	r3, [r2, #12]
3619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4802              		.loc 1 3619 0
 4803 0054 0268     		ldr	r2, [r0]
 4804 0056 5369     		ldr	r3, [r2, #20]
 4805 0058 23F00103 		bic	r3, r3, #1
 4806 005c 5361     		str	r3, [r2, #20]
3622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4807              		.loc 1 3622 0
 4808 005e 2023     		movs	r3, #32
 4809 0060 80F84230 		strb	r3, [r0, #66]
3625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4810              		.loc 1 3625 0
 4811 0064 0023     		movs	r3, #0
 4812 0066 4363     		str	r3, [r0, #52]
3629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 4813              		.loc 1 3629 0
 4814 0068 036B     		ldr	r3, [r0, #48]
 4815 006a 012B     		cmp	r3, #1
 4816 006c 33D1     		bne	.L308
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 181


3632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4817              		.loc 1 3632 0
 4818 006e 0023     		movs	r3, #0
 4819 0070 0363     		str	r3, [r0, #48]
 4820              	.L309:
 4821              	.LBB528:
3635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4822              		.loc 1 3635 0 discriminator 1
 4823 0072 0268     		ldr	r2, [r0]
 4824              	.LVL552:
 4825              	.LBB529:
 4826              	.LBB530:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4827              		.loc 2 1072 0 discriminator 1
 4828 0074 02F10C03 		add	r3, r2, #12
 4829              	.LVL553:
 4830              		.syntax unified
 4831              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4832 0078 53E8003F 		ldrex r3, [r3]
 4833              	@ 0 "" 2
 4834              	.LVL554:
 4835              		.thumb
 4836              		.syntax unified
 4837              	.LBE530:
 4838              	.LBE529:
3635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4839              		.loc 1 3635 0 discriminator 1
 4840 007c 23F01003 		bic	r3, r3, #16
 4841              	.LVL555:
 4842              	.LBB531:
 4843              	.LBB532:
 4844              		.loc 2 1123 0 discriminator 1
 4845 0080 0C32     		adds	r2, r2, #12
 4846              	.LVL556:
 4847              		.syntax unified
 4848              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4849 0082 42E80031 		strex r1, r3, [r2]
 4850              	@ 0 "" 2
 4851              	.LVL557:
 4852              		.thumb
 4853              		.syntax unified
 4854              	.LBE532:
 4855              	.LBE531:
3635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4856              		.loc 1 3635 0 discriminator 1
 4857 0086 0029     		cmp	r1, #0
 4858 0088 F3D1     		bne	.L309
 4859              	.LBE528:
3638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 4860              		.loc 1 3638 0
 4861 008a 0368     		ldr	r3, [r0]
 4862              	.LVL558:
 4863 008c 1A68     		ldr	r2, [r3]
 4864 008e 12F0100F 		tst	r2, #16
 4865 0092 06D0     		beq	.L310
 4866              	.LBB533:
3641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 182


 4867              		.loc 1 3641 0
 4868 0094 0022     		movs	r2, #0
 4869 0096 0192     		str	r2, [sp, #4]
 4870 0098 1A68     		ldr	r2, [r3]
 4871 009a 0192     		str	r2, [sp, #4]
 4872 009c 5B68     		ldr	r3, [r3, #4]
 4873 009e 0193     		str	r3, [sp, #4]
 4874 00a0 019B     		ldr	r3, [sp, #4]
 4875              	.L310:
 4876              	.LBE533:
3649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4877              		.loc 1 3649 0
 4878 00a2 818D     		ldrh	r1, [r0, #44]
 4879 00a4 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 4880              	.LVL559:
3664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 4881              		.loc 1 3664 0
 4882 00a8 0020     		movs	r0, #0
 4883              	.L302:
3672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4884              		.loc 1 3672 0
 4885 00aa 03B0     		add	sp, sp, #12
 4886              	.LCFI45:
 4887              		.cfi_def_cfa_offset 4
 4888              		@ sp needed
 4889 00ac 5DF804FB 		ldr	pc, [sp], #4
 4890              	.LVL560:
 4891              	.L317:
 4892              	.LCFI46:
 4893              		.cfi_def_cfa_offset 0
 4894              		.cfi_restore 14
3587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 4895              		.loc 1 3587 0 discriminator 1
 4896 00b0 0269     		ldr	r2, [r0, #16]
 4897 00b2 002A     		cmp	r2, #0
 4898 00b4 ADD1     		bne	.L303
 4899              	.LVL561:
3590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 4900              		.loc 1 3590 0
 4901 00b6 826A     		ldr	r2, [r0, #40]
 4902              	.LVL562:
3591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 4903              		.loc 1 3591 0
 4904 00b8 0368     		ldr	r3, [r0]
 4905 00ba 5B68     		ldr	r3, [r3, #4]
 4906 00bc C3F30803 		ubfx	r3, r3, #0, #9
 4907 00c0 1380     		strh	r3, [r2]	@ movhi
3592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 4908              		.loc 1 3592 0
 4909 00c2 836A     		ldr	r3, [r0, #40]
 4910 00c4 0233     		adds	r3, r3, #2
 4911 00c6 8362     		str	r3, [r0, #40]
 4912 00c8 B2E7     		b	.L304
 4913              	.LVL563:
 4914              	.L306:
3605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 4915              		.loc 1 3605 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 183


 4916 00ca 0368     		ldr	r3, [r0]
 4917 00cc 5B68     		ldr	r3, [r3, #4]
 4918 00ce 03F07F03 		and	r3, r3, #127
 4919 00d2 1370     		strb	r3, [r2]
 4920 00d4 A9E7     		b	.L307
 4921              	.LVL564:
 4922              	.L308:
 4923              	.LCFI47:
 4924              		.cfi_def_cfa_offset 16
 4925              		.cfi_offset 14, -4
3660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4926              		.loc 1 3660 0
 4927 00d6 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4928              	.LVL565:
3664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 4929              		.loc 1 3664 0
 4930 00da 0020     		movs	r0, #0
 4931 00dc E5E7     		b	.L302
 4932              	.LVL566:
 4933              	.L311:
 4934              	.LCFI48:
 4935              		.cfi_def_cfa_offset 0
 4936              		.cfi_restore 14
3670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 4937              		.loc 1 3670 0
 4938 00de 0220     		movs	r0, #2
 4939              	.LVL567:
 4940 00e0 7047     		bx	lr
 4941              	.LVL568:
 4942              	.L312:
3666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 4943              		.loc 1 3666 0
 4944 00e2 0020     		movs	r0, #0
 4945              	.LVL569:
3672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4946              		.loc 1 3672 0
 4947 00e4 7047     		bx	lr
 4948              		.cfi_endproc
 4949              	.LFE125:
 4951              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4952              		.align	1
 4953              		.global	HAL_UART_IRQHandler
 4954              		.syntax unified
 4955              		.thumb
 4956              		.thumb_func
 4957              		.fpu softvfp
 4959              	HAL_UART_IRQHandler:
 4960              	.LFB91:
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 4961              		.loc 1 2348 0
 4962              		.cfi_startproc
 4963              		@ args = 0, pretend = 0, frame = 8
 4964              		@ frame_needed = 0, uses_anonymous_args = 0
 4965              	.LVL570:
 4966 0000 30B5     		push	{r4, r5, lr}
 4967              	.LCFI49:
 4968              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 184


 4969              		.cfi_offset 4, -12
 4970              		.cfi_offset 5, -8
 4971              		.cfi_offset 14, -4
 4972 0002 83B0     		sub	sp, sp, #12
 4973              	.LCFI50:
 4974              		.cfi_def_cfa_offset 24
 4975 0004 0446     		mov	r4, r0
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4976              		.loc 1 2349 0
 4977 0006 0268     		ldr	r2, [r0]
 4978 0008 1368     		ldr	r3, [r2]
 4979              	.LVL571:
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 4980              		.loc 1 2350 0
 4981 000a D068     		ldr	r0, [r2, #12]
 4982              	.LVL572:
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 4983              		.loc 1 2351 0
 4984 000c 5169     		ldr	r1, [r2, #20]
 4985              	.LVL573:
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 4986              		.loc 1 2357 0
 4987 000e 13F00F05 		ands	r5, r3, #15
 4988              	.LVL574:
 4989 0012 05D1     		bne	.L319
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 4990              		.loc 1 2360 0
 4991 0014 13F0200F 		tst	r3, #32
 4992 0018 02D0     		beq	.L319
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 4993              		.loc 1 2360 0 is_stmt 0 discriminator 1
 4994 001a 10F0200F 		tst	r0, #32
 4995 001e 5ED1     		bne	.L346
 4996              	.L319:
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                                 || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 4997              		.loc 1 2368 0 is_stmt 1
 4998 0020 002D     		cmp	r5, #0
 4999 0022 72D0     		beq	.L321
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                                 || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 5000              		.loc 1 2368 0 is_stmt 0 discriminator 1
 5001 0024 11F00101 		ands	r1, r1, #1
 5002              	.LVL575:
 5003 0028 02D1     		bne	.L322
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5004              		.loc 1 2369 0 is_stmt 1
 5005 002a 10F4907F 		tst	r0, #288
 5006 002e 6CD0     		beq	.L321
 5007              	.L322:
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 5008              		.loc 1 2372 0
 5009 0030 13F0010F 		tst	r3, #1
 5010 0034 06D0     		beq	.L323
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 5011              		.loc 1 2372 0 is_stmt 0 discriminator 1
 5012 0036 10F4807F 		tst	r0, #256
 5013 003a 03D0     		beq	.L323
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 185


 5014              		.loc 1 2374 0 is_stmt 1
 5015 003c 626C     		ldr	r2, [r4, #68]
 5016 003e 42F00102 		orr	r2, r2, #1
 5017 0042 6264     		str	r2, [r4, #68]
 5018              	.L323:
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 5019              		.loc 1 2378 0
 5020 0044 13F0040F 		tst	r3, #4
 5021 0048 04D0     		beq	.L324
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 5022              		.loc 1 2378 0 is_stmt 0 discriminator 1
 5023 004a 19B1     		cbz	r1, .L324
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 5024              		.loc 1 2380 0 is_stmt 1
 5025 004c 626C     		ldr	r2, [r4, #68]
 5026 004e 42F00202 		orr	r2, r2, #2
 5027 0052 6264     		str	r2, [r4, #68]
 5028              	.L324:
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 5029              		.loc 1 2384 0
 5030 0054 13F0020F 		tst	r3, #2
 5031 0058 04D0     		beq	.L325
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 5032              		.loc 1 2384 0 is_stmt 0 discriminator 1
 5033 005a 19B1     		cbz	r1, .L325
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 5034              		.loc 1 2386 0 is_stmt 1
 5035 005c 626C     		ldr	r2, [r4, #68]
 5036 005e 42F00402 		orr	r2, r2, #4
 5037 0062 6264     		str	r2, [r4, #68]
 5038              	.L325:
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                                                  || ((cr3its & USART_CR3_EIE) != RESET)))
 5039              		.loc 1 2390 0
 5040 0064 13F0080F 		tst	r3, #8
 5041 0068 07D0     		beq	.L326
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                                                  || ((cr3its & USART_CR3_EIE) != RESET)))
 5042              		.loc 1 2390 0 is_stmt 0 discriminator 1
 5043 006a 10F0200F 		tst	r0, #32
 5044 006e 00D1     		bne	.L327
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 5045              		.loc 1 2391 0 is_stmt 1
 5046 0070 19B1     		cbz	r1, .L326
 5047              	.L327:
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 5048              		.loc 1 2393 0
 5049 0072 626C     		ldr	r2, [r4, #68]
 5050 0074 42F00802 		orr	r2, r2, #8
 5051 0078 6264     		str	r2, [r4, #68]
 5052              	.L326:
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 5053              		.loc 1 2397 0
 5054 007a 626C     		ldr	r2, [r4, #68]
 5055 007c 002A     		cmp	r2, #0
 5056 007e 55D0     		beq	.L318
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 5057              		.loc 1 2400 0
 5058 0080 13F0200F 		tst	r3, #32
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 186


 5059 0084 02D0     		beq	.L328
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 5060              		.loc 1 2400 0 is_stmt 0 discriminator 1
 5061 0086 10F0200F 		tst	r0, #32
 5062 008a 2CD1     		bne	.L347
 5063              	.LVL576:
 5064              	.L328:
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 5065              		.loc 1 2407 0 is_stmt 1
 5066 008c 2368     		ldr	r3, [r4]
 5067 008e 5B69     		ldr	r3, [r3, #20]
 5068 0090 03F04003 		and	r3, r3, #64
 5069              	.LVL577:
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 5070              		.loc 1 2408 0
 5071 0094 626C     		ldr	r2, [r4, #68]
 5072 0096 12F0080F 		tst	r2, #8
 5073 009a 00D1     		bne	.L329
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 5074              		.loc 1 2408 0 is_stmt 0 discriminator 1
 5075 009c 7BB3     		cbz	r3, .L330
 5076              	.L329:
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5077              		.loc 1 2413 0 is_stmt 1
 5078 009e 2046     		mov	r0, r4
 5079 00a0 FFF7FEFF 		bl	UART_EndRxTransfer
 5080              	.LVL578:
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 5081              		.loc 1 2416 0
 5082 00a4 2368     		ldr	r3, [r4]
 5083 00a6 5B69     		ldr	r3, [r3, #20]
 5084 00a8 13F0400F 		tst	r3, #64
 5085 00ac 23D0     		beq	.L331
 5086              	.L332:
 5087              	.LBB534:
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5088              		.loc 1 2418 0 discriminator 1
 5089 00ae 2268     		ldr	r2, [r4]
 5090              	.LVL579:
 5091              	.LBB535:
 5092              	.LBB536:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5093              		.loc 2 1072 0 discriminator 1
 5094 00b0 02F11403 		add	r3, r2, #20
 5095              	.LVL580:
 5096              		.syntax unified
 5097              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5098 00b4 53E8003F 		ldrex r3, [r3]
 5099              	@ 0 "" 2
 5100              	.LVL581:
 5101              		.thumb
 5102              		.syntax unified
 5103              	.LBE536:
 5104              	.LBE535:
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5105              		.loc 1 2418 0 discriminator 1
 5106 00b8 23F04003 		bic	r3, r3, #64
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 187


 5107              	.LVL582:
 5108              	.LBB537:
 5109              	.LBB538:
 5110              		.loc 2 1123 0 discriminator 1
 5111 00bc 1432     		adds	r2, r2, #20
 5112              	.LVL583:
 5113              		.syntax unified
 5114              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5115 00be 42E80031 		strex r1, r3, [r2]
 5116              	@ 0 "" 2
 5117              	.LVL584:
 5118              		.thumb
 5119              		.syntax unified
 5120              	.LBE538:
 5121              	.LBE537:
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5122              		.loc 1 2418 0 discriminator 1
 5123 00c2 0029     		cmp	r1, #0
 5124 00c4 F3D1     		bne	.L332
 5125              	.LBE534:
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
 5126              		.loc 1 2421 0
 5127 00c6 E36B     		ldr	r3, [r4, #60]
 5128              	.LVL585:
 5129 00c8 8BB1     		cbz	r3, .L333
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5130              		.loc 1 2425 0
 5131 00ca 6A4A     		ldr	r2, .L351
 5132 00cc 5A63     		str	r2, [r3, #52]
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
 5133              		.loc 1 2426 0
 5134 00ce E06B     		ldr	r0, [r4, #60]
 5135 00d0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5136              	.LVL586:
 5137 00d4 50B3     		cbz	r0, .L318
2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
 5138              		.loc 1 2429 0
 5139 00d6 E06B     		ldr	r0, [r4, #60]
 5140 00d8 436B     		ldr	r3, [r0, #52]
 5141 00da 9847     		blx	r3
 5142              	.LVL587:
 5143 00dc 26E0     		b	.L318
 5144              	.LVL588:
 5145              	.L346:
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 5146              		.loc 1 2362 0
 5147 00de 2046     		mov	r0, r4
 5148              	.LVL589:
 5149 00e0 FFF7FEFF 		bl	UART_Receive_IT
 5150              	.LVL590:
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 5151              		.loc 1 2363 0
 5152 00e4 22E0     		b	.L318
 5153              	.LVL591:
 5154              	.L347:
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 5155              		.loc 1 2402 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 188


 5156 00e6 2046     		mov	r0, r4
 5157              	.LVL592:
 5158 00e8 FFF7FEFF 		bl	UART_Receive_IT
 5159              	.LVL593:
 5160 00ec CEE7     		b	.L328
 5161              	.LVL594:
 5162              	.L333:
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5163              		.loc 1 2440 0
 5164 00ee 2046     		mov	r0, r4
 5165 00f0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5166              	.LVL595:
 5167 00f4 1AE0     		b	.L318
 5168              	.L331:
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5169              		.loc 1 2452 0
 5170 00f6 2046     		mov	r0, r4
 5171 00f8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5172              	.LVL596:
 5173 00fc 16E0     		b	.L318
 5174              	.LVL597:
 5175              	.L330:
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5176              		.loc 1 2465 0
 5177 00fe 2046     		mov	r0, r4
 5178 0100 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5179              	.LVL598:
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 5180              		.loc 1 2468 0
 5181 0104 0023     		movs	r3, #0
 5182 0106 6364     		str	r3, [r4, #68]
 5183 0108 10E0     		b	.L318
 5184              	.LVL599:
 5185              	.L321:
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       && ((isrflags & USART_SR_IDLE) != 0U)
 5186              		.loc 1 2476 0
 5187 010a 216B     		ldr	r1, [r4, #48]
 5188 010c 0129     		cmp	r1, #1
 5189 010e 0FD0     		beq	.L348
 5190              	.L334:
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5191              		.loc 1 2569 0
 5192 0110 13F0800F 		tst	r3, #128
 5193 0114 03D0     		beq	.L344
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5194              		.loc 1 2569 0 is_stmt 0 discriminator 1
 5195 0116 10F0800F 		tst	r0, #128
 5196 011a 40F0A280 		bne	.L349
 5197              	.L344:
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5198              		.loc 1 2576 0 is_stmt 1
 5199 011e 13F0400F 		tst	r3, #64
 5200 0122 03D0     		beq	.L318
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5201              		.loc 1 2576 0 is_stmt 0 discriminator 1
 5202 0124 10F0400F 		tst	r0, #64
 5203 0128 40F09F80 		bne	.L350
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 189


 5204              	.LVL600:
 5205              	.L318:
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5206              		.loc 1 2581 0 is_stmt 1
 5207 012c 03B0     		add	sp, sp, #12
 5208              	.LCFI51:
 5209              		.cfi_remember_state
 5210              		.cfi_def_cfa_offset 12
 5211              		@ sp needed
 5212 012e 30BD     		pop	{r4, r5, pc}
 5213              	.LVL601:
 5214              	.L348:
 5215              	.LCFI52:
 5216              		.cfi_restore_state
2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       && ((cr1its & USART_SR_IDLE) != 0U))
 5217              		.loc 1 2477 0
 5218 0130 13F0100F 		tst	r3, #16
 5219 0134 ECD0     		beq	.L334
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5220              		.loc 1 2478 0
 5221 0136 10F0100F 		tst	r0, #16
 5222 013a E9D0     		beq	.L334
 5223              	.LBB539:
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5224              		.loc 1 2480 0
 5225 013c 0023     		movs	r3, #0
 5226              	.LVL602:
 5227 013e 0193     		str	r3, [sp, #4]
 5228 0140 1368     		ldr	r3, [r2]
 5229 0142 0193     		str	r3, [sp, #4]
 5230 0144 5368     		ldr	r3, [r2, #4]
 5231 0146 0193     		str	r3, [sp, #4]
 5232 0148 019B     		ldr	r3, [sp, #4]
 5233              	.LBE539:
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 5234              		.loc 1 2483 0
 5235 014a 5369     		ldr	r3, [r2, #20]
 5236 014c 13F0400F 		tst	r3, #64
 5237 0150 4ED0     		beq	.L335
 5238              	.LBB540:
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5239              		.loc 1 2489 0
 5240 0152 E26B     		ldr	r2, [r4, #60]
 5241 0154 1368     		ldr	r3, [r2]
 5242 0156 5B68     		ldr	r3, [r3, #4]
 5243 0158 9BB2     		uxth	r3, r3
 5244              	.LVL603:
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5245              		.loc 1 2490 0
 5246 015a 002B     		cmp	r3, #0
 5247 015c E6D0     		beq	.L318
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 5248              		.loc 1 2491 0
 5249 015e A18D     		ldrh	r1, [r4, #44]
 5250 0160 9942     		cmp	r1, r3
 5251 0162 E3D9     		bls	.L318
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 190


 5252              		.loc 1 2494 0
 5253 0164 E385     		strh	r3, [r4, #46]	@ movhi
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 5254              		.loc 1 2497 0
 5255 0166 9369     		ldr	r3, [r2, #24]
 5256              	.LVL604:
 5257 0168 202B     		cmp	r3, #32
 5258 016a 37D0     		beq	.L336
 5259              	.L337:
 5260              	.LBB541:
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5261              		.loc 1 2500 0 discriminator 1
 5262 016c 2268     		ldr	r2, [r4]
 5263              	.LVL605:
 5264              	.LBB542:
 5265              	.LBB543:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5266              		.loc 2 1072 0 discriminator 1
 5267 016e 02F10C03 		add	r3, r2, #12
 5268              	.LVL606:
 5269              		.syntax unified
 5270              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5271 0172 53E8003F 		ldrex r3, [r3]
 5272              	@ 0 "" 2
 5273              	.LVL607:
 5274              		.thumb
 5275              		.syntax unified
 5276              	.LBE543:
 5277              	.LBE542:
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5278              		.loc 1 2500 0 discriminator 1
 5279 0176 23F48073 		bic	r3, r3, #256
 5280              	.LVL608:
 5281              	.LBB544:
 5282              	.LBB545:
 5283              		.loc 2 1123 0 discriminator 1
 5284 017a 0C32     		adds	r2, r2, #12
 5285              	.LVL609:
 5286              		.syntax unified
 5287              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5288 017c 42E80031 		strex r1, r3, [r2]
 5289              	@ 0 "" 2
 5290              	.LVL610:
 5291              		.thumb
 5292              		.syntax unified
 5293              	.LBE545:
 5294              	.LBE544:
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5295              		.loc 1 2500 0 discriminator 1
 5296 0180 0029     		cmp	r1, #0
 5297 0182 F3D1     		bne	.L337
 5298              	.LVL611:
 5299              	.L338:
 5300              	.LBE541:
 5301              	.LBB546:
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5302              		.loc 1 2501 0 discriminator 1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 191


 5303 0184 2268     		ldr	r2, [r4]
 5304              	.LVL612:
 5305              	.LBB547:
 5306              	.LBB548:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5307              		.loc 2 1072 0 discriminator 1
 5308 0186 02F11403 		add	r3, r2, #20
 5309              	.LVL613:
 5310              		.syntax unified
 5311              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5312 018a 53E8003F 		ldrex r3, [r3]
 5313              	@ 0 "" 2
 5314              	.LVL614:
 5315              		.thumb
 5316              		.syntax unified
 5317              	.LBE548:
 5318              	.LBE547:
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5319              		.loc 1 2501 0 discriminator 1
 5320 018e 23F00103 		bic	r3, r3, #1
 5321              	.LVL615:
 5322              	.LBB549:
 5323              	.LBB550:
 5324              		.loc 2 1123 0 discriminator 1
 5325 0192 1432     		adds	r2, r2, #20
 5326              	.LVL616:
 5327              		.syntax unified
 5328              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5329 0194 42E80031 		strex r1, r3, [r2]
 5330              	@ 0 "" 2
 5331              	.LVL617:
 5332              		.thumb
 5333              		.syntax unified
 5334              	.LBE550:
 5335              	.LBE549:
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5336              		.loc 1 2501 0 discriminator 1
 5337 0198 0029     		cmp	r1, #0
 5338 019a F3D1     		bne	.L338
 5339              	.LVL618:
 5340              	.L339:
 5341              	.LBE546:
 5342              	.LBB551:
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5343              		.loc 1 2505 0 discriminator 1
 5344 019c 2268     		ldr	r2, [r4]
 5345              	.LVL619:
 5346              	.LBB552:
 5347              	.LBB553:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5348              		.loc 2 1072 0 discriminator 1
 5349 019e 02F11403 		add	r3, r2, #20
 5350              	.LVL620:
 5351              		.syntax unified
 5352              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5353 01a2 53E8003F 		ldrex r3, [r3]
 5354              	@ 0 "" 2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 192


 5355              	.LVL621:
 5356              		.thumb
 5357              		.syntax unified
 5358              	.LBE553:
 5359              	.LBE552:
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5360              		.loc 1 2505 0 discriminator 1
 5361 01a6 23F04003 		bic	r3, r3, #64
 5362              	.LVL622:
 5363              	.LBB554:
 5364              	.LBB555:
 5365              		.loc 2 1123 0 discriminator 1
 5366 01aa 1432     		adds	r2, r2, #20
 5367              	.LVL623:
 5368              		.syntax unified
 5369              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5370 01ac 42E80031 		strex r1, r3, [r2]
 5371              	@ 0 "" 2
 5372              	.LVL624:
 5373              		.thumb
 5374              		.syntax unified
 5375              	.LBE555:
 5376              	.LBE554:
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5377              		.loc 1 2505 0 discriminator 1
 5378 01b0 0029     		cmp	r1, #0
 5379 01b2 F3D1     		bne	.L339
 5380              	.LBE551:
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5381              		.loc 1 2508 0
 5382 01b4 2023     		movs	r3, #32
 5383              	.LVL625:
 5384 01b6 84F84230 		strb	r3, [r4, #66]
 5385              	.LVL626:
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5386              		.loc 1 2509 0
 5387 01ba 0023     		movs	r3, #0
 5388 01bc 2363     		str	r3, [r4, #48]
 5389              	.L340:
 5390              	.LBB556:
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5391              		.loc 1 2511 0 discriminator 1
 5392 01be 2268     		ldr	r2, [r4]
 5393              	.LVL627:
 5394              	.LBB557:
 5395              	.LBB558:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5396              		.loc 2 1072 0 discriminator 1
 5397 01c0 02F10C03 		add	r3, r2, #12
 5398              	.LVL628:
 5399              		.syntax unified
 5400              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5401 01c4 53E8003F 		ldrex r3, [r3]
 5402              	@ 0 "" 2
 5403              	.LVL629:
 5404              		.thumb
 5405              		.syntax unified
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 193


 5406              	.LBE558:
 5407              	.LBE557:
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5408              		.loc 1 2511 0 discriminator 1
 5409 01c8 23F01003 		bic	r3, r3, #16
 5410              	.LVL630:
 5411              	.LBB559:
 5412              	.LBB560:
 5413              		.loc 2 1123 0 discriminator 1
 5414 01cc 0C32     		adds	r2, r2, #12
 5415              	.LVL631:
 5416              		.syntax unified
 5417              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5418 01ce 42E80031 		strex r1, r3, [r2]
 5419              	@ 0 "" 2
 5420              	.LVL632:
 5421              		.thumb
 5422              		.syntax unified
 5423              	.LBE560:
 5424              	.LBE559:
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5425              		.loc 1 2511 0 discriminator 1
 5426 01d2 0029     		cmp	r1, #0
 5427 01d4 F3D1     		bne	.L340
 5428              	.LBE556:
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 5429              		.loc 1 2514 0
 5430 01d6 E06B     		ldr	r0, [r4, #60]
 5431              	.LVL633:
 5432 01d8 FFF7FEFF 		bl	HAL_DMA_Abort
 5433              	.LVL634:
 5434              	.L336:
2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5435              		.loc 1 2519 0
 5436 01dc 0223     		movs	r3, #2
 5437 01de 6363     		str	r3, [r4, #52]
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5438              		.loc 1 2526 0
 5439 01e0 A18D     		ldrh	r1, [r4, #44]
 5440 01e2 E38D     		ldrh	r3, [r4, #46]
 5441 01e4 C91A     		subs	r1, r1, r3
 5442 01e6 89B2     		uxth	r1, r1
 5443 01e8 2046     		mov	r0, r4
 5444 01ea FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5445              	.LVL635:
 5446 01ee 9DE7     		b	.L318
 5447              	.LVL636:
 5448              	.L335:
 5449              	.LBE540:
 5450              	.LBB561:
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 5451              		.loc 1 2536 0
 5452 01f0 A18D     		ldrh	r1, [r4, #44]
 5453 01f2 E38D     		ldrh	r3, [r4, #46]
 5454 01f4 C91A     		subs	r1, r1, r3
 5455 01f6 89B2     		uxth	r1, r1
 5456              	.LVL637:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 194


2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           && (nb_rx_data > 0U))
 5457              		.loc 1 2537 0
 5458 01f8 E38D     		ldrh	r3, [r4, #46]
 5459 01fa 9BB2     		uxth	r3, r3
 5460 01fc 002B     		cmp	r3, #0
 5461 01fe 95D0     		beq	.L318
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 5462              		.loc 1 2538 0
 5463 0200 0029     		cmp	r1, #0
 5464 0202 93D0     		beq	.L318
 5465              	.LVL638:
 5466              	.L341:
 5467              	.LBB562:
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5468              		.loc 1 2541 0 discriminator 1
 5469 0204 2268     		ldr	r2, [r4]
 5470              	.LVL639:
 5471              	.LBB563:
 5472              	.LBB564:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5473              		.loc 2 1072 0 discriminator 1
 5474 0206 02F10C03 		add	r3, r2, #12
 5475              	.LVL640:
 5476              		.syntax unified
 5477              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5478 020a 53E8003F 		ldrex r3, [r3]
 5479              	@ 0 "" 2
 5480              	.LVL641:
 5481              		.thumb
 5482              		.syntax unified
 5483              	.LBE564:
 5484              	.LBE563:
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5485              		.loc 1 2541 0 discriminator 1
 5486 020e 23F49073 		bic	r3, r3, #288
 5487              	.LVL642:
 5488              	.LBB565:
 5489              	.LBB566:
 5490              		.loc 2 1123 0 discriminator 1
 5491 0212 0C32     		adds	r2, r2, #12
 5492              	.LVL643:
 5493              		.syntax unified
 5494              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5495 0214 42E80030 		strex r0, r3, [r2]
 5496              	@ 0 "" 2
 5497              	.LVL644:
 5498              		.thumb
 5499              		.syntax unified
 5500              	.LBE566:
 5501              	.LBE565:
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5502              		.loc 1 2541 0 discriminator 1
 5503 0218 0028     		cmp	r0, #0
 5504 021a F3D1     		bne	.L341
 5505              	.LVL645:
 5506              	.L342:
 5507              	.LBE562:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 195


 5508              	.LBB567:
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5509              		.loc 1 2544 0 discriminator 1
 5510 021c 2268     		ldr	r2, [r4]
 5511              	.LVL646:
 5512              	.LBB568:
 5513              	.LBB569:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5514              		.loc 2 1072 0 discriminator 1
 5515 021e 02F11403 		add	r3, r2, #20
 5516              	.LVL647:
 5517              		.syntax unified
 5518              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5519 0222 53E8003F 		ldrex r3, [r3]
 5520              	@ 0 "" 2
 5521              	.LVL648:
 5522              		.thumb
 5523              		.syntax unified
 5524              	.LBE569:
 5525              	.LBE568:
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5526              		.loc 1 2544 0 discriminator 1
 5527 0226 23F00103 		bic	r3, r3, #1
 5528              	.LVL649:
 5529              	.LBB570:
 5530              	.LBB571:
 5531              		.loc 2 1123 0 discriminator 1
 5532 022a 1432     		adds	r2, r2, #20
 5533              	.LVL650:
 5534              		.syntax unified
 5535              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5536 022c 42E80030 		strex r0, r3, [r2]
 5537              	@ 0 "" 2
 5538              	.LVL651:
 5539              		.thumb
 5540              		.syntax unified
 5541              	.LBE571:
 5542              	.LBE570:
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5543              		.loc 1 2544 0 discriminator 1
 5544 0230 0028     		cmp	r0, #0
 5545 0232 F3D1     		bne	.L342
 5546              	.LBE567:
2547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5547              		.loc 1 2547 0
 5548 0234 2023     		movs	r3, #32
 5549              	.LVL652:
 5550 0236 84F84230 		strb	r3, [r4, #66]
2548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5551              		.loc 1 2548 0
 5552 023a 0023     		movs	r3, #0
 5553 023c 2363     		str	r3, [r4, #48]
 5554              	.L343:
 5555              	.LBB572:
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5556              		.loc 1 2550 0 discriminator 1
 5557 023e 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 196


 5558              	.LVL653:
 5559              	.LBB573:
 5560              	.LBB574:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5561              		.loc 2 1072 0 discriminator 1
 5562 0240 02F10C03 		add	r3, r2, #12
 5563              	.LVL654:
 5564              		.syntax unified
 5565              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5566 0244 53E8003F 		ldrex r3, [r3]
 5567              	@ 0 "" 2
 5568              	.LVL655:
 5569              		.thumb
 5570              		.syntax unified
 5571              	.LBE574:
 5572              	.LBE573:
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5573              		.loc 1 2550 0 discriminator 1
 5574 0248 23F01003 		bic	r3, r3, #16
 5575              	.LVL656:
 5576              	.LBB575:
 5577              	.LBB576:
 5578              		.loc 2 1123 0 discriminator 1
 5579 024c 0C32     		adds	r2, r2, #12
 5580              	.LVL657:
 5581              		.syntax unified
 5582              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5583 024e 42E80030 		strex r0, r3, [r2]
 5584              	@ 0 "" 2
 5585              	.LVL658:
 5586              		.thumb
 5587              		.syntax unified
 5588              	.LBE576:
 5589              	.LBE575:
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5590              		.loc 1 2550 0 discriminator 1
 5591 0252 0028     		cmp	r0, #0
 5592 0254 F3D1     		bne	.L343
 5593              	.LBE572:
2554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5594              		.loc 1 2554 0
 5595 0256 0223     		movs	r3, #2
 5596              	.LVL659:
 5597 0258 6363     		str	r3, [r4, #52]
2561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5598              		.loc 1 2561 0
 5599 025a 2046     		mov	r0, r4
 5600 025c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5601              	.LVL660:
 5602 0260 64E7     		b	.L318
 5603              	.LVL661:
 5604              	.L349:
 5605              	.LBE561:
2571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 5606              		.loc 1 2571 0
 5607 0262 2046     		mov	r0, r4
 5608              	.LVL662:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 197


 5609 0264 FFF7FEFF 		bl	UART_Transmit_IT
 5610              	.LVL663:
2572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 5611              		.loc 1 2572 0
 5612 0268 60E7     		b	.L318
 5613              	.LVL664:
 5614              	.L350:
2578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 5615              		.loc 1 2578 0
 5616 026a 2046     		mov	r0, r4
 5617              	.LVL665:
 5618 026c FFF7FEFF 		bl	UART_EndTransmit_IT
 5619              	.LVL666:
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 5620              		.loc 1 2579 0
 5621 0270 5CE7     		b	.L318
 5622              	.L352:
 5623 0272 00BF     		.align	2
 5624              	.L351:
 5625 0274 00000000 		.word	UART_DMAAbortOnError
 5626              		.cfi_endproc
 5627              	.LFE91:
 5629              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 5630              		.align	1
 5631              		.syntax unified
 5632              		.thumb
 5633              		.thumb_func
 5634              		.fpu softvfp
 5636              	UART_DMARxHalfCplt:
 5637              	.LFB111:
3102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5638              		.loc 1 3102 0
 5639              		.cfi_startproc
 5640              		@ args = 0, pretend = 0, frame = 0
 5641              		@ frame_needed = 0, uses_anonymous_args = 0
 5642              	.LVL667:
 5643 0000 08B5     		push	{r3, lr}
 5644              	.LCFI53:
 5645              		.cfi_def_cfa_offset 8
 5646              		.cfi_offset 3, -8
 5647              		.cfi_offset 14, -4
3103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5648              		.loc 1 3103 0
 5649 0002 406A     		ldr	r0, [r0, #36]
 5650              	.LVL668:
3107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5651              		.loc 1 3107 0
 5652 0004 0123     		movs	r3, #1
 5653 0006 4363     		str	r3, [r0, #52]
3111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5654              		.loc 1 3111 0
 5655 0008 036B     		ldr	r3, [r0, #48]
 5656 000a 012B     		cmp	r3, #1
 5657 000c 02D0     		beq	.L357
3129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5658              		.loc 1 3129 0
 5659 000e FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 198


 5660              	.LVL669:
 5661              	.L353:
3132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5662              		.loc 1 3132 0
 5663 0012 08BD     		pop	{r3, pc}
 5664              	.LVL670:
 5665              	.L357:
3118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5666              		.loc 1 3118 0
 5667 0014 818D     		ldrh	r1, [r0, #44]
 5668 0016 4908     		lsrs	r1, r1, #1
 5669 0018 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5670              	.LVL671:
 5671 001c F9E7     		b	.L353
 5672              		.cfi_endproc
 5673              	.LFE111:
 5675              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 5676              		.align	1
 5677              		.syntax unified
 5678              		.thumb
 5679              		.thumb_func
 5680              		.fpu softvfp
 5682              	UART_DMAReceiveCplt:
 5683              	.LFB110:
3040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5684              		.loc 1 3040 0
 5685              		.cfi_startproc
 5686              		@ args = 0, pretend = 0, frame = 0
 5687              		@ frame_needed = 0, uses_anonymous_args = 0
 5688              	.LVL672:
 5689 0000 08B5     		push	{r3, lr}
 5690              	.LCFI54:
 5691              		.cfi_def_cfa_offset 8
 5692              		.cfi_offset 3, -8
 5693              		.cfi_offset 14, -4
3041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5694              		.loc 1 3041 0
 5695 0002 436A     		ldr	r3, [r0, #36]
 5696              	.LVL673:
3044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5697              		.loc 1 3044 0
 5698 0004 0268     		ldr	r2, [r0]
 5699 0006 1268     		ldr	r2, [r2]
 5700 0008 12F0200F 		tst	r2, #32
 5701 000c 2BD1     		bne	.L359
3046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5702              		.loc 1 3046 0
 5703 000e 0022     		movs	r2, #0
 5704 0010 DA85     		strh	r2, [r3, #46]	@ movhi
 5705              	.LVL674:
 5706              	.L360:
 5707              	.LBB577:
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5708              		.loc 1 3049 0 discriminator 1
 5709 0012 1968     		ldr	r1, [r3]
 5710              	.LVL675:
 5711              	.LBB578:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 199


 5712              	.LBB579:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5713              		.loc 2 1072 0 discriminator 1
 5714 0014 01F10C02 		add	r2, r1, #12
 5715              	.LVL676:
 5716              		.syntax unified
 5717              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5718 0018 52E8002F 		ldrex r2, [r2]
 5719              	@ 0 "" 2
 5720              	.LVL677:
 5721              		.thumb
 5722              		.syntax unified
 5723              	.LBE579:
 5724              	.LBE578:
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5725              		.loc 1 3049 0 discriminator 1
 5726 001c 22F48072 		bic	r2, r2, #256
 5727              	.LVL678:
 5728              	.LBB580:
 5729              	.LBB581:
 5730              		.loc 2 1123 0 discriminator 1
 5731 0020 0C31     		adds	r1, r1, #12
 5732              	.LVL679:
 5733              		.syntax unified
 5734              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5735 0022 41E80020 		strex r0, r2, [r1]
 5736              	@ 0 "" 2
 5737              	.LVL680:
 5738              		.thumb
 5739              		.syntax unified
 5740              	.LBE581:
 5741              	.LBE580:
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5742              		.loc 1 3049 0 discriminator 1
 5743 0026 0028     		cmp	r0, #0
 5744 0028 F3D1     		bne	.L360
 5745              	.LVL681:
 5746              	.L361:
 5747              	.LBE577:
 5748              	.LBB582:
3050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5749              		.loc 1 3050 0 discriminator 1
 5750 002a 1968     		ldr	r1, [r3]
 5751              	.LVL682:
 5752              	.LBB583:
 5753              	.LBB584:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5754              		.loc 2 1072 0 discriminator 1
 5755 002c 01F11402 		add	r2, r1, #20
 5756              	.LVL683:
 5757              		.syntax unified
 5758              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5759 0030 52E8002F 		ldrex r2, [r2]
 5760              	@ 0 "" 2
 5761              	.LVL684:
 5762              		.thumb
 5763              		.syntax unified
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 200


 5764              	.LBE584:
 5765              	.LBE583:
3050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5766              		.loc 1 3050 0 discriminator 1
 5767 0034 22F00102 		bic	r2, r2, #1
 5768              	.LVL685:
 5769              	.LBB585:
 5770              	.LBB586:
 5771              		.loc 2 1123 0 discriminator 1
 5772 0038 1431     		adds	r1, r1, #20
 5773              	.LVL686:
 5774              		.syntax unified
 5775              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5776 003a 41E80020 		strex r0, r2, [r1]
 5777              	@ 0 "" 2
 5778              	.LVL687:
 5779              		.thumb
 5780              		.syntax unified
 5781              	.LBE586:
 5782              	.LBE585:
3050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5783              		.loc 1 3050 0 discriminator 1
 5784 003e 0028     		cmp	r0, #0
 5785 0040 F3D1     		bne	.L361
 5786              	.LVL688:
 5787              	.L362:
 5788              	.LBE582:
 5789              	.LBB587:
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5790              		.loc 1 3054 0 discriminator 1
 5791 0042 1968     		ldr	r1, [r3]
 5792              	.LVL689:
 5793              	.LBB588:
 5794              	.LBB589:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5795              		.loc 2 1072 0 discriminator 1
 5796 0044 01F11402 		add	r2, r1, #20
 5797              	.LVL690:
 5798              		.syntax unified
 5799              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5800 0048 52E8002F 		ldrex r2, [r2]
 5801              	@ 0 "" 2
 5802              	.LVL691:
 5803              		.thumb
 5804              		.syntax unified
 5805              	.LBE589:
 5806              	.LBE588:
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5807              		.loc 1 3054 0 discriminator 1
 5808 004c 22F04002 		bic	r2, r2, #64
 5809              	.LVL692:
 5810              	.LBB590:
 5811              	.LBB591:
 5812              		.loc 2 1123 0 discriminator 1
 5813 0050 1431     		adds	r1, r1, #20
 5814              	.LVL693:
 5815              		.syntax unified
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 201


 5816              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5817 0052 41E80020 		strex r0, r2, [r1]
 5818              	@ 0 "" 2
 5819              	.LVL694:
 5820              		.thumb
 5821              		.syntax unified
 5822              	.LBE591:
 5823              	.LBE590:
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5824              		.loc 1 3054 0 discriminator 1
 5825 0056 0028     		cmp	r0, #0
 5826 0058 F3D1     		bne	.L362
 5827              	.LBE587:
3057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5828              		.loc 1 3057 0
 5829 005a 2022     		movs	r2, #32
 5830              	.LVL695:
 5831 005c 83F84220 		strb	r2, [r3, #66]
3060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 5832              		.loc 1 3060 0
 5833 0060 1A6B     		ldr	r2, [r3, #48]
 5834 0062 012A     		cmp	r2, #1
 5835 0064 08D0     		beq	.L363
 5836              	.L359:
3068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5837              		.loc 1 3068 0
 5838 0066 0022     		movs	r2, #0
 5839 0068 5A63     		str	r2, [r3, #52]
3072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5840              		.loc 1 3072 0
 5841 006a 1A6B     		ldr	r2, [r3, #48]
 5842 006c 012A     		cmp	r2, #1
 5843 006e 10D0     		beq	.L367
3090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5844              		.loc 1 3090 0
 5845 0070 1846     		mov	r0, r3
 5846 0072 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 5847              	.LVL696:
 5848              	.L358:
3093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5849              		.loc 1 3093 0
 5850 0076 08BD     		pop	{r3, pc}
 5851              	.LVL697:
 5852              	.L363:
 5853              	.LBB592:
3062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 5854              		.loc 1 3062 0 discriminator 1
 5855 0078 1968     		ldr	r1, [r3]
 5856              	.LVL698:
 5857              	.LBB593:
 5858              	.LBB594:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5859              		.loc 2 1072 0 discriminator 1
 5860 007a 01F10C02 		add	r2, r1, #12
 5861              	.LVL699:
 5862              		.syntax unified
 5863              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 202


 5864 007e 52E8002F 		ldrex r2, [r2]
 5865              	@ 0 "" 2
 5866              	.LVL700:
 5867              		.thumb
 5868              		.syntax unified
 5869              	.LBE594:
 5870              	.LBE593:
3062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 5871              		.loc 1 3062 0 discriminator 1
 5872 0082 22F01002 		bic	r2, r2, #16
 5873              	.LVL701:
 5874              	.LBB595:
 5875              	.LBB596:
 5876              		.loc 2 1123 0 discriminator 1
 5877 0086 0C31     		adds	r1, r1, #12
 5878              	.LVL702:
 5879              		.syntax unified
 5880              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5881 0088 41E80020 		strex r0, r2, [r1]
 5882              	@ 0 "" 2
 5883              	.LVL703:
 5884              		.thumb
 5885              		.syntax unified
 5886              	.LBE596:
 5887              	.LBE595:
3062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 5888              		.loc 1 3062 0 discriminator 1
 5889 008c 0028     		cmp	r0, #0
 5890 008e F3D1     		bne	.L363
 5891 0090 E9E7     		b	.L359
 5892              	.LVL704:
 5893              	.L367:
 5894              	.LBE592:
3079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5895              		.loc 1 3079 0
 5896 0092 998D     		ldrh	r1, [r3, #44]
 5897 0094 1846     		mov	r0, r3
 5898 0096 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5899              	.LVL705:
 5900 009a ECE7     		b	.L358
 5901              		.cfi_endproc
 5902              	.LFE110:
 5904              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 5905              		.align	1
 5906              		.global	HAL_LIN_SendBreak
 5907              		.syntax unified
 5908              		.thumb
 5909              		.thumb_func
 5910              		.fpu softvfp
 5912              	HAL_LIN_SendBreak:
 5913              	.LFB101:
2751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 5914              		.loc 1 2751 0
 5915              		.cfi_startproc
 5916              		@ args = 0, pretend = 0, frame = 0
 5917              		@ frame_needed = 0, uses_anonymous_args = 0
 5918              		@ link register save eliminated.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 203


 5919              	.LVL706:
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5920              		.loc 1 2756 0
 5921 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 5922 0004 012B     		cmp	r3, #1
 5923 0006 19D0     		beq	.L371
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5924              		.loc 1 2756 0 is_stmt 0 discriminator 2
 5925 0008 0123     		movs	r3, #1
 5926 000a 80F84030 		strb	r3, [r0, #64]
2758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5927              		.loc 1 2758 0 is_stmt 1 discriminator 2
 5928 000e 2423     		movs	r3, #36
 5929 0010 80F84130 		strb	r3, [r0, #65]
 5930              	.L370:
 5931              	.LBB597:
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5932              		.loc 1 2761 0 discriminator 1
 5933 0014 0268     		ldr	r2, [r0]
 5934              	.LVL707:
 5935              	.LBB598:
 5936              	.LBB599:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5937              		.loc 2 1072 0 discriminator 1
 5938 0016 02F10C03 		add	r3, r2, #12
 5939              	.LVL708:
 5940              		.syntax unified
 5941              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5942 001a 53E8003F 		ldrex r3, [r3]
 5943              	@ 0 "" 2
 5944              	.LVL709:
 5945              		.thumb
 5946              		.syntax unified
 5947              	.LBE599:
 5948              	.LBE598:
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5949              		.loc 1 2761 0 discriminator 1
 5950 001e 43F00103 		orr	r3, r3, #1
 5951              	.LVL710:
 5952              	.LBB600:
 5953              	.LBB601:
 5954              		.loc 2 1123 0 discriminator 1
 5955 0022 0C32     		adds	r2, r2, #12
 5956              	.LVL711:
 5957              		.syntax unified
 5958              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5959 0024 42E80031 		strex r1, r3, [r2]
 5960              	@ 0 "" 2
 5961              	.LVL712:
 5962              		.thumb
 5963              		.syntax unified
 5964              	.LBE601:
 5965              	.LBE600:
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5966              		.loc 1 2761 0 discriminator 1
 5967 0028 0029     		cmp	r1, #0
 5968 002a F3D1     		bne	.L370
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 204


 5969              	.LBE597:
2763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5970              		.loc 1 2763 0
 5971 002c 2023     		movs	r3, #32
 5972              	.LVL713:
 5973 002e 80F84130 		strb	r3, [r0, #65]
2766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5974              		.loc 1 2766 0
 5975 0032 0023     		movs	r3, #0
 5976 0034 80F84030 		strb	r3, [r0, #64]
2768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5977              		.loc 1 2768 0
 5978 0038 1846     		mov	r0, r3
 5979              	.LVL714:
 5980 003a 7047     		bx	lr
 5981              	.LVL715:
 5982              	.L371:
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5983              		.loc 1 2756 0
 5984 003c 0220     		movs	r0, #2
 5985              	.LVL716:
2769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 5986              		.loc 1 2769 0
 5987 003e 7047     		bx	lr
 5988              		.cfi_endproc
 5989              	.LFE101:
 5991              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 5992              		.align	1
 5993              		.global	HAL_MultiProcessor_EnterMuteMode
 5994              		.syntax unified
 5995              		.thumb
 5996              		.thumb_func
 5997              		.fpu softvfp
 5999              	HAL_MultiProcessor_EnterMuteMode:
 6000              	.LFB102:
2778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 6001              		.loc 1 2778 0
 6002              		.cfi_startproc
 6003              		@ args = 0, pretend = 0, frame = 0
 6004              		@ frame_needed = 0, uses_anonymous_args = 0
 6005              		@ link register save eliminated.
 6006              	.LVL717:
2783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6007              		.loc 1 2783 0
 6008 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 6009 0004 012B     		cmp	r3, #1
 6010 0006 1AD0     		beq	.L375
2783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6011              		.loc 1 2783 0 is_stmt 0 discriminator 2
 6012 0008 0123     		movs	r3, #1
 6013 000a 80F84030 		strb	r3, [r0, #64]
2785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6014              		.loc 1 2785 0 is_stmt 1 discriminator 2
 6015 000e 2423     		movs	r3, #36
 6016 0010 80F84130 		strb	r3, [r0, #65]
 6017              	.L374:
 6018              	.LBB602:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 205


2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6019              		.loc 1 2788 0 discriminator 1
 6020 0014 0268     		ldr	r2, [r0]
 6021              	.LVL718:
 6022              	.LBB603:
 6023              	.LBB604:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6024              		.loc 2 1072 0 discriminator 1
 6025 0016 02F10C03 		add	r3, r2, #12
 6026              	.LVL719:
 6027              		.syntax unified
 6028              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6029 001a 53E8003F 		ldrex r3, [r3]
 6030              	@ 0 "" 2
 6031              	.LVL720:
 6032              		.thumb
 6033              		.syntax unified
 6034              	.LBE604:
 6035              	.LBE603:
2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6036              		.loc 1 2788 0 discriminator 1
 6037 001e 43F00203 		orr	r3, r3, #2
 6038              	.LVL721:
 6039              	.LBB605:
 6040              	.LBB606:
 6041              		.loc 2 1123 0 discriminator 1
 6042 0022 0C32     		adds	r2, r2, #12
 6043              	.LVL722:
 6044              		.syntax unified
 6045              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6046 0024 42E80031 		strex r1, r3, [r2]
 6047              	@ 0 "" 2
 6048              	.LVL723:
 6049              		.thumb
 6050              		.syntax unified
 6051              	.LBE606:
 6052              	.LBE605:
2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6053              		.loc 1 2788 0 discriminator 1
 6054 0028 0029     		cmp	r1, #0
 6055 002a F3D1     		bne	.L374
 6056              	.LBE602:
2790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 6057              		.loc 1 2790 0
 6058 002c 2023     		movs	r3, #32
 6059              	.LVL724:
 6060 002e 80F84130 		strb	r3, [r0, #65]
2791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6061              		.loc 1 2791 0
 6062 0032 0023     		movs	r3, #0
 6063 0034 4363     		str	r3, [r0, #52]
2794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6064              		.loc 1 2794 0
 6065 0036 80F84030 		strb	r3, [r0, #64]
2796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6066              		.loc 1 2796 0
 6067 003a 1846     		mov	r0, r3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 206


 6068              	.LVL725:
 6069 003c 7047     		bx	lr
 6070              	.LVL726:
 6071              	.L375:
2783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6072              		.loc 1 2783 0
 6073 003e 0220     		movs	r0, #2
 6074              	.LVL727:
2797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6075              		.loc 1 2797 0
 6076 0040 7047     		bx	lr
 6077              		.cfi_endproc
 6078              	.LFE102:
 6080              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 6081              		.align	1
 6082              		.global	HAL_MultiProcessor_ExitMuteMode
 6083              		.syntax unified
 6084              		.thumb
 6085              		.thumb_func
 6086              		.fpu softvfp
 6088              	HAL_MultiProcessor_ExitMuteMode:
 6089              	.LFB103:
2806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 6090              		.loc 1 2806 0
 6091              		.cfi_startproc
 6092              		@ args = 0, pretend = 0, frame = 0
 6093              		@ frame_needed = 0, uses_anonymous_args = 0
 6094              		@ link register save eliminated.
 6095              	.LVL728:
2811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6096              		.loc 1 2811 0
 6097 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 6098 0004 012B     		cmp	r3, #1
 6099 0006 1AD0     		beq	.L379
2811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6100              		.loc 1 2811 0 is_stmt 0 discriminator 2
 6101 0008 0123     		movs	r3, #1
 6102 000a 80F84030 		strb	r3, [r0, #64]
2813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6103              		.loc 1 2813 0 is_stmt 1 discriminator 2
 6104 000e 2423     		movs	r3, #36
 6105 0010 80F84130 		strb	r3, [r0, #65]
 6106              	.L378:
 6107              	.LBB607:
2816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6108              		.loc 1 2816 0 discriminator 1
 6109 0014 0268     		ldr	r2, [r0]
 6110              	.LVL729:
 6111              	.LBB608:
 6112              	.LBB609:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6113              		.loc 2 1072 0 discriminator 1
 6114 0016 02F10C03 		add	r3, r2, #12
 6115              	.LVL730:
 6116              		.syntax unified
 6117              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6118 001a 53E8003F 		ldrex r3, [r3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 207


 6119              	@ 0 "" 2
 6120              	.LVL731:
 6121              		.thumb
 6122              		.syntax unified
 6123              	.LBE609:
 6124              	.LBE608:
2816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6125              		.loc 1 2816 0 discriminator 1
 6126 001e 23F00203 		bic	r3, r3, #2
 6127              	.LVL732:
 6128              	.LBB610:
 6129              	.LBB611:
 6130              		.loc 2 1123 0 discriminator 1
 6131 0022 0C32     		adds	r2, r2, #12
 6132              	.LVL733:
 6133              		.syntax unified
 6134              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6135 0024 42E80031 		strex r1, r3, [r2]
 6136              	@ 0 "" 2
 6137              	.LVL734:
 6138              		.thumb
 6139              		.syntax unified
 6140              	.LBE611:
 6141              	.LBE610:
2816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6142              		.loc 1 2816 0 discriminator 1
 6143 0028 0029     		cmp	r1, #0
 6144 002a F3D1     		bne	.L378
 6145              	.LBE607:
2818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 6146              		.loc 1 2818 0
 6147 002c 2023     		movs	r3, #32
 6148              	.LVL735:
 6149 002e 80F84130 		strb	r3, [r0, #65]
2819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6150              		.loc 1 2819 0
 6151 0032 0023     		movs	r3, #0
 6152 0034 4363     		str	r3, [r0, #52]
2822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6153              		.loc 1 2822 0
 6154 0036 80F84030 		strb	r3, [r0, #64]
2824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6155              		.loc 1 2824 0
 6156 003a 1846     		mov	r0, r3
 6157              	.LVL736:
 6158 003c 7047     		bx	lr
 6159              	.LVL737:
 6160              	.L379:
2811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6161              		.loc 1 2811 0
 6162 003e 0220     		movs	r0, #2
 6163              	.LVL738:
2825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6164              		.loc 1 2825 0
 6165 0040 7047     		bx	lr
 6166              		.cfi_endproc
 6167              	.LFE103:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 208


 6169              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 6170              		.align	1
 6171              		.global	HAL_HalfDuplex_EnableTransmitter
 6172              		.syntax unified
 6173              		.thumb
 6174              		.thumb_func
 6175              		.fpu softvfp
 6177              	HAL_HalfDuplex_EnableTransmitter:
 6178              	.LFB104:
2834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6179              		.loc 1 2834 0
 6180              		.cfi_startproc
 6181              		@ args = 0, pretend = 0, frame = 0
 6182              		@ frame_needed = 0, uses_anonymous_args = 0
 6183              		@ link register save eliminated.
 6184              	.LVL739:
2838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6185              		.loc 1 2838 0
 6186 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 6187 0004 012B     		cmp	r3, #1
 6188 0006 14D0     		beq	.L382
2838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6189              		.loc 1 2838 0 is_stmt 0 discriminator 2
 6190 0008 0123     		movs	r3, #1
 6191 000a 80F84030 		strb	r3, [r0, #64]
2840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6192              		.loc 1 2840 0 is_stmt 1 discriminator 2
 6193 000e 2423     		movs	r3, #36
 6194 0010 80F84130 		strb	r3, [r0, #65]
2843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6195              		.loc 1 2843 0 discriminator 2
 6196 0014 0268     		ldr	r2, [r0]
 6197 0016 D368     		ldr	r3, [r2, #12]
 6198              	.LVL740:
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6199              		.loc 1 2846 0 discriminator 2
 6200 0018 23F00C03 		bic	r3, r3, #12
 6201              	.LVL741:
2849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6202              		.loc 1 2849 0 discriminator 2
 6203 001c 43F00803 		orr	r3, r3, #8
 6204              	.LVL742:
2852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6205              		.loc 1 2852 0 discriminator 2
 6206 0020 D360     		str	r3, [r2, #12]
2854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6207              		.loc 1 2854 0 discriminator 2
 6208 0022 2023     		movs	r3, #32
 6209              	.LVL743:
 6210 0024 80F84130 		strb	r3, [r0, #65]
 6211              	.LVL744:
2857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6212              		.loc 1 2857 0 discriminator 2
 6213 0028 0023     		movs	r3, #0
 6214 002a 80F84030 		strb	r3, [r0, #64]
2859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6215              		.loc 1 2859 0 discriminator 2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 209


 6216 002e 1846     		mov	r0, r3
 6217              	.LVL745:
 6218 0030 7047     		bx	lr
 6219              	.LVL746:
 6220              	.L382:
2838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6221              		.loc 1 2838 0
 6222 0032 0220     		movs	r0, #2
 6223              	.LVL747:
2860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6224              		.loc 1 2860 0
 6225 0034 7047     		bx	lr
 6226              		.cfi_endproc
 6227              	.LFE104:
 6229              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 6230              		.align	1
 6231              		.global	HAL_HalfDuplex_EnableReceiver
 6232              		.syntax unified
 6233              		.thumb
 6234              		.thumb_func
 6235              		.fpu softvfp
 6237              	HAL_HalfDuplex_EnableReceiver:
 6238              	.LFB105:
2869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6239              		.loc 1 2869 0
 6240              		.cfi_startproc
 6241              		@ args = 0, pretend = 0, frame = 0
 6242              		@ frame_needed = 0, uses_anonymous_args = 0
 6243              		@ link register save eliminated.
 6244              	.LVL748:
2873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6245              		.loc 1 2873 0
 6246 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 6247 0004 012B     		cmp	r3, #1
 6248 0006 14D0     		beq	.L385
2873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6249              		.loc 1 2873 0 is_stmt 0 discriminator 2
 6250 0008 0123     		movs	r3, #1
 6251 000a 80F84030 		strb	r3, [r0, #64]
2875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6252              		.loc 1 2875 0 is_stmt 1 discriminator 2
 6253 000e 2423     		movs	r3, #36
 6254 0010 80F84130 		strb	r3, [r0, #65]
2878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6255              		.loc 1 2878 0 discriminator 2
 6256 0014 0268     		ldr	r2, [r0]
 6257 0016 D368     		ldr	r3, [r2, #12]
 6258              	.LVL749:
2881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6259              		.loc 1 2881 0 discriminator 2
 6260 0018 23F00C03 		bic	r3, r3, #12
 6261              	.LVL750:
2884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6262              		.loc 1 2884 0 discriminator 2
 6263 001c 43F00403 		orr	r3, r3, #4
 6264              	.LVL751:
2887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 210


 6265              		.loc 1 2887 0 discriminator 2
 6266 0020 D360     		str	r3, [r2, #12]
2889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6267              		.loc 1 2889 0 discriminator 2
 6268 0022 2023     		movs	r3, #32
 6269              	.LVL752:
 6270 0024 80F84130 		strb	r3, [r0, #65]
 6271              	.LVL753:
2892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6272              		.loc 1 2892 0 discriminator 2
 6273 0028 0023     		movs	r3, #0
 6274 002a 80F84030 		strb	r3, [r0, #64]
2894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6275              		.loc 1 2894 0 discriminator 2
 6276 002e 1846     		mov	r0, r3
 6277              	.LVL754:
 6278 0030 7047     		bx	lr
 6279              	.LVL755:
 6280              	.L385:
2873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6281              		.loc 1 2873 0
 6282 0032 0220     		movs	r0, #2
 6283              	.LVL756:
2895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6284              		.loc 1 2895 0
 6285 0034 7047     		bx	lr
 6286              		.cfi_endproc
 6287              	.LFE105:
 6289              		.section	.text.HAL_UART_GetState,"ax",%progbits
 6290              		.align	1
 6291              		.global	HAL_UART_GetState
 6292              		.syntax unified
 6293              		.thumb
 6294              		.thumb_func
 6295              		.fpu softvfp
 6297              	HAL_UART_GetState:
 6298              	.LFB106:
2926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 6299              		.loc 1 2926 0
 6300              		.cfi_startproc
 6301              		@ args = 0, pretend = 0, frame = 0
 6302              		@ frame_needed = 0, uses_anonymous_args = 0
 6303              		@ link register save eliminated.
 6304              	.LVL757:
2928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
 6305              		.loc 1 2928 0
 6306 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6307              	.LVL758:
2929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6308              		.loc 1 2929 0
 6309 0004 90F84200 		ldrb	r0, [r0, #66]	@ zero_extendqisi2
 6310              	.LVL759:
2932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6311              		.loc 1 2932 0
 6312 0008 1843     		orrs	r0, r0, r3
 6313              	.LVL760:
 6314 000a 7047     		bx	lr
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 211


 6315              		.cfi_endproc
 6316              	.LFE106:
 6318              		.section	.text.HAL_UART_GetError,"ax",%progbits
 6319              		.align	1
 6320              		.global	HAL_UART_GetError
 6321              		.syntax unified
 6322              		.thumb
 6323              		.thumb_func
 6324              		.fpu softvfp
 6326              	HAL_UART_GetError:
 6327              	.LFB107:
2941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
 6328              		.loc 1 2941 0
 6329              		.cfi_startproc
 6330              		@ args = 0, pretend = 0, frame = 0
 6331              		@ frame_needed = 0, uses_anonymous_args = 0
 6332              		@ link register save eliminated.
 6333              	.LVL761:
2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6334              		.loc 1 2942 0
 6335 0000 406C     		ldr	r0, [r0, #68]
 6336              	.LVL762:
2943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6337              		.loc 1 2943 0
 6338 0002 7047     		bx	lr
 6339              		.cfi_endproc
 6340              	.LFE107:
 6342              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 6343              		.align	1
 6344              		.global	UART_Start_Receive_IT
 6345              		.syntax unified
 6346              		.thumb
 6347              		.thumb_func
 6348              		.fpu softvfp
 6350              	UART_Start_Receive_IT:
 6351              	.LFB114:
3222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 6352              		.loc 1 3222 0
 6353              		.cfi_startproc
 6354              		@ args = 0, pretend = 0, frame = 0
 6355              		@ frame_needed = 0, uses_anonymous_args = 0
 6356              		@ link register save eliminated.
 6357              	.LVL763:
3223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferSize = Size;
 6358              		.loc 1 3223 0
 6359 0000 8162     		str	r1, [r0, #40]
3224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = Size;
 6360              		.loc 1 3224 0
 6361 0002 8285     		strh	r2, [r0, #44]	@ movhi
3225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6362              		.loc 1 3225 0
 6363 0004 C285     		strh	r2, [r0, #46]	@ movhi
3227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 6364              		.loc 1 3227 0
 6365 0006 0023     		movs	r3, #0
 6366 0008 4364     		str	r3, [r0, #68]
3228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 212


 6367              		.loc 1 3228 0
 6368 000a 2223     		movs	r3, #34
 6369 000c 80F84230 		strb	r3, [r0, #66]
3230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 6370              		.loc 1 3230 0
 6371 0010 0369     		ldr	r3, [r0, #16]
 6372 0012 23B1     		cbz	r3, .L389
3233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 6373              		.loc 1 3233 0
 6374 0014 0268     		ldr	r2, [r0]
 6375              	.LVL764:
 6376 0016 D368     		ldr	r3, [r2, #12]
 6377 0018 43F48073 		orr	r3, r3, #256
 6378 001c D360     		str	r3, [r2, #12]
 6379              	.LVL765:
 6380              	.L389:
3237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6381              		.loc 1 3237 0
 6382 001e 0268     		ldr	r2, [r0]
 6383 0020 5369     		ldr	r3, [r2, #20]
 6384 0022 43F00103 		orr	r3, r3, #1
 6385 0026 5361     		str	r3, [r2, #20]
3240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6386              		.loc 1 3240 0
 6387 0028 0268     		ldr	r2, [r0]
 6388 002a D368     		ldr	r3, [r2, #12]
 6389 002c 43F02003 		orr	r3, r3, #32
 6390 0030 D360     		str	r3, [r2, #12]
3243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6391              		.loc 1 3243 0
 6392 0032 0020     		movs	r0, #0
 6393              	.LVL766:
 6394 0034 7047     		bx	lr
 6395              		.cfi_endproc
 6396              	.LFE114:
 6398              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 6399              		.align	1
 6400              		.global	HAL_UART_Receive_IT
 6401              		.syntax unified
 6402              		.thumb
 6403              		.thumb_func
 6404              		.fpu softvfp
 6406              	HAL_UART_Receive_IT:
 6407              	.LFB75:
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 6408              		.loc 1 1345 0
 6409              		.cfi_startproc
 6410              		@ args = 0, pretend = 0, frame = 0
 6411              		@ frame_needed = 0, uses_anonymous_args = 0
 6412              	.LVL767:
 6413 0000 08B5     		push	{r3, lr}
 6414              	.LCFI55:
 6415              		.cfi_def_cfa_offset 8
 6416              		.cfi_offset 3, -8
 6417              		.cfi_offset 14, -4
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 6418              		.loc 1 1347 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 213


 6419 0002 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 6420 0006 DBB2     		uxtb	r3, r3
 6421 0008 202B     		cmp	r3, #32
 6422 000a 08D1     		bne	.L392
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 6423              		.loc 1 1349 0
 6424 000c 49B1     		cbz	r1, .L393
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 6425              		.loc 1 1349 0 is_stmt 0 discriminator 1
 6426 000e 0AB9     		cbnz	r2, .L396
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 6427              		.loc 1 1351 0 is_stmt 1
 6428 0010 0120     		movs	r0, #1
 6429              	.LVL768:
 6430 0012 05E0     		b	.L391
 6431              	.LVL769:
 6432              	.L396:
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6433              		.loc 1 1355 0
 6434 0014 0023     		movs	r3, #0
 6435 0016 0363     		str	r3, [r0, #48]
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 6436              		.loc 1 1357 0
 6437 0018 FFF7FEFF 		bl	UART_Start_Receive_IT
 6438              	.LVL770:
 6439 001c 00E0     		b	.L391
 6440              	.LVL771:
 6441              	.L392:
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 6442              		.loc 1 1361 0
 6443 001e 0220     		movs	r0, #2
 6444              	.LVL772:
 6445              	.L391:
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6446              		.loc 1 1363 0
 6447 0020 08BD     		pop	{r3, pc}
 6448              	.LVL773:
 6449              	.L393:
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 6450              		.loc 1 1351 0
 6451 0022 0120     		movs	r0, #1
 6452              	.LVL774:
 6453 0024 FCE7     		b	.L391
 6454              		.cfi_endproc
 6455              	.LFE75:
 6457              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 6458              		.align	1
 6459              		.global	HAL_UARTEx_ReceiveToIdle_IT
 6460              		.syntax unified
 6461              		.thumb
 6462              		.thumb_func
 6463              		.fpu softvfp
 6465              	HAL_UARTEx_ReceiveToIdle_IT:
 6466              	.LFB82:
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status;
 6467              		.loc 1 1711 0
 6468              		.cfi_startproc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 214


 6469              		@ args = 0, pretend = 0, frame = 8
 6470              		@ frame_needed = 0, uses_anonymous_args = 0
 6471              	.LVL775:
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 6472              		.loc 1 1715 0
 6473 0000 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 6474 0004 DBB2     		uxtb	r3, r3
 6475 0006 202B     		cmp	r3, #32
 6476 0008 2AD1     		bne	.L400
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 6477              		.loc 1 1717 0
 6478 000a 61B3     		cbz	r1, .L401
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 6479              		.loc 1 1717 0 is_stmt 0 discriminator 1
 6480 000c 0AB9     		cbnz	r2, .L408
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 6481              		.loc 1 1719 0 is_stmt 1
 6482 000e 0123     		movs	r3, #1
 6483 0010 27E0     		b	.L405
 6484              	.L408:
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status;
 6485              		.loc 1 1711 0
 6486 0012 10B5     		push	{r4, lr}
 6487              	.LCFI56:
 6488              		.cfi_def_cfa_offset 8
 6489              		.cfi_offset 4, -8
 6490              		.cfi_offset 14, -4
 6491 0014 82B0     		sub	sp, sp, #8
 6492              	.LCFI57:
 6493              		.cfi_def_cfa_offset 16
 6494 0016 0446     		mov	r4, r0
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 6495              		.loc 1 1723 0
 6496 0018 0123     		movs	r3, #1
 6497 001a 0363     		str	r3, [r0, #48]
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6498              		.loc 1 1724 0
 6499 001c 0023     		movs	r3, #0
 6500 001e 4363     		str	r3, [r0, #52]
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6501              		.loc 1 1726 0
 6502 0020 FFF7FEFF 		bl	UART_Start_Receive_IT
 6503              	.LVL776:
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 6504              		.loc 1 1729 0
 6505 0024 0346     		mov	r3, r0
 6506 0026 18B9     		cbnz	r0, .L398
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 6507              		.loc 1 1731 0
 6508 0028 226B     		ldr	r2, [r4, #48]
 6509 002a 012A     		cmp	r2, #1
 6510 002c 03D0     		beq	.L409
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 6511              		.loc 1 1742 0
 6512 002e 0123     		movs	r3, #1
 6513              	.LVL777:
 6514              	.L398:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 215


1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6515              		.loc 1 1752 0
 6516 0030 1846     		mov	r0, r3
 6517 0032 02B0     		add	sp, sp, #8
 6518              	.LCFI58:
 6519              		.cfi_remember_state
 6520              		.cfi_def_cfa_offset 8
 6521              		@ sp needed
 6522 0034 10BD     		pop	{r4, pc}
 6523              	.LVL778:
 6524              	.L409:
 6525              	.LCFI59:
 6526              		.cfi_restore_state
 6527              	.LBB612:
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6528              		.loc 1 1733 0
 6529 0036 0022     		movs	r2, #0
 6530 0038 0192     		str	r2, [sp, #4]
 6531 003a 2268     		ldr	r2, [r4]
 6532 003c 1168     		ldr	r1, [r2]
 6533 003e 0191     		str	r1, [sp, #4]
 6534 0040 5268     		ldr	r2, [r2, #4]
 6535 0042 0192     		str	r2, [sp, #4]
 6536 0044 019A     		ldr	r2, [sp, #4]
 6537              	.LVL779:
 6538              	.L399:
 6539              	.LBE612:
 6540              	.LBB613:
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 6541              		.loc 1 1734 0 discriminator 1
 6542 0046 2168     		ldr	r1, [r4]
 6543              	.LVL780:
 6544              	.LBB614:
 6545              	.LBB615:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6546              		.loc 2 1072 0 discriminator 1
 6547 0048 01F10C02 		add	r2, r1, #12
 6548              	.LVL781:
 6549              		.syntax unified
 6550              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6551 004c 52E8002F 		ldrex r2, [r2]
 6552              	@ 0 "" 2
 6553              	.LVL782:
 6554              		.thumb
 6555              		.syntax unified
 6556              	.LBE615:
 6557              	.LBE614:
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 6558              		.loc 1 1734 0 discriminator 1
 6559 0050 42F01002 		orr	r2, r2, #16
 6560              	.LVL783:
 6561              	.LBB616:
 6562              	.LBB617:
 6563              		.loc 2 1123 0 discriminator 1
 6564 0054 0C31     		adds	r1, r1, #12
 6565              	.LVL784:
 6566              		.syntax unified
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 216


 6567              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6568 0056 41E80020 		strex r0, r2, [r1]
 6569              	@ 0 "" 2
 6570              	.LVL785:
 6571              		.thumb
 6572              		.syntax unified
 6573              	.LBE617:
 6574              	.LBE616:
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 6575              		.loc 1 1734 0 discriminator 1
 6576 005a 0028     		cmp	r0, #0
 6577 005c F3D1     		bne	.L399
 6578 005e E7E7     		b	.L398
 6579              	.LVL786:
 6580              	.L400:
 6581              	.LCFI60:
 6582              		.cfi_def_cfa_offset 0
 6583              		.cfi_restore 4
 6584              		.cfi_restore 14
 6585              	.LBE613:
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 6586              		.loc 1 1750 0
 6587 0060 0223     		movs	r3, #2
 6588              	.L405:
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6589              		.loc 1 1752 0
 6590 0062 1846     		mov	r0, r3
 6591              	.LVL787:
 6592 0064 7047     		bx	lr
 6593              	.LVL788:
 6594              	.L401:
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 6595              		.loc 1 1719 0
 6596 0066 0123     		movs	r3, #1
 6597 0068 FBE7     		b	.L405
 6598              		.cfi_endproc
 6599              	.LFE82:
 6601              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 6602              		.align	1
 6603              		.global	UART_Start_Receive_DMA
 6604              		.syntax unified
 6605              		.thumb
 6606              		.thumb_func
 6607              		.fpu softvfp
 6609              	UART_Start_Receive_DMA:
 6610              	.LFB115:
3257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 6611              		.loc 1 3257 0
 6612              		.cfi_startproc
 6613              		@ args = 0, pretend = 0, frame = 8
 6614              		@ frame_needed = 0, uses_anonymous_args = 0
 6615              	.LVL789:
 6616 0000 30B5     		push	{r4, r5, lr}
 6617              	.LCFI61:
 6618              		.cfi_def_cfa_offset 12
 6619              		.cfi_offset 4, -12
 6620              		.cfi_offset 5, -8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 217


 6621              		.cfi_offset 14, -4
 6622 0002 83B0     		sub	sp, sp, #12
 6623              	.LCFI62:
 6624              		.cfi_def_cfa_offset 24
 6625 0004 0446     		mov	r4, r0
 6626 0006 1346     		mov	r3, r2
3260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferSize = Size;
 6627              		.loc 1 3260 0
 6628 0008 8162     		str	r1, [r0, #40]
3261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6629              		.loc 1 3261 0
 6630 000a 8285     		strh	r2, [r0, #44]	@ movhi
3263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 6631              		.loc 1 3263 0
 6632 000c 0025     		movs	r5, #0
 6633 000e 4564     		str	r5, [r0, #68]
3264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6634              		.loc 1 3264 0
 6635 0010 2222     		movs	r2, #34
 6636              	.LVL790:
 6637 0012 80F84220 		strb	r2, [r0, #66]
3267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6638              		.loc 1 3267 0
 6639 0016 C26B     		ldr	r2, [r0, #60]
 6640 0018 1F48     		ldr	r0, .L416
 6641              	.LVL791:
 6642 001a 9062     		str	r0, [r2, #40]
 6643              	.LVL792:
3270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6644              		.loc 1 3270 0
 6645 001c E26B     		ldr	r2, [r4, #60]
 6646 001e 1F48     		ldr	r0, .L416+4
 6647 0020 D062     		str	r0, [r2, #44]
3273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6648              		.loc 1 3273 0
 6649 0022 E26B     		ldr	r2, [r4, #60]
 6650 0024 1E48     		ldr	r0, .L416+8
 6651 0026 1063     		str	r0, [r2, #48]
3276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6652              		.loc 1 3276 0
 6653 0028 E26B     		ldr	r2, [r4, #60]
 6654 002a 5563     		str	r5, [r2, #52]
 6655              	.LVL793:
3280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6656              		.loc 1 3280 0
 6657 002c 2068     		ldr	r0, [r4]
 6658 002e 0A46     		mov	r2, r1
 6659 0030 011D     		adds	r1, r0, #4
 6660              	.LVL794:
 6661 0032 E06B     		ldr	r0, [r4, #60]
 6662 0034 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6663              	.LVL795:
 6664              	.LBB618:
3283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6665              		.loc 1 3283 0
 6666 0038 0195     		str	r5, [sp, #4]
 6667 003a 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 218


 6668 003c 1A68     		ldr	r2, [r3]
 6669 003e 0192     		str	r2, [sp, #4]
 6670 0040 5B68     		ldr	r3, [r3, #4]
 6671 0042 0193     		str	r3, [sp, #4]
 6672 0044 019B     		ldr	r3, [sp, #4]
 6673              	.LBE618:
3285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 6674              		.loc 1 3285 0
 6675 0046 2369     		ldr	r3, [r4, #16]
 6676 0048 5BB1     		cbz	r3, .L413
 6677              	.L412:
 6678              	.LBB619:
3288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 6679              		.loc 1 3288 0 discriminator 1
 6680 004a 2268     		ldr	r2, [r4]
 6681              	.LVL796:
 6682              	.LBB620:
 6683              	.LBB621:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6684              		.loc 2 1072 0 discriminator 1
 6685 004c 02F10C03 		add	r3, r2, #12
 6686              	.LVL797:
 6687              		.syntax unified
 6688              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6689 0050 53E8003F 		ldrex r3, [r3]
 6690              	@ 0 "" 2
 6691              	.LVL798:
 6692              		.thumb
 6693              		.syntax unified
 6694              	.LBE621:
 6695              	.LBE620:
3288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 6696              		.loc 1 3288 0 discriminator 1
 6697 0054 43F48073 		orr	r3, r3, #256
 6698              	.LVL799:
 6699              	.LBB622:
 6700              	.LBB623:
 6701              		.loc 2 1123 0 discriminator 1
 6702 0058 0C32     		adds	r2, r2, #12
 6703              	.LVL800:
 6704              		.syntax unified
 6705              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6706 005a 42E80031 		strex r1, r3, [r2]
 6707              	@ 0 "" 2
 6708              	.LVL801:
 6709              		.thumb
 6710              		.syntax unified
 6711              	.LBE623:
 6712              	.LBE622:
3288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 6713              		.loc 1 3288 0 discriminator 1
 6714 005e 0029     		cmp	r1, #0
 6715 0060 F3D1     		bne	.L412
 6716              	.LVL802:
 6717              	.L413:
 6718              	.LBE619:
 6719              	.LBB624:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 219


3292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6720              		.loc 1 3292 0 discriminator 1
 6721 0062 2268     		ldr	r2, [r4]
 6722              	.LVL803:
 6723              	.LBB625:
 6724              	.LBB626:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6725              		.loc 2 1072 0 discriminator 1
 6726 0064 02F11403 		add	r3, r2, #20
 6727              	.LVL804:
 6728              		.syntax unified
 6729              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6730 0068 53E8003F 		ldrex r3, [r3]
 6731              	@ 0 "" 2
 6732              	.LVL805:
 6733              		.thumb
 6734              		.syntax unified
 6735              	.LBE626:
 6736              	.LBE625:
3292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6737              		.loc 1 3292 0 discriminator 1
 6738 006c 43F00103 		orr	r3, r3, #1
 6739              	.LVL806:
 6740              	.LBB627:
 6741              	.LBB628:
 6742              		.loc 2 1123 0 discriminator 1
 6743 0070 1432     		adds	r2, r2, #20
 6744              	.LVL807:
 6745              		.syntax unified
 6746              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6747 0072 42E80031 		strex r1, r3, [r2]
 6748              	@ 0 "" 2
 6749              	.LVL808:
 6750              		.thumb
 6751              		.syntax unified
 6752              	.LBE628:
 6753              	.LBE627:
3292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6754              		.loc 1 3292 0 discriminator 1
 6755 0076 0029     		cmp	r1, #0
 6756 0078 F3D1     		bne	.L413
 6757              	.LVL809:
 6758              	.L414:
 6759              	.LBE624:
 6760              	.LBB629:
3296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6761              		.loc 1 3296 0 discriminator 1
 6762 007a 2268     		ldr	r2, [r4]
 6763              	.LVL810:
 6764              	.LBB630:
 6765              	.LBB631:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6766              		.loc 2 1072 0 discriminator 1
 6767 007c 02F11403 		add	r3, r2, #20
 6768              	.LVL811:
 6769              		.syntax unified
 6770              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 220


 6771 0080 53E8003F 		ldrex r3, [r3]
 6772              	@ 0 "" 2
 6773              	.LVL812:
 6774              		.thumb
 6775              		.syntax unified
 6776              	.LBE631:
 6777              	.LBE630:
3296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6778              		.loc 1 3296 0 discriminator 1
 6779 0084 43F04003 		orr	r3, r3, #64
 6780              	.LVL813:
 6781              	.LBB632:
 6782              	.LBB633:
 6783              		.loc 2 1123 0 discriminator 1
 6784 0088 1432     		adds	r2, r2, #20
 6785              	.LVL814:
 6786              		.syntax unified
 6787              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6788 008a 42E80031 		strex r1, r3, [r2]
 6789              	@ 0 "" 2
 6790              	.LVL815:
 6791              		.thumb
 6792              		.syntax unified
 6793              	.LBE633:
 6794              	.LBE632:
3296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6795              		.loc 1 3296 0 discriminator 1
 6796 008e 0029     		cmp	r1, #0
 6797 0090 F3D1     		bne	.L414
 6798              	.LBE629:
3299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6799              		.loc 1 3299 0
 6800 0092 0020     		movs	r0, #0
 6801 0094 03B0     		add	sp, sp, #12
 6802              	.LCFI63:
 6803              		.cfi_def_cfa_offset 12
 6804              		@ sp needed
 6805 0096 30BD     		pop	{r4, r5, pc}
 6806              	.LVL816:
 6807              	.L417:
 6808              		.align	2
 6809              	.L416:
 6810 0098 00000000 		.word	UART_DMAReceiveCplt
 6811 009c 00000000 		.word	UART_DMARxHalfCplt
 6812 00a0 00000000 		.word	UART_DMAError
 6813              		.cfi_endproc
 6814              	.LFE115:
 6816              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 6817              		.align	1
 6818              		.global	HAL_UART_Receive_DMA
 6819              		.syntax unified
 6820              		.thumb
 6821              		.thumb_func
 6822              		.fpu softvfp
 6824              	HAL_UART_Receive_DMA:
 6825              	.LFB77:
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 221


 6826              		.loc 1 1439 0
 6827              		.cfi_startproc
 6828              		@ args = 0, pretend = 0, frame = 0
 6829              		@ frame_needed = 0, uses_anonymous_args = 0
 6830              	.LVL817:
 6831 0000 08B5     		push	{r3, lr}
 6832              	.LCFI64:
 6833              		.cfi_def_cfa_offset 8
 6834              		.cfi_offset 3, -8
 6835              		.cfi_offset 14, -4
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 6836              		.loc 1 1441 0
 6837 0002 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 6838 0006 DBB2     		uxtb	r3, r3
 6839 0008 202B     		cmp	r3, #32
 6840 000a 08D1     		bne	.L420
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 6841              		.loc 1 1443 0
 6842 000c 49B1     		cbz	r1, .L421
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 6843              		.loc 1 1443 0 is_stmt 0 discriminator 1
 6844 000e 0AB9     		cbnz	r2, .L424
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 6845              		.loc 1 1445 0 is_stmt 1
 6846 0010 0120     		movs	r0, #1
 6847              	.LVL818:
 6848 0012 05E0     		b	.L419
 6849              	.LVL819:
 6850              	.L424:
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6851              		.loc 1 1449 0
 6852 0014 0023     		movs	r3, #0
 6853 0016 0363     		str	r3, [r0, #48]
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 6854              		.loc 1 1451 0
 6855 0018 FFF7FEFF 		bl	UART_Start_Receive_DMA
 6856              	.LVL820:
 6857 001c 00E0     		b	.L419
 6858              	.LVL821:
 6859              	.L420:
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 6860              		.loc 1 1455 0
 6861 001e 0220     		movs	r0, #2
 6862              	.LVL822:
 6863              	.L419:
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6864              		.loc 1 1457 0
 6865 0020 08BD     		pop	{r3, pc}
 6866              	.LVL823:
 6867              	.L421:
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 6868              		.loc 1 1445 0
 6869 0022 0120     		movs	r0, #1
 6870              	.LVL824:
 6871 0024 FCE7     		b	.L419
 6872              		.cfi_endproc
 6873              	.LFE77:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 222


 6875              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 6876              		.align	1
 6877              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 6878              		.syntax unified
 6879              		.thumb
 6880              		.thumb_func
 6881              		.fpu softvfp
 6883              	HAL_UARTEx_ReceiveToIdle_DMA:
 6884              	.LFB83:
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status;
 6885              		.loc 1 1771 0
 6886              		.cfi_startproc
 6887              		@ args = 0, pretend = 0, frame = 8
 6888              		@ frame_needed = 0, uses_anonymous_args = 0
 6889              	.LVL825:
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 6890              		.loc 1 1775 0
 6891 0000 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 6892 0004 DBB2     		uxtb	r3, r3
 6893 0006 202B     		cmp	r3, #32
 6894 0008 2AD1     		bne	.L428
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 6895              		.loc 1 1777 0
 6896 000a 61B3     		cbz	r1, .L429
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 6897              		.loc 1 1777 0 is_stmt 0 discriminator 1
 6898 000c 0AB9     		cbnz	r2, .L436
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 6899              		.loc 1 1779 0 is_stmt 1
 6900 000e 0123     		movs	r3, #1
 6901 0010 27E0     		b	.L433
 6902              	.L436:
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status;
 6903              		.loc 1 1771 0
 6904 0012 10B5     		push	{r4, lr}
 6905              	.LCFI65:
 6906              		.cfi_def_cfa_offset 8
 6907              		.cfi_offset 4, -8
 6908              		.cfi_offset 14, -4
 6909 0014 82B0     		sub	sp, sp, #8
 6910              	.LCFI66:
 6911              		.cfi_def_cfa_offset 16
 6912 0016 0446     		mov	r4, r0
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 6913              		.loc 1 1783 0
 6914 0018 0123     		movs	r3, #1
 6915 001a 0363     		str	r3, [r0, #48]
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6916              		.loc 1 1784 0
 6917 001c 0023     		movs	r3, #0
 6918 001e 4363     		str	r3, [r0, #52]
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6919              		.loc 1 1786 0
 6920 0020 FFF7FEFF 		bl	UART_Start_Receive_DMA
 6921              	.LVL826:
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 6922              		.loc 1 1789 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 223


 6923 0024 0346     		mov	r3, r0
 6924 0026 18B9     		cbnz	r0, .L426
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 6925              		.loc 1 1791 0
 6926 0028 226B     		ldr	r2, [r4, #48]
 6927 002a 012A     		cmp	r2, #1
 6928 002c 03D0     		beq	.L437
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 6929              		.loc 1 1802 0
 6930 002e 0123     		movs	r3, #1
 6931              	.LVL827:
 6932              	.L426:
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 6933              		.loc 1 1812 0
 6934 0030 1846     		mov	r0, r3
 6935 0032 02B0     		add	sp, sp, #8
 6936              	.LCFI67:
 6937              		.cfi_remember_state
 6938              		.cfi_def_cfa_offset 8
 6939              		@ sp needed
 6940 0034 10BD     		pop	{r4, pc}
 6941              	.LVL828:
 6942              	.L437:
 6943              	.LCFI68:
 6944              		.cfi_restore_state
 6945              	.LBB634:
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6946              		.loc 1 1793 0
 6947 0036 0022     		movs	r2, #0
 6948 0038 0192     		str	r2, [sp, #4]
 6949 003a 2268     		ldr	r2, [r4]
 6950 003c 1168     		ldr	r1, [r2]
 6951 003e 0191     		str	r1, [sp, #4]
 6952 0040 5268     		ldr	r2, [r2, #4]
 6953 0042 0192     		str	r2, [sp, #4]
 6954 0044 019A     		ldr	r2, [sp, #4]
 6955              	.LVL829:
 6956              	.L427:
 6957              	.LBE634:
 6958              	.LBB635:
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 6959              		.loc 1 1794 0 discriminator 1
 6960 0046 2168     		ldr	r1, [r4]
 6961              	.LVL830:
 6962              	.LBB636:
 6963              	.LBB637:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6964              		.loc 2 1072 0 discriminator 1
 6965 0048 01F10C02 		add	r2, r1, #12
 6966              	.LVL831:
 6967              		.syntax unified
 6968              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6969 004c 52E8002F 		ldrex r2, [r2]
 6970              	@ 0 "" 2
 6971              	.LVL832:
 6972              		.thumb
 6973              		.syntax unified
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 224


 6974              	.LBE637:
 6975              	.LBE636:
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 6976              		.loc 1 1794 0 discriminator 1
 6977 0050 42F01002 		orr	r2, r2, #16
 6978              	.LVL833:
 6979              	.LBB638:
 6980              	.LBB639:
 6981              		.loc 2 1123 0 discriminator 1
 6982 0054 0C31     		adds	r1, r1, #12
 6983              	.LVL834:
 6984              		.syntax unified
 6985              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6986 0056 41E80020 		strex r0, r2, [r1]
 6987              	@ 0 "" 2
 6988              	.LVL835:
 6989              		.thumb
 6990              		.syntax unified
 6991              	.LBE639:
 6992              	.LBE638:
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 6993              		.loc 1 1794 0 discriminator 1
 6994 005a 0028     		cmp	r0, #0
 6995 005c F3D1     		bne	.L427
 6996 005e E7E7     		b	.L426
 6997              	.LVL836:
 6998              	.L428:
 6999              	.LCFI69:
 7000              		.cfi_def_cfa_offset 0
 7001              		.cfi_restore 4
 7002              		.cfi_restore 14
 7003              	.LBE635:
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 7004              		.loc 1 1810 0
 7005 0060 0223     		movs	r3, #2
 7006              	.L433:
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 7007              		.loc 1 1812 0
 7008 0062 1846     		mov	r0, r3
 7009              	.LVL837:
 7010 0064 7047     		bx	lr
 7011              	.LVL838:
 7012              	.L429:
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 7013              		.loc 1 1779 0
 7014 0066 0123     		movs	r3, #1
 7015 0068 FBE7     		b	.L433
 7016              		.cfi_endproc
 7017              	.LFE83:
 7019              		.text
 7020              	.Letext0:
 7021              		.file 3 "c:\\program files (x86)\\gnu_tools_arm_embedded\\7_2017-q4-major\\arm-none-eabi\\include\
 7022              		.file 4 "c:\\program files (x86)\\gnu_tools_arm_embedded\\7_2017-q4-major\\arm-none-eabi\\include\
 7023              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 7024              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 7025              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 7026              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 225


 7027              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 7028              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 7029              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 7030              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 7031              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 226


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_uart.c
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:16     .text.UART_EndTxTransfer:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:22     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:82     .text.UART_EndRxTransfer:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:88     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:236    .text.UART_Transmit_IT:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:242    .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:325    .text.UART_SetConfig:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:331    .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:417    .text.UART_SetConfig:00000088 $d
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:423    .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:429    .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:575    .text.HAL_UART_MspInit:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:582    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:596    .text.HAL_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:603    .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:686    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:693    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:782    .text.HAL_LIN_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:789    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:895    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:902    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1013   .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1020   .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1034   .text.HAL_UART_DeInit:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1041   .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1098   .text.HAL_UART_Transmit:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1105   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1272   .text.HAL_UART_Receive:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1279   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1455   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1462   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1525   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1532   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1667   .text.HAL_UART_Transmit_DMA:00000078 $d
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3282   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3467   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3560   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1674   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1681   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1897   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:1904   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:2123   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:2130   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:2292   .text.HAL_UARTEx_ReceiveToIdle:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:2299   .text.HAL_UARTEx_ReceiveToIdle:00000000 HAL_UARTEx_ReceiveToIdle
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:2533   .text.HAL_UARTEx_GetRxEventType:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:2540   .text.HAL_UARTEx_GetRxEventType:00000000 HAL_UARTEx_GetRxEventType
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:2557   .text.HAL_UART_Abort:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:2564   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:2871   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:2878   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3018   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3025   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3255   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3262   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 227


C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3276   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3404   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3410   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3440   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3447   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3461   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3491   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3498   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3512   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3519   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3533   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3540   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3554   .text.UART_DMAError:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3642   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3648   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3677   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3684   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3698   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:3705   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4048   .text.HAL_UART_Abort_IT:0000011c $d
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4119   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4060   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4054   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4113   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4172   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4179   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4193   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4200   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4352   .text.HAL_UART_AbortTransmit_IT:0000007c $d
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4363   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4357   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4393   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4400   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4414   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4421   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4665   .text.HAL_UART_AbortReceive_IT:000000b8 $d
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4676   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4670   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4708   .text.HAL_UARTEx_RxEventCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4715   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4729   .text.UART_Receive_IT:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4735   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4952   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:4959   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:5625   .text.HAL_UART_IRQHandler:00000274 $d
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:5630   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:5636   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:5676   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:5682   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:5905   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:5912   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:5992   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:5999   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6081   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6088   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6170   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6177   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s 			page 228


C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6230   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6237   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6290   .text.HAL_UART_GetState:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6297   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6319   .text.HAL_UART_GetError:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6326   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6343   .text.UART_Start_Receive_IT:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6350   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6399   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6406   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6458   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6465   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 HAL_UARTEx_ReceiveToIdle_IT
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6602   .text.UART_Start_Receive_DMA:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6609   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6810   .text.UART_Start_Receive_DMA:00000098 $d
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6817   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6824   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6876   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccuRhRrm.s:6883   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 HAL_UARTEx_ReceiveToIdle_DMA

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
